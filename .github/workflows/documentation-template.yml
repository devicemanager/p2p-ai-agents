name: 📝 Generate Documentation Template

on:
  workflow_dispatch:
    inputs:
      doc_type:
        description: 'Type of documentation to generate'
        required: true
        default: 'implementation'
        type: choice
        options:
        - implementation
        - architecture
        - user-guide
      component_name:
        description: 'Component/Guide name (e.g., NetworkProtocol, UserAuth)'
        required: true
        type: string
      output_path:
        description: 'Output path (optional, will use default if empty)'
        required: false
        type: string
      status:
        description: 'Implementation status (for implementation docs)'
        required: false
        default: 'In Development'
        type: choice
        options:
        - In Development
        - Completed
        - Planned
        - Deprecated
      difficulty:
        description: 'Difficulty level (for user guides)'
        required: false
        default: 'Beginner'
        type: choice
        options:
        - Beginner
        - Intermediate
        - Advanced

jobs:
  generate-template:
    name: 📝 Generate Documentation Template
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: ⚙️ Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "Documentation Bot"
        
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 📝 Generate Documentation Template
      run: |
        echo "📝 Generating ${{ inputs.doc_type }} documentation for ${{ inputs.component_name }}"
        
        # Build command
        cmd="python scripts/generate_docs.py ${{ inputs.doc_type }} '${{ inputs.component_name }}'"
        
        # Add optional parameters
        if [[ -n "${{ inputs.output_path }}" ]]; then
          cmd="$cmd --output '${{ inputs.output_path }}'"
        fi
        
        if [[ "${{ inputs.doc_type }}" == "implementation" ]]; then
          cmd="$cmd --status '${{ inputs.status }}'"
        fi
        
        if [[ "${{ inputs.doc_type }}" == "user-guide" ]]; then
          cmd="$cmd --difficulty '${{ inputs.difficulty }}'"
        fi
        
        # Execute command
        eval $cmd
        
    - name: 📋 Create Template Summary
      run: |
        # Determine the generated file path
        if [[ -n "${{ inputs.output_path }}" ]]; then
          generated_file="docs/${{ inputs.output_path }}"
        else
          case "${{ inputs.doc_type }}" in
            "implementation")
              generated_file="docs/implementation/${{ inputs.component_name }}.md"
              ;;
            "architecture")
              generated_file="docs/architecture/${{ inputs.component_name }}.md"
              ;;
            "user-guide")
              generated_file="docs/user-guides/${{ inputs.component_name }}.md"
              ;;
          esac
        fi
        
        # Convert to lowercase for filename
        generated_file=$(echo "$generated_file" | tr '[:upper:]' '[:lower:]')
        
        echo "## 📝 New Documentation Template Generated" > template_summary.md
        echo "" >> template_summary.md
        echo "**Type**: ${{ inputs.doc_type }}" >> template_summary.md
        echo "**Component**: ${{ inputs.component_name }}" >> template_summary.md
        echo "**File**: \`$generated_file\`" >> template_summary.md
        
        if [[ "${{ inputs.doc_type }}" == "implementation" ]]; then
          echo "**Status**: ${{ inputs.status }}" >> template_summary.md
        fi
        
        if [[ "${{ inputs.doc_type }}" == "user-guide" ]]; then
          echo "**Difficulty**: ${{ inputs.difficulty }}" >> template_summary.md
        fi
        
        echo "" >> template_summary.md
        echo "### 📋 Next Steps:" >> template_summary.md
        echo "1. 📝 Review the generated template" >> template_summary.md
        echo "2. ✏️ Fill in the \`[PLACEHOLDER]\` sections" >> template_summary.md
        echo "3. 🔗 Update cross-references in related documentation" >> template_summary.md
        echo "4. 📚 Add the new document to relevant index files" >> template_summary.md
        echo "5. 🧪 Test any code examples included" >> template_summary.md
        echo "" >> template_summary.md
        echo "### 🔧 Template Features:" >> template_summary.md
        echo "- ✅ Consistent structure and formatting" >> template_summary.md
        echo "- ✅ Smart defaults based on document type" >> template_summary.md
        echo "- ✅ Automatic version and date stamping" >> template_summary.md
        echo "- ✅ Cross-reference placeholders" >> template_summary.md
        echo "- ✅ Code example templates" >> template_summary.md
        echo "" >> template_summary.md
        echo "---" >> template_summary.md
        echo "*Generated by Documentation Template Bot 🤖*" >> template_summary.md
        
        # Store the generated file path for later steps
        echo "GENERATED_FILE=$generated_file" >> $GITHUB_ENV
        
    - name: 💾 Commit New Template
      run: |
        git add .
        git commit -m "📝 docs: add ${{ inputs.doc_type }} template for ${{ inputs.component_name }}

        Generated template with smart defaults:
        - Type: ${{ inputs.doc_type }}
        - Component: ${{ inputs.component_name }}
        - File: $GENERATED_FILE
        
        Next steps:
        - Fill in [PLACEHOLDER] sections
        - Update cross-references
        - Add to relevant indexes

        Generated by GitHub Actions workflow"
        
    - name: 🚀 Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: docs/template-${{ inputs.component_name }}-${{ github.run_number }}
        title: "📝 Add ${{ inputs.doc_type }} documentation template for ${{ inputs.component_name }}"
        body-path: template_summary.md
        labels: |
          documentation
          template
          ${{ inputs.doc_type }}
        delete-branch: true
        
    - name: 📤 Upload Template Info
      uses: actions/upload-artifact@v4
      with:
        name: template-generation-info
        path: |
          template_summary.md
          ${{ env.GENERATED_FILE }}
        retention-days: 30

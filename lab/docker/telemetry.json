{
    "github.copilot-chat-0.29.2025062601": {
        "events": {
            "GitHub.copilot-chattypescript-context-plugin.completion-context.speculative": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                },
                "originalrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The original request id for which this is a speculative request"
                },
                "numberofitems": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of items in the speculative request",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.ok": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                },
                "filesize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The size of the file",
                    "isMeasurement": true
                },
                "completioncontext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Kind of completion context"
                },
                "nodepath": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The syntax kind path to the AST node the position resolved to."
                },
                "cancelled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request got cancelled on the client side"
                },
                "timedout": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request timed out on the server side"
                },
                "servertime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time taken on the server side",
                    "isMeasurement": true
                },
                "contextcomputetime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time taken on the server side to compute the context",
                    "isMeasurement": true
                },
                "timetaken": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time taken to provide the completion",
                    "isMeasurement": true
                },
                "tokenbudgetexhausted": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the token budget was exhausted"
                },
                "blueprints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of blueprints",
                    "isMeasurement": true
                },
                "signatures": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of signatures",
                    "isMeasurement": true
                },
                "superclasses": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of super classes",
                    "isMeasurement": true
                },
                "generalscopes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of general scopes",
                    "isMeasurement": true
                },
                "completions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of traditional completion scopes",
                    "isMeasurement": true
                },
                "neighborfiles": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of neighbor files",
                    "isMeasurement": true
                },
                "module": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of modules",
                    "isMeasurement": true
                },
                "moduleresolution": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of moduleResolutions",
                    "isMeasurement": true
                },
                "lib": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of libs",
                    "isMeasurement": true
                },
                "target": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of targets",
                    "isMeasurement": true
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of versions",
                    "isMeasurement": true
                },
                "totalsize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total size of all context items",
                    "isMeasurement": true
                },
                "items": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Detailed information about each context item delivered."
                },
                "cachehits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cache hits",
                    "isMeasurement": true
                },
                "isspeculative": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was speculative"
                },
                "beforecachestate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The cache state before the request was sent"
                },
                "aftercachestate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The cache state after the request was sent"
                },
                "cacheditemsforspeculativerequest": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was cached for a speculative request",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.error": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context errors",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                },
                "code": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The failure code",
                    "isMeasurement": true
                },
                "message": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure message"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.on-timeout": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context on timeout",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "items": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Detailed information about each context item delivered."
                },
                "blueprints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of blueprints",
                    "isMeasurement": true
                },
                "signatures": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of signatures",
                    "isMeasurement": true
                },
                "superclasses": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of super classes",
                    "isMeasurement": true
                },
                "generalscopes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of general scopes",
                    "isMeasurement": true
                },
                "completions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of traditional completion scopes",
                    "isMeasurement": true
                },
                "neighborfiles": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of neighbor files",
                    "isMeasurement": true
                },
                "module": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of modules",
                    "isMeasurement": true
                },
                "moduleresolution": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of moduleResolutions",
                    "isMeasurement": true
                },
                "lib": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of libs",
                    "isMeasurement": true
                },
                "target": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of targets",
                    "isMeasurement": true
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of versions",
                    "isMeasurement": true
                },
                "totalsize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total size of all context items",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.failed": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context in failure case",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                },
                "code:": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The failure code"
                },
                "message": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure message"
                },
                "stack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure stack"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.cancelled": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context in cancellation case",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.activation.ok": {
                "owner": "dirkb",
                "comment": "Telemetry for TypeScript server plugin",
                "session": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the TypeScript server had a session"
                },
                "supported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the TypeScript server version is supported"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The version of the TypeScript server"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.activation.failed": {
                "owner": "dirkb",
                "comment": "Telemetry for TypeScript server plugin",
                "location": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The location of the failure"
                },
                "part": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The part that errored"
                },
                "message": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure message"
                },
                "stack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure stack"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The version"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.activation.unknown-ping-response": {
                "owner": "dirkb",
                "comment": "Telemetry for TypeScript server plugin",
                "location": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The location of the failure"
                },
                "part": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The part that errored"
                },
                "response": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The response literal"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.integration.failed": {
                "owner": "dirkb",
                "comment": "Telemetry for Copilot inline chat integration.",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "document": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The document for which the integration failed"
                },
                "versionmismatch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The version mismatch"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.inline-completion-provider.registered": {
                "owner": "dirkb",
                "comment": "Telemetry for Copilot inline completions",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.inline-completion-provider.unregistered": {
                "owner": "dirkb",
                "comment": "Telemetry for Copilot inline completions",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                }
            },
            "GitHub.copilot-chatapplyPatch.trackEditSurvival": {
                "owner": "joyceerhl",
                "comment": "Tracks how much percent of the AI edits survived after 5 minutes of accepting",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "requestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from where the request was made"
                },
                "mapper": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The code mapper used strategy"
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatapplyPatchHealRate": {
                "owner": "connor4312",
                "comment": "Records how correct the healing of a patch was",
                "success": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the input was healed"
                }
            },
            "GitHub.copilot-chatapplyPatchToolInvoked": {
                "owner": "roblourens",
                "comment": "The apply_patch tool was invoked",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "interactionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current interaction."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the invocation was successful, or a failure reason"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                },
                "healed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the input was healed"
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the input was a notebook, 1 = yes, 0 = no, other = Unknown"
                }
            },
            "GitHub.copilot-chateditNotebook.toolUsed": {
                "owner": "donjayamanne",
                "comment": "Tracks the tool used to edit Notebook documents",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "resourcehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The hash of the resource of the current request turn. (Notebook Uri)"
                },
                "edittool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tool used to edit the notebook, one of 'notebookEdit' | 'applyPatch' | 'stringReplace' | 'newNotebookIntent' | 'editCodeIntent' | 'insertEdit' | 'createFile'"
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chateditNotebook.toolOutcome": {
                "owner": "donjayamanne",
                "comment": "Tracks the tool used to edit Notebook documents",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Outcome of the edit operation",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chateditNotebook.cellEditOps": {
                "owner": "donjayamanne",
                "comment": "Tracks the tool used to edit Notebook documents",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "insert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cell inserts",
                    "isMeasurement": true
                },
                "delete": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cell deletes",
                    "isMeasurement": true
                },
                "edit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cell edits",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chateditNotebook.editCellWithCodeMarker": {
                "owner": "donjayamanne",
                "comment": "Tracks the presence of code markers in code when editing Notebook cells",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "resourcehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The hash of the resource of the current request turn. (Notebook Uri)"
                },
                "hascodemarker": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether there any code markers are present",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chateditFileResult.diagnostics": {
                "owner": "roblourens",
                "comment": "Tracks whether new diagnostics were found after editing files",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "toolname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the tool that performed the edit"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                },
                "totalnewdiagnostics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of new diagnostics found across all files",
                    "isMeasurement": true
                },
                "fileswithnewdiagnostics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that had new diagnostics",
                    "isMeasurement": true
                },
                "totalfilesedited": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files that were edited",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattoolUse.runInTerminal": {
                "owner": "roblourens",
                "comment": "Understanding the usage of the runInTerminal tool",
                "result": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the tool ran successfully, or the type of error"
                },
                "strategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What strategy was used to execute the command (0=none, 1=basic, 2=rich)",
                    "isMeasurement": true
                },
                "usereditedcommand": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user edited the command",
                    "isMeasurement": true
                },
                "isbackground": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the command is a background command",
                    "isMeasurement": true
                },
                "isnewsession": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "Whether this was the first execution for the terminal session"
                },
                "outputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "How many lines of output were produced, this is -1 when isBackground is true or if there's an error"
                },
                "nonzeroexitcode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "Whether the command exited with a non-zero code (-1=error/unknown, 0=zero exit code, 1=non-zero)"
                },
                "timingconnectms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "How long the terminal took to start up and connect to"
                },
                "timingexecutems": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "How long the command took to execute"
                }
            },
            "GitHub.copilot-chatrunNotebookCellInvoked": {
                "owner": "amunger",
                "comment": "Tracks the usage and result ",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "resourcehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The hash of the resource of the current request turn. (Notebook Uri)"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                },
                "result": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of the operation: success, failure, or unknown."
                },
                "resultinfo": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason for failure if the result is failure."
                }
            },
            "GitHub.copilot-chatgithubRepoTool.prepare.error": {
                "owner": "mjbvz",
                "comment": "Tracks errors for the GitHub repo tool prepare step",
                "errorid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "General reason why the search failed"
                },
                "errordetails": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "More detailed info about the failure"
                }
            },
            "GitHub.copilot-chatcodeMapper.trackEditSurvival": {
                "owner": "aeschli",
                "comment": "Tracks how much percent of the AI edits survived after 5 minutes of accepting",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "requestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from where the request was made"
                },
                "mapper": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The code mapper used: One of 'fast', 'fast-lora', 'full' and 'patch'"
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "speculationrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the speculation request."
                },
                "chatrequestmodel": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the base chat request to generate the edit object."
                }
            },
            "GitHub.copilot-chatreplaceStringToolInvoked": {
                "owner": "roblourens",
                "comment": "The replace_string tool was invoked",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "interactionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current interaction."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the invocation was successful, or a failure reason"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook, 1 = yes, 0 = no, other = unknown.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatnewNotebookTool.outcome": {
                "owner": "donjayamanne",
                "comment": "Tracks the outcome of new notebook tool",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The outcome of the tool call."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chatreadFileToolInvoked": {
                "owner": "roblourens",
                "comment": "The read_file tool was invoked",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "interactionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current interaction."
                },
                "tooloutcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the invocation was successful, or a failure reason"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                },
                "linesread": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of lines that were read",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatonboardDebug.configGenerated": {
                "owner": "connor4312",
                "comment": "Reports a generated config for the copilot-debug command",
                "configgenerated": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether a config was generated",
                    "isMeasurement": true
                },
                "configtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "binary": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Binary executed with the command"
                },
                "debugtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Debug type generated"
                }
            },
            "GitHub.copilot-chaturiHandler": {
                "owner": "lramos15",
                "comment": "Reports when the uri handler is called in the copilot extension",
                "referrer": {
                    "classification": "SystemMetaData",
                    "purpose": "BusinessInsight",
                    "comment": "The referrer query param for the uri"
                }
            },
            "GitHub.copilot-chatcopilot.search.request": {
                "owner": "osortega",
                "comment": "Copilot search request.",
                "chunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of copilot search code chunks.",
                    "isMeasurement": true
                },
                "rankresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of the copilot search ranking."
                },
                "rankresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of the results from copilot search ranking.",
                    "isMeasurement": true
                },
                "combinedresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of combined results from copilot search.",
                    "isMeasurement": true
                },
                "chunksearchduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the chunk search",
                    "isMeasurement": true
                },
                "llmfilteringduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the LLM filtering",
                    "isMeasurement": true
                },
                "llmbestrank": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Best rank (lowest index) among LLM-selected chunks in the original retrieval ranking.",
                    "isMeasurement": true
                },
                "llmworstrank": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Worst rank (highest index) among LLM-selected chunks in the original retrieval ranking.",
                    "isMeasurement": true
                },
                "llmselectedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of chunks selected by LLM from the initial retrieval.",
                    "isMeasurement": true
                },
                "rawllmrankingresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of raw results returned by the LLM.",
                    "isMeasurement": true
                },
                "parseresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates the result of parsing the LLM response."
                },
                "strategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates the strategy used for the search."
                }
            },
            "GitHub.copilot-chatsemanticSearch.ranking": {
                "owner": "rebornix",
                "comment": "Semantic search request ranking.",
                "llmbestrank": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Best rank (lowest index) among LLM-selected chunks in the original retrieval ranking.",
                    "isMeasurement": true
                },
                "llmworstrank": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Worst rank (highest index) among LLM-selected chunks in the original retrieval ranking.",
                    "isMeasurement": true
                },
                "llmselectedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of chunks selected by LLM from the initial retrieval.",
                    "isMeasurement": true
                },
                "rawllmrankingresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of raw results returned by the LLM.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcopilot.search.keywords": {
                "owner": "osortega",
                "comment": "Copilot keywords request.",
                "keywordresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of the copilot keywords request."
                },
                "keywordscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of keywords found by copilot search.",
                    "isMeasurement": true
                },
                "keywordsearchduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the keyword search",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatonboardDebug.commandExecuted": {
                "owner": "connor4312",
                "comment": "Reports usages of the copilot-debug command",
                "binary": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Binary executed with the command"
                }
            },
            "GitHub.copilot-chatpanel.action.filelink": {
                "owner": "digitarald",
                "comment": "Clicks on file links in the panel response",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the chat request."
                }
            },
            "GitHub.copilot-chatpanel.action.symbollink": {
                "owner": "digitarald",
                "comment": "Clicks on symbol links in the panel response",
                "hadmatch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the symbol was found.",
                    "isMeasurement": true
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the chat request."
                }
            },
            "GitHub.copilot-chatpanel.action.openSymbolFromReferencesLink": {
                "owner": "mjbvz",
                "comment": "Clicks on symbol links in the panel response",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the chat request."
                },
                "resolveddestinationtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How the link was actually resolved."
                }
            },
            "GitHub.copilot-chatcodeBlock.action.goTo": {
                "owner": "mjbvz",
                "comment": "Counts interactions with code blocks in chat responses",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The go to command being run."
                },
                "codeblockid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique hash of the code block."
                }
            },
            "GitHub.copilot-chatcookbook.accessed": {
                "owner": "luabud",
                "comment": "Reports when a cookbook entry is accessed for a diagnostic.",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "diagnosticcode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The diagnostic code accessed in the cookbook."
                },
                "provider": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The tool which is the diagnostic provider."
                }
            },
            "GitHub.copilot-chatcodemapper.completeCodeBlock": {
                "owner": "aeschli",
                "comment": "Sent when a codemapper request is received for a complete code block that contains no ...existing code... comments."
            },
            "GitHub.copilot-chatcodemapper.request": {
                "owner": "aeschli",
                "comment": "Metadata about the code mapper request",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "requestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from where the request was made"
                },
                "mapper": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The mapper used: One of 'fast', 'fast-lora', 'full' and 'patch'"
                },
                "outcomeannotations": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Annotations about the outcome of the request."
                }
            },
            "GitHub.copilot-chatspeculation.response.success": {
                "owner": "alexdima",
                "comment": "Report quality details for a successful speculative response.",
                "chatrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "chatrequestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source of the current turn request"
                },
                "isnoopedit": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the response text is identical to the speculation."
                },
                "speculationrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "containselidedcodecomments": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the response text contains elided code comments."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The model used for this speculation request"
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens",
                    "isMeasurement": true
                },
                "speculationtokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of speculation tokens",
                    "isMeasurement": true
                },
                "responsetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of response tokens",
                    "isMeasurement": true
                },
                "addedlines": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of lines added",
                    "isMeasurement": true
                },
                "removedlines": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of lines removed",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether this is a notebook",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to complete the request",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatspeculation.response.error": {
                "owner": "alexdima",
                "comment": "Report quality issue for when a speculative response failed.",
                "errormessage": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the error"
                },
                "chatrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "speculationrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the speculation request"
                },
                "chatrequestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source of the current turn request"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The model used for this speculation request"
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens",
                    "isMeasurement": true
                },
                "speculationtokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of speculation tokens",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether this is a notebook",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatspeculation.response.loop": {
                "owner": "joyceerhl",
                "comment": "Report when the model appears to have gone into a loop.",
                "hasloop": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the model appears to have gone into a loop."
                },
                "speculationrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The language id of the document"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The model used for this speculation request"
                },
                "documentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Length of original file",
                    "isMeasurement": true
                },
                "rewrittenlength": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Length of original file",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatprompt.invalidreference": {
                "owner": "jrieken",
                "comment": "Tracks bad prompt references",
                "stack": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Error stack"
                }
            },
            "GitHub.copilot-chatsummarizedConversationHistory": {
                "owner": "roblourens",
                "comment": "Tracks when summarization happens and what the outcome was",
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The success state or failure reason of the summarization."
                },
                "detailedoutcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A more detailed error message."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model ID used for the summarization."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request ID from the summarization call."
                },
                "numrounds": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tool call rounds before this summarization was triggered.",
                    "isMeasurement": true
                },
                "numroundssincelastsummarization": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tool call rounds since the last summarization.",
                    "isMeasurement": true
                },
                "lastusedtool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the last tool used before summarization."
                },
                "isduringtoolcalling": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this summarization was triggered during a tool calling loop.",
                    "isMeasurement": true
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the current chat conversation."
                }
            },
            "GitHub.copilot-chattoolCallValidation": {
                "owner": "donjayamanne",
                "comment": "Validation failure for a known tool invocation",
                "validationresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result of the tool input validation. valid, invalid and unknown"
                },
                "toolname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the tool being invoked."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                }
            },
            "GitHub.copilot-chateditNotebook.validation": {
                "owner": "donjayamanne",
                "comment": "Validation failure for a Edit Notebook tool invocation",
                "validationresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result of the tool input validation. valid, invalid and unknown"
                },
                "edittype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of edit that was attempted. insert, delete, edit or unknown"
                },
                "unknownprops": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "List of unknown properties in the input"
                },
                "missingprops": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "List of missing properties in the input"
                },
                "newcodetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of code, whether its string, string[], object, object[] or unknown"
                },
                "cellid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the cell, TOP, BOTTOM, cellid, empty or unknown"
                },
                "explanation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The explanation for the edit. provided, empty and unknown"
                },
                "inputparsed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the input was parsed as JSON",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                }
            },
            "GitHub.copilot-chatprojectLabels": {
                "owner": "digitarald",
                "comment": "Reports quality of labels detected in a workspace",
                "labels": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique workspace label count."
                },
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique workspace labels in context.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceContext.perf.prepareWorkspaceChunks": {
                "owner": "mjbvz",
                "comment": "Understanding the performance of including workspace context",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "resultchunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of chunks returned",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceContext.perf.prepare": {
                "owner": "mjbvz",
                "comment": "Understanding how effective ADA re-ranking is",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceResolver.error": {
                "owner": "mjbvz",
                "comment": "Tracks errors for resolving workspace information",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Error type"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Detailed error reason"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                }
            },
            "GitHub.copilot-chatworkspaceResolver.success": {
                "owner": "mjbvz",
                "comment": "Tracks errors for resolving workspace information",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Success type"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "totalkeywordcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of keywords returned.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgit.generateCommitMessage": {
                "owner": "lszomoru",
                "comment": "Metadata about the git commit message generation",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result type of the response."
                },
                "attemptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many times the user has retried.",
                    "isMeasurement": true
                },
                "difffilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of files in the commit.",
                    "isMeasurement": true
                },
                "difflength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The length of the diffs in the commit.",
                    "isMeasurement": true
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the request.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgit.generateCommitMessageIncorrectResponseFormat": {
                "owner": "lszomoru",
                "comment": "Metadata about the git commit message generation when the response is not in the expected format",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "responseformat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of the response format."
                }
            },
            "GitHub.copilot-chatprovideRenameSuggestions": {
                "owner": "ulugbekna",
                "comment": "Telemetry for rename suggestions provided",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language ID of the document."
                },
                "cancellationreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Specify when exactly during the provider call the cancellation happened. Empty string if the cancellation didn't happen."
                },
                "fetchresulttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of a fetch to endpoint"
                },
                "replyformat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Copilot reply format: 'jsonStringArray' | 'multiJsonStringArray' | 'list' | 'unknown'"
                },
                "triggerkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Rename suggestion trigger kind - 'automatic' | 'manual'"
                },
                "promptconstructiontime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time it took to construct the prompt",
                    "isMeasurement": true
                },
                "timeelapsedbeforedelay": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time elapsed before delay starts",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Token count of the prompt",
                    "isMeasurement": true
                },
                "expecteddelaybeforefetch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Expected delay before fetch dictated by the experiment 'renameSuggestionsDelayBeforeFetch'",
                    "isMeasurement": true
                },
                "actualdelaybeforefetch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Actual delay before fetch computed as 'expectedDelay - promptComputationTime'",
                    "isMeasurement": true
                },
                "successresponsecharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Character count in model response (for response.type == 'success')",
                    "isMeasurement": true
                },
                "responseunusedcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Character count in model response that was unused, e.g., rename explanations, response format overhead",
                    "isMeasurement": true
                },
                "fetchtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time it took to fetch from endpoint",
                    "isMeasurement": true
                },
                "symbolnamescount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of suggested names",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatapplyPatch.inResponse": {
                "owner": "digitarald",
                "comment": "Metadata about an inline response from the model",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                }
            },
            "GitHub.copilot-chattoolCallDetails": {
                "owner": "roblourens",
                "comment": "Records information about tool calls during a request.",
                "intentid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the invoked intent."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the current chat conversation."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request succeeded or failed."
                },
                "numrequests": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The total number of requests made",
                    "isMeasurement": true
                },
                "turnindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The conversation turn index",
                    "isMeasurement": true
                },
                "toolcounts": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of times each tool was used"
                },
                "sessionduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time since the session started",
                    "isMeasurement": true
                },
                "turnduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time since the turn started",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many tokens were in the last generated prompt.",
                    "isMeasurement": true
                },
                "messagecharlen": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were in the user message.",
                    "isMeasurement": true
                },
                "availabletoolcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How number of tools that were available.",
                    "isMeasurement": true
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the final response was successful or how it failed."
                },
                "invalidtoolcallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tool call rounds that had an invalid tool call."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chatpanel.request": {
                "owner": "digitarald",
                "comment": "Metadata about one message turn in a chat conversation.",
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "contexttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The context parts which were used in providing the response."
                },
                "prompttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The prompt types and their length which were used in providing the response."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the current chat conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "responseid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message response."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the response was successful or how it failed."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language of the active editor."
                },
                "codeblocks": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Code block languages in the response."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "turn": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many turns have been made in the conversation.",
                    "isMeasurement": true
                },
                "textblocks": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "For text-only responses (no code), how many paragraphs were in the response.",
                    "isMeasurement": true
                },
                "links": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Symbol and file links in the response.",
                    "isMeasurement": true
                },
                "maybeofftopic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the response sounds like it got rejected due to the request being off-topic.",
                    "isMeasurement": true
                },
                "messagetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were in the user message.",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were in the generated prompt.",
                    "isMeasurement": true
                },
                "userpromptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many user messages were in the generated prompt.",
                    "isMeasurement": true
                },
                "responsetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were in the response.",
                    "isMeasurement": true
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the final request.",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to get the first token.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                },
                "codegeninstructionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions are in the request.",
                    "isMeasurement": true
                },
                "codegeninstructionslength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whats the length of the code generation instructions that were added to request.",
                    "isMeasurement": true
                },
                "codegeninstructionsfilteredcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions were filtered.",
                    "isMeasurement": true
                },
                "codegeninstructionfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instruction files were read.",
                    "isMeasurement": true
                },
                "codegeninstructionsettingscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions originated from settings.",
                    "isMeasurement": true
                },
                "toolcounts": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of times each tool was used"
                },
                "numtoolcalls": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The total number of tool calls",
                    "isMeasurement": true
                },
                "availabletoolcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How number of tools that were available.",
                    "isMeasurement": true
                },
                "temporalctxfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many temporal document-parts where included",
                    "isMeasurement": true
                },
                "temporalctxtotalcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many characters all temporal document-parts where included",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatinline.request": {
                "owner": "digitarald",
                "comment": "Metadata about an inline response from the model",
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "contexttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The context parts which were used in providing the response."
                },
                "prompttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The prompt types and their length which were used in providing the response."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language of the current document."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result type of the response."
                },
                "replytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How response is shown in the interface."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "diagnosticsprovider": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The diagnostics provider."
                },
                "diagnosticcodes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The diagnostics codes in the file."
                },
                "selectiondiagnosticcodes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The selected diagnostics codes."
                },
                "firstturn": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the first turn in the conversation.",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is a notebook document.",
                    "isMeasurement": true
                },
                "messagetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many tokens are in the rest of the query, without the command.",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many tokens are in the overall prompt.",
                    "isMeasurement": true
                },
                "responsetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many tokens were in the response.",
                    "isMeasurement": true
                },
                "implicitcommand": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the command was implictly detected or provided by the user.",
                    "isMeasurement": true
                },
                "attemptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many times the user has retried.",
                    "isMeasurement": true
                },
                "selectionlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the current selection.",
                    "isMeasurement": true
                },
                "wholerangelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the expanded whole range.",
                    "isMeasurement": true
                },
                "editcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many edits are suggested.",
                    "isMeasurement": true
                },
                "editlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in all suggested edits.",
                    "isMeasurement": true
                },
                "markdowncharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were emitted as markdown to vscode in the response stream.",
                    "isMeasurement": true
                },
                "problemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current document.",
                    "isMeasurement": true
                },
                "selectionproblemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current selected code.",
                    "isMeasurement": true
                },
                "diagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current .",
                    "isMeasurement": true
                },
                "selectiondiagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the code at the selection.",
                    "isMeasurement": true
                },
                "outcomeannotations": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Annotations about the outcome of the request."
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the final request.",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to get the first token.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                },
                "temporalctxfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many temporal document-parts where included",
                    "isMeasurement": true
                },
                "temporalctxtotalcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many characters all temporal document-parts where included",
                    "isMeasurement": true
                },
                "codegeninstructionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions are in the request.",
                    "isMeasurement": true
                },
                "codegeninstructionslength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The length of the code generation instructions that were added to request.",
                    "isMeasurement": true
                },
                "codegeninstructionsfilteredcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions were filtered.",
                    "isMeasurement": true
                },
                "codegeninstructionfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instruction files were read.",
                    "isMeasurement": true
                },
                "codegeninstructionsettingscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions originated from settings.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatdevcontainer.generateConfig": {
                "owner": "chrmarti",
                "comment": "Metadata about the Dev Container Config generation",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result type of the response."
                },
                "templateid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The chosen template id."
                },
                "featureids": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The chosen feature ids."
                },
                "originalfilenamecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of filenames.",
                    "isMeasurement": true
                },
                "originalfilenamelength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The length of the filenames.",
                    "isMeasurement": true
                },
                "processedfilenamecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of filenames after processing.",
                    "isMeasurement": true
                },
                "processedfilenamelength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The length of the filenames after processing.",
                    "isMeasurement": true
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the request.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgetNodeToDocument": {
                "owner": "ulugbekna",
                "comment": "Info on success and properties of detecting AST node to document",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language ID of the document"
                },
                "typeofnodetodocument": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Type of the AST node offered to be documented (type defined by tree-sitter grammar for that language)"
                },
                "nodetodocumentstart": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Start offset of the AST node offered to be documented (type defined by tree-sitter grammar for that language)"
                },
                "nodetodocumentend": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "End offset of the AST node offered to be documented (type defined by tree-sitter grammar for that language)"
                },
                "selectionoffsetrangestart": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The start offset range of the selection in the document"
                },
                "selectionoffsetrangeend": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The end offset range of the selection in the document"
                },
                "wholerangeoffsetrangestart": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The start offset range of the inline-chat wholeRange"
                },
                "wholerangeoffsetrangeend": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The end offset range of the inline-chat wholeRange"
                },
                "timespentms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time (in milliseconds) spent on finding the AST node to document (approximate as it's an async call)",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgit.generateCommitMessageSurvival": {
                "owner": "lszomoru",
                "comment": "Tracks how much of the generated git commit message has survived",
                "attemptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many times the user has retried.",
                    "isMeasurement": true
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the suggested git commit message was used when the code change was committed.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatresponse.cancelled": {
                "owner": "digitarald",
                "comment": "Report canceled service responses for quality.",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Model selection for the response"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source for why the request was made"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the request"
                },
                "totaltokenmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum total token window",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens",
                    "isMeasurement": true
                },
                "tokencountmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum generated tokens",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "timetocancelled": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "isvisionrequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the request was for a vision model",
                    "isMeasurement": true
                },
                "isbyok": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was for a BYOK model",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatresponse.error": {
                "owner": "digitarald",
                "comment": "Report quality issue for when a service response failed.",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Type of issue"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Reason of issue"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Model selection for the response"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source for why the request was made"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the request"
                },
                "totaltokenmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum total token window",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens",
                    "isMeasurement": true
                },
                "tokencountmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum generated tokens",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "isvisionrequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the request was for a vision model",
                    "isMeasurement": true
                },
                "isbyok": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was for a BYOK model",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatresponse.success": {
                "owner": "digitarald",
                "comment": "Report quality details for a successful service response.",
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Reason for why a response finished"
                },
                "filterreason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Reason for why a response was filtered"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source of the initial request"
                },
                "initiatortype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was initiated by a user or an agent"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Model selection for the response"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "totaltokenmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum total token window",
                    "isMeasurement": true
                },
                "clientprompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens, locally counted",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens, server side counted",
                    "isMeasurement": true
                },
                "promptcachetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens hitting cache as reported by server",
                    "isMeasurement": true
                },
                "tokencountmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum generated tokens",
                    "isMeasurement": true
                },
                "tokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of generated tokens",
                    "isMeasurement": true
                },
                "acceptedpredictiontokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prediction that appeared in the completion",
                    "isMeasurement": true
                },
                "rejectedpredictiontokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prediction that appeared in the completion",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to complete the request",
                    "isMeasurement": true
                },
                "isvisionrequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the request was for a vision model",
                    "isMeasurement": true
                },
                "isbyok": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was for a BYOK model",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatconversation.repetition.detected": {
                "owner": "lramos15",
                "comment": "Calculates the number of repetitions in a response. Useful for loop detection",
                "finishreason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Reason for why a response finished. Helps identify cancellation vs length limits"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id for this message request."
                },
                "lengthofline": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Length of the repeating line, in characters.",
                    "isMeasurement": true
                },
                "numberofrepetitions": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of times the line repeats.",
                    "isMeasurement": true
                },
                "totallines": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of total lines in the response.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatintentDetection": {
                "owner": "ulugbekna",
                "comment": "Intent detection telemetry.",
                "chatlocation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which chat (panel or inline) intent detection is used for."
                },
                "preferredintent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which intent was initially provided as preferred."
                },
                "detectedintent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Intent that was detected by Copilot"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language ID of the document for which intent detection happened."
                },
                "isrerunwithoutintentdetection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user disliked the detected intent and tried to rerun without it."
                }
            },
            "GitHub.copilot-chatfeedback.generateDiagnostics": {
                "owner": "chrmarti",
                "comment": "Metadata about the code feedback generation",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which backend generated the comment."
                },
                "messageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result type of the response."
                },
                "documenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of document (e.g., text or notebook)."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "inputtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What type of input (e.g., selection or change)."
                },
                "commenttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of comment (e.g., correctness or performance)."
                },
                "promptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of prompts run.",
                    "isMeasurement": true
                },
                "numberofdiagnostics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of diagnostics.",
                    "isMeasurement": true
                },
                "inputdocumentcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many documents were part of the input.",
                    "isMeasurement": true
                },
                "inputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many (selected or changed) lines were part of the input.",
                    "isMeasurement": true
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the request.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreview.comment.vote": {
                "owner": "chrmarti",
                "comment": "Metadata about votes on review comments",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which backend generated the comment."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "documenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of document (e.g., text or notebook)."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "inputtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What type of input (e.g., selection or change)."
                },
                "commenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of comment (e.g., correctness or performance)."
                },
                "useraction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What action the user triggered (e.g., helpful, unhelpful, apply or discard)."
                },
                "commentindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Original index of the comment in the generated comments.",
                    "isMeasurement": true
                },
                "actioncount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of previously logged actions on the comment.",
                    "isMeasurement": true
                },
                "inputdocumentcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many documents were part of the input.",
                    "isMeasurement": true
                },
                "inputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many (selected or changed) lines were part of the input.",
                    "isMeasurement": true
                },
                "promptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of prompts run.",
                    "isMeasurement": true
                },
                "totalcomments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of comments.",
                    "isMeasurement": true
                },
                "comments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many comments are affected by the action.",
                    "isMeasurement": true
                },
                "commentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters long the review comment is.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreview.comment.action": {
                "owner": "chrmarti",
                "comment": "Metadata about actions on review comments",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which backend generated the comment."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "documenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of document (e.g., text or notebook)."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "inputtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What type of input (e.g., selection or change)."
                },
                "commenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of comment (e.g., correctness or performance)."
                },
                "useraction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What action the user triggered (e.g., helpful, unhelpful, apply or discard)."
                },
                "commentindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Original index of the comment in the generated comments.",
                    "isMeasurement": true
                },
                "actioncount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of previously logged actions on the comment.",
                    "isMeasurement": true
                },
                "inputdocumentcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many documents were part of the input.",
                    "isMeasurement": true
                },
                "inputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many (selected or changed) lines were part of the input.",
                    "isMeasurement": true
                },
                "promptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of prompts run.",
                    "isMeasurement": true
                },
                "totalcomments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of comments.",
                    "isMeasurement": true
                },
                "comments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many comments are affected by the action.",
                    "isMeasurement": true
                },
                "commentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters long the review comment is.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreview.discardCommentRangeSurvival": {
                "owner": "chrmarti",
                "comment": "Tracks how much percent of the commented range surived after 5 minutes of discarding",
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which backend generated the comment."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "documenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of document (e.g., text or notebook)."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "inputtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What type of input (e.g., selection or change)."
                },
                "commenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of comment (e.g., correctness or performance)."
                },
                "useraction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What action the user triggered (e.g., helpful, unhelpful, apply or discard)."
                },
                "commentindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Original index of the comment in the generated comments.",
                    "isMeasurement": true
                },
                "actioncount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of previously logged actions on the comment.",
                    "isMeasurement": true
                },
                "inputdocumentcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many documents were part of the input.",
                    "isMeasurement": true
                },
                "inputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many (selected or changed) lines were part of the input.",
                    "isMeasurement": true
                },
                "promptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of prompts run.",
                    "isMeasurement": true
                },
                "totalcomments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of comments.",
                    "isMeasurement": true
                },
                "comments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many comments are affected by the action.",
                    "isMeasurement": true
                },
                "commentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters long the review comment is.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatpanel.action.copy": {
                "owner": "digitarald",
                "comment": "Counts copied code blocks from a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "codeblockindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Index of the code block in the response.",
                    "isMeasurement": true
                },
                "copytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the copy was done via the context menu or the toolbar.",
                    "isMeasurement": true
                },
                "charactercount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of characters copied.",
                    "isMeasurement": true
                },
                "linecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of lines copied.",
                    "isMeasurement": true
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                }
            },
            "GitHub.copilot-chatpanel.action.insert": {
                "owner": "digitarald",
                "comment": "Counts inserts on a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "codeblockindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Index of the code block in the response.",
                    "isMeasurement": true
                },
                "charactercount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of characters copied.",
                    "isMeasurement": true
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                },
                "newfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the insert was done in a new file.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatpanel.action.runinterminal": {
                "owner": "digitarald",
                "comment": "Counts generic actions on a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "blocklanguage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the code block in the response."
                },
                "codeblockindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Index of the code block in the response.",
                    "isMeasurement": true
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                }
            },
            "GitHub.copilot-chatpanel.action.followup": {
                "owner": "digitarald",
                "comment": "Counts generic actions on a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the message request that is being followed-up."
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                }
            },
            "GitHub.copilot-chatpanel.edit.feedback": {
                "owner": "joyceerhl",
                "comment": "Counts accept/reject actions for a proposed edit from panel chat",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the message request that is being followed-up."
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The user decision taken for the edited file"
                },
                "hasremainingedits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there are additional unactioned edits in the file."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook.",
                    "isMeasurement": true
                },
                "isnotebookcell": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook cell.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatpanel.action.vote": {
                "owner": "digitarald",
                "comment": "Counts votes on a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "direction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the vote was positive or negative.",
                    "isMeasurement": true
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Preset value for why the user found the response unhelpful."
                }
            },
            "GitHub.copilot-chatinline.action.vote": {
                "owner": "digitarald",
                "comment": "Metadata about votes on inline code conversations",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "replytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How response is shown in the interface."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the inline assistant conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Preset value for why the user found the response unhelpful."
                },
                "vote": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user found the response helpful.",
                    "isMeasurement": true
                },
                "selectionlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the current selection.",
                    "isMeasurement": true
                },
                "wholerangelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the expanded whole range.",
                    "isMeasurement": true
                },
                "editcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many edits are suggested.",
                    "isMeasurement": true
                },
                "editlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in all suggested edits.",
                    "isMeasurement": true
                },
                "problemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current code.",
                    "isMeasurement": true
                },
                "selectionproblemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current selected code.",
                    "isMeasurement": true
                },
                "diagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current code.",
                    "isMeasurement": true
                },
                "selectiondiagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current selected code.",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatinline.done": {
                "owner": "digitarald",
                "comment": "Metadata about an inline code suggestion being accepted or undone",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "replytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How response is shown in the interface."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the inline assistant conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "accepted": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user accepted the suggested code or discarded it.",
                    "isMeasurement": true
                },
                "selectionlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the current selection.",
                    "isMeasurement": true
                },
                "wholerangelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the expanded whole range.",
                    "isMeasurement": true
                },
                "editcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many edits are suggested.",
                    "isMeasurement": true
                },
                "editlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in all suggested edits.",
                    "isMeasurement": true
                },
                "problemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current code.",
                    "isMeasurement": true
                },
                "selectionproblemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current selected code.",
                    "isMeasurement": true
                },
                "diagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current code.",
                    "isMeasurement": true
                },
                "selectiondiagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current code.",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatinline.trackEditSurvival": {
                "owner": "hediet",
                "comment": "Tracks how much percent of the AI edits surived after 5 minutes of accepting",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "replytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How response is shown in the interface."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the inline assistant conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "selectionlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the current selection.",
                    "isMeasurement": true
                },
                "wholerangelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the expanded whole range.",
                    "isMeasurement": true
                },
                "editcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many edits are suggested.",
                    "isMeasurement": true
                },
                "editlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in all suggested edits.",
                    "isMeasurement": true
                },
                "problemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current code.",
                    "isMeasurement": true
                },
                "selectionproblemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current selected code.",
                    "isMeasurement": true
                },
                "diagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current code.",
                    "isMeasurement": true
                },
                "selectiondiagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current selected code.",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatintent.fixTestFailure.actioned": {
                "owner": "connor4312",
                "comment": "Reports when we show a ",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Where the action was taken"
                }
            },
            "GitHub.copilot-chatcopilot.search.feedback": {
                "owner": "osortega",
                "comment": "Feedback telemetry for copilot search",
                "kind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Feedback provided by the user."
                },
                "chunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of copilot search code chunks.",
                    "isMeasurement": true
                },
                "rankresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of the copilot search ranking."
                },
                "rankresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of the results from copilot search ranking.",
                    "isMeasurement": true
                },
                "combinedresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of combined results from copilot search.",
                    "isMeasurement": true
                },
                "chunksearchduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the chunk search",
                    "isMeasurement": true
                },
                "llmfilteringduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the LLM filtering",
                    "isMeasurement": true
                },
                "strategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates the strategy used for the search."
                }
            },
            "GitHub.copilot-chatlanguagemodelrequest": {
                "owner": "jrieken",
                "comment": "Data about extensions using the language model",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is being used"
                },
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension identifier for which we make the request"
                },
                "extensionversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension version for which we make the request"
                },
                "tokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tokens",
                    "isMeasurement": true
                },
                "tokenlimit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tokens that can be used",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreportInlineEditSurvivalRate": {
                "owner": "hediet",
                "comment": "Reports the survival rate for an inline edit.",
                "opportunityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique identifier for an opportunity to show an NES."
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "arc": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The accepted and restrained character count.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatvscode.contentChangeForUnknownDocument": {
                "owner": "hediet",
                "comment": "Telemetry for verifying VSCode content change API consistency"
            },
            "GitHub.copilot-chatvscode.contentChangeInconsistencyDetected": {
                "owner": "hediet",
                "comment": "Telemetry for verifying VSCode content change API consistency",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Scheme of the currently open document."
                }
            },
            "GitHub.copilot-chatprovideInlineEdit": {
                "owner": "ulugbekna",
                "comment": "Telemetry for inline edit (NES) provided",
                "opportunityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique identifier for an opportunity to show an NES."
                },
                "headerrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique identifier of the network request which is also included in the fetch request header."
                },
                "providerid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "NES provider identifier (StatelessNextEditProvider)"
                },
                "documentshorteningstrategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Document shortening strategy, eg clipping or summarization"
                },
                "activedocumentlanguageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "LanguageId of the active document"
                },
                "acceptance": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "User acceptance of the edit"
                },
                "disposalreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason for disposal of NES"
                },
                "supersededbyopportunityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "UUID of the opportunity that superseded this edit"
                },
                "endpoint": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Endpoint for the request"
                },
                "nonexteditreasonkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason kind for no next edit"
                },
                "nonexteditreasonmessage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason message for no next edit"
                },
                "fetchresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Fetch result"
                },
                "fetcherror": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Fetch error message"
                },
                "pickednes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request had picked NES"
                },
                "diagnostictype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Type of diagnostics"
                },
                "diagnosticdroppedreasons": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reasons for dropping diagnostics NES suggestions"
                },
                "requestn": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Request number",
                    "isMeasurement": true
                },
                "hadstatelessnexteditprovidercall": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request had a stateless next edit provider call",
                    "isMeasurement": true
                },
                "statelessnexteditproviderduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of stateless next edit provider",
                    "isMeasurement": true
                },
                "nexteditproviderduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of next edit provider",
                    "isMeasurement": true
                },
                "isfromcache": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the edit was provided from cache",
                    "isMeasurement": true
                },
                "subsequenteditorder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Order of the subsequent edit",
                    "isMeasurement": true
                },
                "activedocumentoriginallinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of lines in the active document before shortening",
                    "isMeasurement": true
                },
                "activedocumentshortenedlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of lines in the active document after shortening",
                    "isMeasurement": true
                },
                "waspreviouslyrejected": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the edit was previously rejected",
                    "isMeasurement": true
                },
                "isshown": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the edit was shown",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook",
                    "isMeasurement": true
                },
                "logprobthreshold": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Log probability threshold for the edit",
                    "isMeasurement": true
                },
                "documentscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of documents",
                    "isMeasurement": true
                },
                "editscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of edits",
                    "isMeasurement": true
                },
                "activedocumenteditscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of edits in the active document",
                    "isMeasurement": true
                },
                "promptlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of lines in the prompt",
                    "isMeasurement": true
                },
                "promptcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of characters in the prompt",
                    "isMeasurement": true
                },
                "hadlowlogprobsuggestion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the suggestion had low log probability",
                    "isMeasurement": true
                },
                "neditssuggested": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of edits suggested",
                    "isMeasurement": true
                },
                "hasnextedit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there is a next edit",
                    "isMeasurement": true
                },
                "nexteditlogprob": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Log probability of the next edit",
                    "isMeasurement": true
                },
                "linedistancetomostrecentedit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Line distance to most recent edit",
                    "isMeasurement": true
                },
                "debouncetime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Debounce time",
                    "isMeasurement": true
                },
                "artificialdelay": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Artificial delay (aka backoff) on the response based on previous user acceptance/rejection in milliseconds",
                    "isMeasurement": true
                },
                "fetchstartedafterms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time from inline edit provider invocation to fetch init",
                    "isMeasurement": true
                },
                "ttft": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "fetchtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time from fetch init to end of stream",
                    "isMeasurement": true
                },
                "prompttokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prompt",
                    "isMeasurement": true
                },
                "responsetokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the response",
                    "isMeasurement": true
                },
                "cachedtokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cached tokens in the response",
                    "isMeasurement": true
                },
                "acceptedpredictiontokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prediction that appeared in the completion",
                    "isMeasurement": true
                },
                "rejectedpredictiontokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prediction that appeared in the completion",
                    "isMeasurement": true
                },
                "haddiagnosticsnes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request had diagnostics NES",
                    "isMeasurement": true
                },
                "hadllmnes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request had LLM NES",
                    "isMeasurement": true
                },
                "configisdiagnosticsnesenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether diagnostics NES is enabled",
                    "isMeasurement": true
                },
                "isnaturallanguagedominated": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the context is dominated by natural language",
                    "isMeasurement": true
                },
                "diagnostichasexistingsamefileimport": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the diagnostic has an existing same file import",
                    "isMeasurement": true
                },
                "diagnosticislocalimport": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the diagnostic is a local import",
                    "isMeasurement": true
                },
                "diagnosticalternativeimportscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of alternative imports for the diagnostic",
                    "isMeasurement": true
                },
                "diagnosticdistancetounknowndiagnostic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Distance to the unknown diagnostic",
                    "isMeasurement": true
                },
                "diagnosticdistancetoalternativediagnostic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Distance to the alternative diagnostic",
                    "isMeasurement": true
                },
                "diagnostichasalternativediagnosticforsamerange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there is an alternative diagnostic for the same range",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatpanel.edit.codeblocks": {
                "owner": "joyceerhl",
                "comment": "Records information about the proposed edit codeblocks in an editing session",
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the current chat conversation."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request succeeded or failed."
                },
                "workingsetcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of entries in the working set",
                    "isMeasurement": true
                },
                "uniquecodeblockuricount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of unique code block URIs",
                    "isMeasurement": true
                },
                "codeblockcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of code blocks in the response",
                    "isMeasurement": true
                },
                "codeblockwithuricount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of code blocks that had URIs",
                    "isMeasurement": true
                },
                "codeblockwithelidedcodecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of code blocks that had a ...existing code... comment",
                    "isMeasurement": true
                },
                "shellcodeblockcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of shell code blocks in the response",
                    "isMeasurement": true
                },
                "shellcodeblockwithuricount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of shell code blocks that had URIs",
                    "isMeasurement": true
                },
                "shellcodeblockwithelidedcodecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of shell code blocks that had a ...existing code... comment",
                    "isMeasurement": true
                },
                "editstepcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of edit steps in the session so far",
                    "isMeasurement": true
                },
                "sessionduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time since the session started",
                    "isMeasurement": true
                },
                "intentid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the intent being executed"
                }
            },
            "GitHub.copilot-chateditCodeIntent.promptRender": {
                "owner": "roblourens",
                "comment": "Understanding the performance of the edit code intent rendering",
                "promptrenderdurationincludingrunningtools": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of the prompt rendering, includes running tools",
                    "isMeasurement": true
                },
                "isagentmode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the prompt was for agent mode",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chateditSourceTracker.stats": {
                "owner": "hediet",
                "comment": "Reports distribution of AI vs user edited characters.",
                "mode": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "longterm or 5minWindow"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language id of the document."
                },
                "nesmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of nes modified characters",
                    "isMeasurement": true
                },
                "inlinecompletionscopilotmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of inline completions copilot modified characters",
                    "isMeasurement": true
                },
                "inlinecompletionsnesmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of inline completions nes modified characters",
                    "isMeasurement": true
                },
                "otheraimodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of other AI modified characters",
                    "isMeasurement": true
                },
                "unknownmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of unknown modified characters",
                    "isMeasurement": true
                },
                "usermodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of user modified characters",
                    "isMeasurement": true
                },
                "idemodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of IDE modified characters",
                    "isMeasurement": true
                },
                "totalmodifiedcharacters": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Total modified characters",
                    "isMeasurement": true
                },
                "istrackedbygit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the document is tracked by git."
                }
            },
            "GitHub.copilot-chatreportInlineEditArc": {
                "owner": "hediet",
                "comment": "Reports the accepted and retained character count for an inline completion/edit.",
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension id (copilot or copilot-chat), which provided this inline completion."
                },
                "opportunityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique identifier for an opportunity to show an inline completion or NES."
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "arc": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The accepted and restrained character count.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattoolCalling.invalidToolMessages": {
                "owner": "roblourens",
                "comment": "Provides info about invalid tool messages that were rendered in a prompt",
                "filterreasons": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reasons for filtering the messages."
                },
                "filtercount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of filtered messages.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattriggerSummarizeFailed": {
                "owner": "roblourens",
                "comment": "Tracks when triggering summarization failed - for example, a summary was created but not applied successfully.",
                "errorkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The success state or failure reason of the summarization."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model ID used for the summarization."
                }
            },
            "GitHub.copilot-chattokenizer.stats": {
                "owner": "jrieken",
                "comment": "Perf stats about tokenizers",
                "callcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How often tokenize was called",
                    "isMeasurement": true
                },
                "encodeduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Average time encode took",
                    "isMeasurement": true
                },
                "textlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Average length of text that got encoded",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatadoCodeSearch.searchRepo.error": {
                "owner": "mjbvz",
                "comment": "Information about failed code ado searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatadoCodeSearch.searchRepo.success": {
                "owner": "mjbvz",
                "comment": "Information about successful ado code search searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "resultcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of returned chunks from the search",
                    "isMeasurement": true
                },
                "resultoutofsync": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tracks if the commit we think code search has indexed matches the commit code search returns results from",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.getRemoteIndexState.error": {
                "owner": "mjbvz",
                "comment": "Information about failed remote index state requests",
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.triggerIndexing.error": {
                "owner": "mjbvz",
                "comment": "Information about failed trigger indexing requests",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "triggerreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason why the indexing was triggered"
                },
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.getRemoteIndexState.success": {
                "owner": "mjbvz",
                "comment": "Information about failed remote index state requests",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "triggerreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason why the indexing was triggered"
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.searchRepo.error": {
                "owner": "mjbvz",
                "comment": "Information about failed code searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.searchRepo.success": {
                "owner": "mjbvz",
                "comment": "Information about successful code searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "resultcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of returned chunks from the search",
                    "isMeasurement": true
                },
                "resultoutofsync": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tracks if the commit we think code search has indexed matches the commit code search returns results from",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchRepoTracker.openGitRepo.error.noCurrentRepo": {
                "owner": "mjbvz",
                "comment": "Information about errors when trying to resolve a remote"
            },
            "GitHub.copilot-chatcodeSearchRepoTracker.openGitRepo.remoteInfo": {
                "owner": "mjbvz",
                "comment": "Information about the remote",
                "resolvedremotetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Identifies the primary remote's type ",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchRepoTracker.openGitRepo.error.couldNotResolveRemote": {
                "owner": "mjbvz",
                "comment": "Information about errors when trying to resolve a remote",
                "reporemotefetchurlscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of remote fetch urls on the git repo",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatfullWorkspaceChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "failurereason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "why did we fail"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfWithSemanticChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfWithSemanticChunkSearch.perf.toSemanticChunks": {
                "owner": "mjbvz",
                "comment": "Time for the toSemantic part of searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.isAvailable": {
                "owner": "mjbvz",
                "comment": "Metadata about the code search availability check",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "unavailablereason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "repostatues": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Detailed info about the statues of the repos in the workspace"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How long the check too to complete",
                    "isMeasurement": true
                },
                "indexedrepocount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of indexed repositories",
                    "isMeasurement": true
                },
                "notyetindexedrepocount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that have not yet been indexed",
                    "isMeasurement": true
                },
                "indexedrepolocation.workspace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that map exactly to a workspace folder",
                    "isMeasurement": true
                },
                "indexedrepolocation.parent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that map to a parent folder",
                    "isMeasurement": true
                },
                "indexedrepolocation.sub": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that map to a sub-folder",
                    "isMeasurement": true
                },
                "indexedrepolocation.unknown": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that map to an unknown folder",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.search.success": {
                "owner": "mjbvz",
                "comment": "Information about successful code searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "diffsearchstrategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Search strategy for the diff"
                },
                "chunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of returned chunks just from code search",
                    "isMeasurement": true
                },
                "locallychangedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files that are different than the code search index",
                    "isMeasurement": true
                },
                "codesearchoutofsync": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tracks if the local commit we think code search has indexed matches what code search actually has indexed",
                    "isMeasurement": true
                },
                "embeddingsrecomputedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that needed to have their embeddings recomputed. Only logged when embeddings search is used",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.perf.doCodeSearchWithRetry": {
                "owner": "mjbvz",
                "comment": "Total time for doCodeSearch to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.perf.tryToInstantIndexRepo": {
                "owner": "mjbvz",
                "comment": "Total time for instant indexing to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "startrepostatus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Initial status of the repo"
                },
                "endrepostatus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Final status of the repo"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.triggerRemoteIndexing": {
                "owner": "mjbvz",
                "comment": "Triggers of remote indexing",
                "triggerreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How the call was triggered"
                },
                "error": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How the trigger call failed"
                }
            },
            "GitHub.copilot-chatembeddingsChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatembeddingsChunkSearch.perf.searchSubsetOfFiles": {
                "owner": "mjbvz",
                "comment": "Total time for searchSubsetOfFiles to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.triggerIndexingOfWorkspace": {
                "owner": "mjbvz",
                "comment": "Total time for triggerIndexingOfWorkspace to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What triggered the call"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.searchWorkspace": {
                "owner": "mjbvz",
                "comment": "Total time for searchWorkspace to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.searchSubsetOfFiles": {
                "owner": "mjbvz",
                "comment": "Total time for searchSubsetOfFiles to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.toSemanticChunks.noSemanticChunkFound": {
                "owner": "mjbvz",
                "comment": "Tracks errors related to mapping to semantic chunks",
                "extname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The file's extension"
                },
                "semanticchunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of semantic chunks returned",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.getAllWorkspaceEmbeddings": {
                "owner": "mjbvz",
                "comment": "Total time for getAllWorkspaceEmbeddings to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "totalfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files we have in the workspace",
                    "isMeasurement": true
                },
                "recomputedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files that were not in the cache",
                    "isMeasurement": true
                },
                "recomputedtotalcontentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total length of text for recomputed files",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.getEmbeddingsForFiles": {
                "owner": "mjbvz",
                "comment": "Total time for getEmbeddingsForFiles to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "totalfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files we are searching",
                    "isMeasurement": true
                },
                "recomputedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files that were not in the cache",
                    "isMeasurement": true
                },
                "recomputedtotalcontentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total length of text for recomputed files",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkSearchStrategy": {
                "owner": "mjbvz",
                "comment": "Understanding which workspace chunk search strategy is used",
                "strategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The chosen strategy"
                },
                "errordiagmessage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The reason why the search failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total time in ms for workspace chunk search",
                    "isMeasurement": true
                },
                "workspaceindexfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files in our workspace index",
                    "isMeasurement": true
                },
                "wasfirstsearchinworkspace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tracks if this was the first time we triggered a workspace search",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkSearch.perf.adaRerank": {
                "owner": "mjbvz",
                "comment": "Understanding how effective ADA re-ranking is",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatnotebook.chatEditGeneration": {
                "owner": "donjayamanne",
                "comment": "Metadata about the code mapper request",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "requestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from where the request was made"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Model selection for the response"
                },
                "inputformat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Input format for the notebook source (xml, json, text)"
                },
                "isemptynotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the notebook is empty",
                    "isMeasurement": true
                },
                "isnotebookoruri": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether we're given a notebook or just a uri (1 = Notebook, 0 = Uri)",
                    "isMeasurement": true
                },
                "isjupyternotebookuri": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether we're given a Jupyter notebook or just a uri (1 = Jupyter Notebook, 0 = Other)",
                    "isMeasurement": true
                },
                "iseditemitted": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether a Notebook edit was emitted (insert or delete cell) (1 = Yes, 0 = No)",
                    "isMeasurement": true
                },
                "iscelltexteditemitted": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether an edit was emitted for a cell (1 = Yes, 0 = No)",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "sourcelength": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of lines in the source code from which we're to generate edits",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkIndex.initialize": {
                "owner": "mjbvz",
                "comment": "Information about successful code searches",
                "totalfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files we can index",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubAvailableEmbeddingTypes.getAvailableTypes.error": {
                "owner": "mjbvz",
                "comment": "Information about failed githubAvailableEmbeddingTypes calls",
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubAvailableEmbeddingTypes.getAvailableTypes.success": {
                "owner": "mjbvz",
                "comment": "Information about successful githubAvailableEmbeddingTypes calls",
                "primaryembeddingtypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "List of primary embedding types"
                },
                "deprecatedembeddingtypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "List of deprecated embedding types"
                }
            },
            "GitHub.copilot-chattfIdfChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfChunkSearch.perf.searchSubsetOfFiles": {
                "owner": "mjbvz",
                "comment": "Total time for searchSubsetOfFiles to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "files": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files being searched",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfChunkSearch.perf.tfidfSearch": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "filecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files in the index",
                    "isMeasurement": true
                },
                "updatedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files updated for this search",
                    "isMeasurement": true
                },
                "updatetime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that updating of the index took",
                    "isMeasurement": true
                },
                "searchtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that searching the index took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfidfChunkSearch.perf.initializeTfidf": {
                "owner": "mjbvz",
                "comment": "Understanding how long it took to initialize the tfidf index",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "filecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that we can index",
                    "isMeasurement": true
                },
                "newfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of new files",
                    "isMeasurement": true
                },
                "outofsyncfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that are out of sync",
                    "isMeasurement": true
                },
                "deletedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that have been deleted",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatsurvey.show": {
                "owner": "digitarald",
                "comment": "Measures survey notification result",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The last used feature before the survey."
                },
                "language": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The last used editor language before the survey."
                },
                "activedays": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of days the user has used the extension.",
                    "isMeasurement": true
                },
                "firstactive": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of days since the user first used the extension.",
                    "isMeasurement": true
                },
                "surveytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of survey being prompted."
                }
            },
            "GitHub.copilot-chatsurvey.action": {
                "owner": "digitarald",
                "comment": "Measures survey notification result",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the survey prompt."
                },
                "language": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The last used editor language before the survey."
                },
                "selection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The user's selection."
                },
                "surveytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of survey being prompted."
                }
            },
            "GitHub.copilot-chattoken": {
                "owner": "digitarald",
                "comment": "Copilot token received from the service.",
                "chatenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the token enabled chat.",
                    "isMeasurement": true
                },
                "snippyenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the block setting for public suggestions is enabled.",
                    "isMeasurement": true
                },
                "telemetryenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the subscription has telemetry enabled.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatquery-expfeature": {
                "abexp.queriedfeature": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "GitHub.copilot-chatcall-tas-error": {
                "errortype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "GitHub.copilot-chatnesStatusOnActivation": {
                "owner": "ulugbekna",
                "comment": "To identify if NES was enabled by the user when extension is activated",
                "iscompletionsenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether ghost-text completions was effectively enabled",
                    "isMeasurement": true
                },
                "iscompletionsuserconfigured": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether ghost-text completions was configured by the user",
                    "isMeasurement": true
                },
                "isnesenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether NES was effectively enabled (e.g., by nes-by-default exp)",
                    "isMeasurement": true
                },
                "isnesuserconfigured": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the Inline Edits feature is configured by the user",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatembedding.error": {
                "owner": "digitarald",
                "comment": "Tracks errors for embedding requests",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Error type"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Detailed error reason"
                }
            },
            "GitHub.copilot-chatembedding.success": {
                "owner": "digitarald",
                "comment": "Performance data for embedding requests",
                "inputtokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The number of tokens in the input.",
                    "isMeasurement": true
                },
                "batchsize": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The number of inputs sent over.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatdebugSessionStart": {
                "owner": "connor4312",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "breakpointcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "exceptionbreakpoints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "watchexpressionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "extensionname": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight"
                },
                "isbuiltin": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "launchjsonexists": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatdebugSessionStop": {
                "owner": "connor4312",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "success": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "sessionlengthinseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "breakpointcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "watchexpressionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.computeChunksAndEmbeddings.error": {
                "owner": "mjbvz",
                "comment": "Tracks errors from the chunks service",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of computeChunksAndEmbeddings"
                },
                "responsestatus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkbenchActionExecuted": {},
            "GitHub.copilot-chatcommandCenter.chatInstall": {
                "owner": "bpasero",
                "comment": "Provides insight into chat installation.",
                "installresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the extension was installed successfully, cancelled or failed to install."
                },
                "installduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The duration it took to install the extension.",
                    "isMeasurement": true
                },
                "signuperrorcode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The error code in case of an error signing up."
                }
            },
            "GitHub.copilot-chatnotebook/editorOpened": {
                "owner": "rebornix",
                "comment": "Identify the notebook editor view type",
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File system provider scheme for the resource"
                },
                "ext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File extension for the resource"
                },
                "viewtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "View type of the notebook editor"
                },
                "isrepl": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the notebook editor is within a REPL editor",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatinteractiveEditor/session": {
                "owner": "jrieken",
                "comment": "Data about an interaction editor session",
                "extension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension providing the data"
                },
                "rounds": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of request that were made"
                },
                "undos": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Requests that have been undone"
                },
                "edits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Did edits happen while the session was active"
                },
                "terminaledits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Did edits terminal the session",
                    "isMeasurement": true
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "When the session started"
                },
                "endtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "When the session ended"
                }
            }
        },
        "commonProperties": {
            "common.tid": {
                "classification": "EndUserPseudonymizedInformation",
                "purpose": "BusinessInsight"
            },
            "common.sku": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight"
            },
            "common.internal": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "isMeasurement": true
            }
        }
    },
    "github.copilot-chat-0.29.2025062701": {
        "events": {
            "GitHub.copilot-chatdebugSessionStart": {
                "owner": "connor4312",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "breakpointcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "exceptionbreakpoints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "watchexpressionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "extensionname": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight"
                },
                "isbuiltin": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "launchjsonexists": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatdebugSessionStop": {
                "owner": "connor4312",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "success": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "sessionlengthinseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "breakpointcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "watchexpressionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattriggerSummarizeFailed": {
                "owner": "roblourens",
                "comment": "Tracks when triggering summarization failed - for example, a summary was created but not applied successfully.",
                "errorkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The success state or failure reason of the summarization."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model ID used for the summarization."
                }
            },
            "GitHub.copilot-chatintent.fixTestFailure.actioned": {
                "owner": "connor4312",
                "comment": "Reports when we show a ",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Where the action was taken"
                }
            },
            "GitHub.copilot-chattoolCalling.invalidToolMessages": {
                "owner": "roblourens",
                "comment": "Provides info about invalid tool messages that were rendered in a prompt",
                "filterreasons": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reasons for filtering the messages."
                },
                "filtercount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of filtered messages.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatsurvey.show": {
                "owner": "digitarald",
                "comment": "Measures survey notification result",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The last used feature before the survey."
                },
                "language": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The last used editor language before the survey."
                },
                "activedays": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of days the user has used the extension.",
                    "isMeasurement": true
                },
                "firstactive": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of days since the user first used the extension.",
                    "isMeasurement": true
                },
                "surveytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of survey being prompted."
                }
            },
            "GitHub.copilot-chatsurvey.action": {
                "owner": "digitarald",
                "comment": "Measures survey notification result",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the survey prompt."
                },
                "language": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The last used editor language before the survey."
                },
                "selection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The user's selection."
                },
                "surveytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of survey being prompted."
                }
            },
            "GitHub.copilot-chatpanel.edit.codeblocks": {
                "owner": "joyceerhl",
                "comment": "Records information about the proposed edit codeblocks in an editing session",
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the current chat conversation."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request succeeded or failed."
                },
                "workingsetcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of entries in the working set",
                    "isMeasurement": true
                },
                "uniquecodeblockuricount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of unique code block URIs",
                    "isMeasurement": true
                },
                "codeblockcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of code blocks in the response",
                    "isMeasurement": true
                },
                "codeblockwithuricount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of code blocks that had URIs",
                    "isMeasurement": true
                },
                "codeblockwithelidedcodecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of code blocks that had a ...existing code... comment",
                    "isMeasurement": true
                },
                "shellcodeblockcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of shell code blocks in the response",
                    "isMeasurement": true
                },
                "shellcodeblockwithuricount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of shell code blocks that had URIs",
                    "isMeasurement": true
                },
                "shellcodeblockwithelidedcodecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of shell code blocks that had a ...existing code... comment",
                    "isMeasurement": true
                },
                "editstepcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of edit steps in the session so far",
                    "isMeasurement": true
                },
                "sessionduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time since the session started",
                    "isMeasurement": true
                },
                "intentid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the intent being executed"
                }
            },
            "GitHub.copilot-chateditCodeIntent.promptRender": {
                "owner": "roblourens",
                "comment": "Understanding the performance of the edit code intent rendering",
                "promptrenderdurationincludingrunningtools": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of the prompt rendering, includes running tools",
                    "isMeasurement": true
                },
                "isagentmode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the prompt was for agent mode",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatembedding.error": {
                "owner": "digitarald",
                "comment": "Tracks errors for embedding requests",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Error type"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Detailed error reason"
                }
            },
            "GitHub.copilot-chatembedding.success": {
                "owner": "digitarald",
                "comment": "Performance data for embedding requests",
                "inputtokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The number of tokens in the input.",
                    "isMeasurement": true
                },
                "batchsize": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The number of inputs sent over.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatprojectLabels": {
                "owner": "digitarald",
                "comment": "Reports quality of labels detected in a workspace",
                "labels": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique workspace label count."
                },
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique workspace labels in context.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeBlock.action.goTo": {
                "owner": "mjbvz",
                "comment": "Counts interactions with code blocks in chat responses",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The go to command being run."
                },
                "codeblockid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique hash of the code block."
                }
            },
            "GitHub.copilot-chattoken": {
                "owner": "digitarald",
                "comment": "Copilot token received from the service.",
                "chatenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the token enabled chat.",
                    "isMeasurement": true
                },
                "snippyenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the block setting for public suggestions is enabled.",
                    "isMeasurement": true
                },
                "telemetryenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the subscription has telemetry enabled.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatquery-expfeature": {
                "abexp.queriedfeature": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "GitHub.copilot-chatcall-tas-error": {
                "errortype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.computeChunksAndEmbeddings.error": {
                "owner": "mjbvz",
                "comment": "Tracks errors from the chunks service",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of computeChunksAndEmbeddings"
                },
                "responsestatus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatprovideRenameSuggestions": {
                "owner": "ulugbekna",
                "comment": "Telemetry for rename suggestions provided",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language ID of the document."
                },
                "cancellationreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Specify when exactly during the provider call the cancellation happened. Empty string if the cancellation didn't happen."
                },
                "fetchresulttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of a fetch to endpoint"
                },
                "replyformat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Copilot reply format: 'jsonStringArray' | 'multiJsonStringArray' | 'list' | 'unknown'"
                },
                "triggerkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Rename suggestion trigger kind - 'automatic' | 'manual'"
                },
                "promptconstructiontime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time it took to construct the prompt",
                    "isMeasurement": true
                },
                "timeelapsedbeforedelay": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time elapsed before delay starts",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Token count of the prompt",
                    "isMeasurement": true
                },
                "expecteddelaybeforefetch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Expected delay before fetch dictated by the experiment 'renameSuggestionsDelayBeforeFetch'",
                    "isMeasurement": true
                },
                "actualdelaybeforefetch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Actual delay before fetch computed as 'expectedDelay - promptComputationTime'",
                    "isMeasurement": true
                },
                "successresponsecharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Character count in model response (for response.type == 'success')",
                    "isMeasurement": true
                },
                "responseunusedcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Character count in model response that was unused, e.g., rename explanations, response format overhead",
                    "isMeasurement": true
                },
                "fetchtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time it took to fetch from endpoint",
                    "isMeasurement": true
                },
                "symbolnamescount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of suggested names",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatnotebook.chatEditGeneration": {
                "owner": "donjayamanne",
                "comment": "Metadata about the code mapper request",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "requestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from where the request was made"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Model selection for the response"
                },
                "inputformat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Input format for the notebook source (xml, json, text)"
                },
                "isemptynotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the notebook is empty",
                    "isMeasurement": true
                },
                "isnotebookoruri": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether we're given a notebook or just a uri (1 = Notebook, 0 = Uri)",
                    "isMeasurement": true
                },
                "isjupyternotebookuri": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether we're given a Jupyter notebook or just a uri (1 = Jupyter Notebook, 0 = Other)",
                    "isMeasurement": true
                },
                "iseditemitted": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether a Notebook edit was emitted (insert or delete cell) (1 = Yes, 0 = No)",
                    "isMeasurement": true
                },
                "iscelltexteditemitted": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether an edit was emitted for a cell (1 = Yes, 0 = No)",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "sourcelength": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of lines in the source code from which we're to generate edits",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattokenizer.stats": {
                "owner": "jrieken",
                "comment": "Perf stats about tokenizers",
                "callcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How often tokenize was called",
                    "isMeasurement": true
                },
                "encodeduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Average time encode took",
                    "isMeasurement": true
                },
                "textlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Average length of text that got encoded",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfChunkSearch.perf.searchSubsetOfFiles": {
                "owner": "mjbvz",
                "comment": "Total time for searchSubsetOfFiles to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "files": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files being searched",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfChunkSearch.perf.tfidfSearch": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "filecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files in the index",
                    "isMeasurement": true
                },
                "updatedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files updated for this search",
                    "isMeasurement": true
                },
                "updatetime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that updating of the index took",
                    "isMeasurement": true
                },
                "searchtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that searching the index took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfidfChunkSearch.perf.initializeTfidf": {
                "owner": "mjbvz",
                "comment": "Understanding how long it took to initialize the tfidf index",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "filecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that we can index",
                    "isMeasurement": true
                },
                "newfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of new files",
                    "isMeasurement": true
                },
                "outofsyncfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that are out of sync",
                    "isMeasurement": true
                },
                "deletedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that have been deleted",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatembeddingsChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatembeddingsChunkSearch.perf.searchSubsetOfFiles": {
                "owner": "mjbvz",
                "comment": "Total time for searchSubsetOfFiles to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.triggerIndexingOfWorkspace": {
                "owner": "mjbvz",
                "comment": "Total time for triggerIndexingOfWorkspace to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What triggered the call"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.searchWorkspace": {
                "owner": "mjbvz",
                "comment": "Total time for searchWorkspace to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.searchSubsetOfFiles": {
                "owner": "mjbvz",
                "comment": "Total time for searchSubsetOfFiles to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.toSemanticChunks.noSemanticChunkFound": {
                "owner": "mjbvz",
                "comment": "Tracks errors related to mapping to semantic chunks",
                "extname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The file's extension"
                },
                "semanticchunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of semantic chunks returned",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.getAllWorkspaceEmbeddings": {
                "owner": "mjbvz",
                "comment": "Total time for getAllWorkspaceEmbeddings to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "totalfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files we have in the workspace",
                    "isMeasurement": true
                },
                "recomputedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files that were not in the cache",
                    "isMeasurement": true
                },
                "recomputedtotalcontentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total length of text for recomputed files",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.getEmbeddingsForFiles": {
                "owner": "mjbvz",
                "comment": "Total time for getEmbeddingsForFiles to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "totalfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files we are searching",
                    "isMeasurement": true
                },
                "recomputedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files that were not in the cache",
                    "isMeasurement": true
                },
                "recomputedtotalcontentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total length of text for recomputed files",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatfullWorkspaceChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "failurereason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "why did we fail"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfWithSemanticChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfWithSemanticChunkSearch.perf.toSemanticChunks": {
                "owner": "mjbvz",
                "comment": "Time for the toSemantic part of searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatlanguagemodelrequest": {
                "owner": "jrieken",
                "comment": "Data about extensions using the language model",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is being used"
                },
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension identifier for which we make the request"
                },
                "extensionversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension version for which we make the request"
                },
                "tokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tokens",
                    "isMeasurement": true
                },
                "tokenlimit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tokens that can be used",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcopilot.search.feedback": {
                "owner": "osortega",
                "comment": "Feedback telemetry for copilot search",
                "kind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Feedback provided by the user."
                },
                "chunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of copilot search code chunks.",
                    "isMeasurement": true
                },
                "rankresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of the copilot search ranking."
                },
                "rankresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of the results from copilot search ranking.",
                    "isMeasurement": true
                },
                "combinedresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of combined results from copilot search.",
                    "isMeasurement": true
                },
                "chunksearchduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the chunk search",
                    "isMeasurement": true
                },
                "llmfilteringduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the LLM filtering",
                    "isMeasurement": true
                },
                "strategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates the strategy used for the search."
                }
            },
            "GitHub.copilot-chatworkspaceChunkIndex.initialize": {
                "owner": "mjbvz",
                "comment": "Information about successful code searches",
                "totalfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files we can index",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.isAvailable": {
                "owner": "mjbvz",
                "comment": "Metadata about the code search availability check",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "unavailablereason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "repostatues": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Detailed info about the statues of the repos in the workspace"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How long the check too to complete",
                    "isMeasurement": true
                },
                "indexedrepocount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of indexed repositories",
                    "isMeasurement": true
                },
                "notyetindexedrepocount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that have not yet been indexed",
                    "isMeasurement": true
                },
                "indexedrepolocation.workspace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that map exactly to a workspace folder",
                    "isMeasurement": true
                },
                "indexedrepolocation.parent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that map to a parent folder",
                    "isMeasurement": true
                },
                "indexedrepolocation.sub": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that map to a sub-folder",
                    "isMeasurement": true
                },
                "indexedrepolocation.unknown": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that map to an unknown folder",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.search.success": {
                "owner": "mjbvz",
                "comment": "Information about successful code searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "diffsearchstrategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Search strategy for the diff"
                },
                "chunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of returned chunks just from code search",
                    "isMeasurement": true
                },
                "locallychangedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files that are different than the code search index",
                    "isMeasurement": true
                },
                "codesearchoutofsync": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tracks if the local commit we think code search has indexed matches what code search actually has indexed",
                    "isMeasurement": true
                },
                "embeddingsrecomputedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that needed to have their embeddings recomputed. Only logged when embeddings search is used",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.perf.doCodeSearchWithRetry": {
                "owner": "mjbvz",
                "comment": "Total time for doCodeSearch to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.perf.tryToInstantIndexRepo": {
                "owner": "mjbvz",
                "comment": "Total time for instant indexing to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "startrepostatus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Initial status of the repo"
                },
                "endrepostatus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Final status of the repo"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.triggerRemoteIndexing": {
                "owner": "mjbvz",
                "comment": "Triggers of remote indexing",
                "triggerreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How the call was triggered"
                },
                "error": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How the trigger call failed"
                }
            },
            "GitHub.copilot-chatpanel.action.copy": {
                "owner": "digitarald",
                "comment": "Counts copied code blocks from a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "codeblockindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Index of the code block in the response.",
                    "isMeasurement": true
                },
                "copytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the copy was done via the context menu or the toolbar.",
                    "isMeasurement": true
                },
                "charactercount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of characters copied.",
                    "isMeasurement": true
                },
                "linecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of lines copied.",
                    "isMeasurement": true
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                }
            },
            "GitHub.copilot-chatpanel.action.insert": {
                "owner": "digitarald",
                "comment": "Counts inserts on a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "codeblockindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Index of the code block in the response.",
                    "isMeasurement": true
                },
                "charactercount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of characters copied.",
                    "isMeasurement": true
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                },
                "newfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the insert was done in a new file.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatpanel.action.runinterminal": {
                "owner": "digitarald",
                "comment": "Counts generic actions on a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "blocklanguage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the code block in the response."
                },
                "codeblockindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Index of the code block in the response.",
                    "isMeasurement": true
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                }
            },
            "GitHub.copilot-chatpanel.action.followup": {
                "owner": "digitarald",
                "comment": "Counts generic actions on a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the message request that is being followed-up."
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                }
            },
            "GitHub.copilot-chatpanel.edit.feedback": {
                "owner": "joyceerhl",
                "comment": "Counts accept/reject actions for a proposed edit from panel chat",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the message request that is being followed-up."
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The user decision taken for the edited file"
                },
                "hasremainingedits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there are additional unactioned edits in the file."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook.",
                    "isMeasurement": true
                },
                "isnotebookcell": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook cell.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatpanel.action.vote": {
                "owner": "digitarald",
                "comment": "Counts votes on a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "direction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the vote was positive or negative.",
                    "isMeasurement": true
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Preset value for why the user found the response unhelpful."
                }
            },
            "GitHub.copilot-chatinline.action.vote": {
                "owner": "digitarald",
                "comment": "Metadata about votes on inline code conversations",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "replytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How response is shown in the interface."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the inline assistant conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Preset value for why the user found the response unhelpful."
                },
                "vote": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user found the response helpful.",
                    "isMeasurement": true
                },
                "selectionlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the current selection.",
                    "isMeasurement": true
                },
                "wholerangelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the expanded whole range.",
                    "isMeasurement": true
                },
                "editcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many edits are suggested.",
                    "isMeasurement": true
                },
                "editlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in all suggested edits.",
                    "isMeasurement": true
                },
                "problemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current code.",
                    "isMeasurement": true
                },
                "selectionproblemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current selected code.",
                    "isMeasurement": true
                },
                "diagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current code.",
                    "isMeasurement": true
                },
                "selectiondiagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current selected code.",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatinline.done": {
                "owner": "digitarald",
                "comment": "Metadata about an inline code suggestion being accepted or undone",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "replytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How response is shown in the interface."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the inline assistant conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "accepted": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user accepted the suggested code or discarded it.",
                    "isMeasurement": true
                },
                "selectionlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the current selection.",
                    "isMeasurement": true
                },
                "wholerangelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the expanded whole range.",
                    "isMeasurement": true
                },
                "editcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many edits are suggested.",
                    "isMeasurement": true
                },
                "editlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in all suggested edits.",
                    "isMeasurement": true
                },
                "problemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current code.",
                    "isMeasurement": true
                },
                "selectionproblemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current selected code.",
                    "isMeasurement": true
                },
                "diagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current code.",
                    "isMeasurement": true
                },
                "selectiondiagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current code.",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatinline.trackEditSurvival": {
                "owner": "hediet",
                "comment": "Tracks how much percent of the AI edits surived after 5 minutes of accepting",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "replytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How response is shown in the interface."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the inline assistant conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "selectionlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the current selection.",
                    "isMeasurement": true
                },
                "wholerangelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the expanded whole range.",
                    "isMeasurement": true
                },
                "editcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many edits are suggested.",
                    "isMeasurement": true
                },
                "editlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in all suggested edits.",
                    "isMeasurement": true
                },
                "problemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current code.",
                    "isMeasurement": true
                },
                "selectionproblemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current selected code.",
                    "isMeasurement": true
                },
                "diagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current code.",
                    "isMeasurement": true
                },
                "selectiondiagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current selected code.",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkSearchStrategy": {
                "owner": "mjbvz",
                "comment": "Understanding which workspace chunk search strategy is used",
                "strategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The chosen strategy"
                },
                "errordiagmessage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The reason why the search failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total time in ms for workspace chunk search",
                    "isMeasurement": true
                },
                "workspaceindexfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files in our workspace index",
                    "isMeasurement": true
                },
                "wasfirstsearchinworkspace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tracks if this was the first time we triggered a workspace search",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkSearch.perf.adaRerank": {
                "owner": "mjbvz",
                "comment": "Understanding how effective ADA re-ranking is",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubAvailableEmbeddingTypes.getAvailableTypes.error": {
                "owner": "mjbvz",
                "comment": "Information about failed githubAvailableEmbeddingTypes calls",
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubAvailableEmbeddingTypes.getAvailableTypes.success": {
                "owner": "mjbvz",
                "comment": "Information about successful githubAvailableEmbeddingTypes calls",
                "primaryembeddingtypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "List of primary embedding types"
                },
                "deprecatedembeddingtypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "List of deprecated embedding types"
                }
            },
            "GitHub.copilot-chatcodeSearchRepoTracker.openGitRepo.error.noCurrentRepo": {
                "owner": "mjbvz",
                "comment": "Information about errors when trying to resolve a remote"
            },
            "GitHub.copilot-chatcodeSearchRepoTracker.openGitRepo.remoteInfo": {
                "owner": "mjbvz",
                "comment": "Information about the remote",
                "resolvedremotetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Identifies the primary remote's type ",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchRepoTracker.openGitRepo.error.couldNotResolveRemote": {
                "owner": "mjbvz",
                "comment": "Information about errors when trying to resolve a remote",
                "reporemotefetchurlscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of remote fetch urls on the git repo",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chaturiHandler": {
                "owner": "lramos15",
                "comment": "Reports when the uri handler is called in the copilot extension",
                "referrer": {
                    "classification": "SystemMetaData",
                    "purpose": "BusinessInsight",
                    "comment": "The referrer query param for the uri"
                }
            },
            "GitHub.copilot-chatonboardDebug.commandExecuted": {
                "owner": "connor4312",
                "comment": "Reports usages of the copilot-debug command",
                "binary": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Binary executed with the command"
                }
            },
            "GitHub.copilot-chatonboardDebug.configGenerated": {
                "owner": "connor4312",
                "comment": "Reports usages of the copilot-debug command",
                "binary": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Binary executed with the command"
                },
                "debugtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Debug type generated"
                },
                "configgenerated": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether a config was generated",
                    "isMeasurement": true
                },
                "configtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "GitHub.copilot-chatadoCodeSearch.searchRepo.error": {
                "owner": "mjbvz",
                "comment": "Information about failed code ado searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatadoCodeSearch.searchRepo.success": {
                "owner": "mjbvz",
                "comment": "Information about successful ado code search searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "resultcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of returned chunks from the search",
                    "isMeasurement": true
                },
                "resultoutofsync": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tracks if the commit we think code search has indexed matches the commit code search returns results from",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.getRemoteIndexState.error": {
                "owner": "mjbvz",
                "comment": "Information about failed remote index state requests",
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.triggerIndexing.error": {
                "owner": "mjbvz",
                "comment": "Information about failed trigger indexing requests",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "triggerreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason why the indexing was triggered"
                },
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.getRemoteIndexState.success": {
                "owner": "mjbvz",
                "comment": "Information about failed remote index state requests",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "triggerreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason why the indexing was triggered"
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.searchRepo.error": {
                "owner": "mjbvz",
                "comment": "Information about failed code searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.searchRepo.success": {
                "owner": "mjbvz",
                "comment": "Information about successful code searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "resultcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of returned chunks from the search",
                    "isMeasurement": true
                },
                "resultoutofsync": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tracks if the commit we think code search has indexed matches the commit code search returns results from",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatnesStatusOnActivation": {
                "owner": "ulugbekna",
                "comment": "To identify if NES was enabled by the user when extension is activated",
                "iscompletionsenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether ghost-text completions was effectively enabled",
                    "isMeasurement": true
                },
                "iscompletionsuserconfigured": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether ghost-text completions was configured by the user",
                    "isMeasurement": true
                },
                "isnesenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether NES was effectively enabled (e.g., by nes-by-default exp)",
                    "isMeasurement": true
                },
                "isnesuserconfigured": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the Inline Edits feature is configured by the user",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.speculative": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                },
                "originalrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The original request id for which this is a speculative request"
                },
                "numberofitems": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of items in the speculative request",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.ok": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                },
                "filesize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The size of the file",
                    "isMeasurement": true
                },
                "completioncontext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Kind of completion context"
                },
                "nodepath": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The syntax kind path to the AST node the position resolved to."
                },
                "cancelled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request got cancelled on the client side"
                },
                "timedout": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request timed out on the server side"
                },
                "servertime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time taken on the server side",
                    "isMeasurement": true
                },
                "contextcomputetime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time taken on the server side to compute the context",
                    "isMeasurement": true
                },
                "timetaken": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time taken to provide the completion",
                    "isMeasurement": true
                },
                "tokenbudgetexhausted": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the token budget was exhausted"
                },
                "blueprints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of blueprints",
                    "isMeasurement": true
                },
                "signatures": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of signatures",
                    "isMeasurement": true
                },
                "superclasses": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of super classes",
                    "isMeasurement": true
                },
                "generalscopes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of general scopes",
                    "isMeasurement": true
                },
                "completions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of traditional completion scopes",
                    "isMeasurement": true
                },
                "neighborfiles": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of neighbor files",
                    "isMeasurement": true
                },
                "module": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of modules",
                    "isMeasurement": true
                },
                "moduleresolution": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of moduleResolutions",
                    "isMeasurement": true
                },
                "lib": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of libs",
                    "isMeasurement": true
                },
                "target": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of targets",
                    "isMeasurement": true
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of versions",
                    "isMeasurement": true
                },
                "totalsize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total size of all context items",
                    "isMeasurement": true
                },
                "items": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Detailed information about each context item delivered."
                },
                "cachehits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cache hits",
                    "isMeasurement": true
                },
                "isspeculative": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was speculative"
                },
                "beforecachestate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The cache state before the request was sent"
                },
                "aftercachestate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The cache state after the request was sent"
                },
                "cacheditemsforspeculativerequest": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was cached for a speculative request",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.error": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context errors",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                },
                "code": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The failure code",
                    "isMeasurement": true
                },
                "message": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure message"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.on-timeout": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context on timeout",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "items": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Detailed information about each context item delivered."
                },
                "blueprints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of blueprints",
                    "isMeasurement": true
                },
                "signatures": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of signatures",
                    "isMeasurement": true
                },
                "superclasses": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of super classes",
                    "isMeasurement": true
                },
                "generalscopes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of general scopes",
                    "isMeasurement": true
                },
                "completions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of traditional completion scopes",
                    "isMeasurement": true
                },
                "neighborfiles": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of neighbor files",
                    "isMeasurement": true
                },
                "module": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of modules",
                    "isMeasurement": true
                },
                "moduleresolution": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of moduleResolutions",
                    "isMeasurement": true
                },
                "lib": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of libs",
                    "isMeasurement": true
                },
                "target": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of targets",
                    "isMeasurement": true
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of versions",
                    "isMeasurement": true
                },
                "totalsize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total size of all context items",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.failed": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context in failure case",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                },
                "code:": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The failure code"
                },
                "message": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure message"
                },
                "stack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure stack"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.cancelled": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context in cancellation case",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.activation.ok": {
                "owner": "dirkb",
                "comment": "Telemetry for TypeScript server plugin",
                "session": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the TypeScript server had a session"
                },
                "supported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the TypeScript server version is supported"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The version of the TypeScript server"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.activation.failed": {
                "owner": "dirkb",
                "comment": "Telemetry for TypeScript server plugin",
                "location": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The location of the failure"
                },
                "part": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The part that errored"
                },
                "message": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure message"
                },
                "stack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure stack"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The version"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.activation.unknown-ping-response": {
                "owner": "dirkb",
                "comment": "Telemetry for TypeScript server plugin",
                "location": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The location of the failure"
                },
                "part": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The part that errored"
                },
                "response": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The response literal"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.integration.failed": {
                "owner": "dirkb",
                "comment": "Telemetry for Copilot inline chat integration.",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "document": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The document for which the integration failed"
                },
                "versionmismatch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The version mismatch"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.inline-completion-provider.registered": {
                "owner": "dirkb",
                "comment": "Telemetry for Copilot inline completions",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.inline-completion-provider.unregistered": {
                "owner": "dirkb",
                "comment": "Telemetry for Copilot inline completions",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                }
            },
            "GitHub.copilot-chatprovideInlineEdit": {
                "owner": "ulugbekna",
                "comment": "Telemetry for inline edit (NES) provided",
                "opportunityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique identifier for an opportunity to show an NES."
                },
                "headerrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique identifier of the network request which is also included in the fetch request header."
                },
                "providerid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "NES provider identifier (StatelessNextEditProvider)"
                },
                "documentshorteningstrategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Document shortening strategy, eg clipping or summarization"
                },
                "activedocumentlanguageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "LanguageId of the active document"
                },
                "acceptance": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "User acceptance of the edit"
                },
                "disposalreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason for disposal of NES"
                },
                "supersededbyopportunityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "UUID of the opportunity that superseded this edit"
                },
                "endpoint": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Endpoint for the request"
                },
                "nonexteditreasonkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason kind for no next edit"
                },
                "nonexteditreasonmessage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason message for no next edit"
                },
                "fetchresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Fetch result"
                },
                "fetcherror": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Fetch error message"
                },
                "pickednes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request had picked NES"
                },
                "diagnostictype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Type of diagnostics"
                },
                "diagnosticdroppedreasons": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reasons for dropping diagnostics NES suggestions"
                },
                "requestn": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Request number",
                    "isMeasurement": true
                },
                "hadstatelessnexteditprovidercall": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request had a stateless next edit provider call",
                    "isMeasurement": true
                },
                "statelessnexteditproviderduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of stateless next edit provider",
                    "isMeasurement": true
                },
                "nexteditproviderduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of next edit provider",
                    "isMeasurement": true
                },
                "isfromcache": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the edit was provided from cache",
                    "isMeasurement": true
                },
                "subsequenteditorder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Order of the subsequent edit",
                    "isMeasurement": true
                },
                "activedocumentoriginallinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of lines in the active document before shortening",
                    "isMeasurement": true
                },
                "activedocumentshortenedlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of lines in the active document after shortening",
                    "isMeasurement": true
                },
                "waspreviouslyrejected": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the edit was previously rejected",
                    "isMeasurement": true
                },
                "isshown": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the edit was shown",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook",
                    "isMeasurement": true
                },
                "logprobthreshold": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Log probability threshold for the edit",
                    "isMeasurement": true
                },
                "documentscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of documents",
                    "isMeasurement": true
                },
                "editscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of edits",
                    "isMeasurement": true
                },
                "activedocumenteditscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of edits in the active document",
                    "isMeasurement": true
                },
                "promptlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of lines in the prompt",
                    "isMeasurement": true
                },
                "promptcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of characters in the prompt",
                    "isMeasurement": true
                },
                "hadlowlogprobsuggestion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the suggestion had low log probability",
                    "isMeasurement": true
                },
                "neditssuggested": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of edits suggested",
                    "isMeasurement": true
                },
                "hasnextedit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there is a next edit",
                    "isMeasurement": true
                },
                "nexteditlogprob": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Log probability of the next edit",
                    "isMeasurement": true
                },
                "linedistancetomostrecentedit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Line distance to most recent edit",
                    "isMeasurement": true
                },
                "debouncetime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Debounce time",
                    "isMeasurement": true
                },
                "artificialdelay": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Artificial delay (aka backoff) on the response based on previous user acceptance/rejection in milliseconds",
                    "isMeasurement": true
                },
                "fetchstartedafterms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time from inline edit provider invocation to fetch init",
                    "isMeasurement": true
                },
                "ttft": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "fetchtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time from fetch init to end of stream",
                    "isMeasurement": true
                },
                "prompttokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prompt",
                    "isMeasurement": true
                },
                "responsetokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the response",
                    "isMeasurement": true
                },
                "cachedtokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cached tokens in the response",
                    "isMeasurement": true
                },
                "acceptedpredictiontokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prediction that appeared in the completion",
                    "isMeasurement": true
                },
                "rejectedpredictiontokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prediction that appeared in the completion",
                    "isMeasurement": true
                },
                "haddiagnosticsnes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request had diagnostics NES",
                    "isMeasurement": true
                },
                "hadllmnes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request had LLM NES",
                    "isMeasurement": true
                },
                "configisdiagnosticsnesenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether diagnostics NES is enabled",
                    "isMeasurement": true
                },
                "isnaturallanguagedominated": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the context is dominated by natural language",
                    "isMeasurement": true
                },
                "diagnostichasexistingsamefileimport": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the diagnostic has an existing same file import",
                    "isMeasurement": true
                },
                "diagnosticislocalimport": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the diagnostic is a local import",
                    "isMeasurement": true
                },
                "diagnosticalternativeimportscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of alternative imports for the diagnostic",
                    "isMeasurement": true
                },
                "diagnosticdistancetounknowndiagnostic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Distance to the unknown diagnostic",
                    "isMeasurement": true
                },
                "diagnosticdistancetoalternativediagnostic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Distance to the alternative diagnostic",
                    "isMeasurement": true
                },
                "diagnostichasalternativediagnosticforsamerange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there is an alternative diagnostic for the same range",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatvscode.contentChangeForUnknownDocument": {
                "owner": "hediet",
                "comment": "Telemetry for verifying VSCode content change API consistency"
            },
            "GitHub.copilot-chatvscode.contentChangeInconsistencyDetected": {
                "owner": "hediet",
                "comment": "Telemetry for verifying VSCode content change API consistency",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Scheme of the currently open document."
                }
            },
            "GitHub.copilot-chatreportInlineEditSurvivalRate": {
                "owner": "hediet",
                "comment": "Reports the survival rate for an inline edit.",
                "opportunityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique identifier for an opportunity to show an NES."
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "arc": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The accepted and restrained character count.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chateditSourceTracker.stats": {
                "owner": "hediet",
                "comment": "Reports distribution of AI vs user edited characters.",
                "mode": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "longterm or 5minWindow"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language id of the document."
                },
                "nesmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of nes modified characters",
                    "isMeasurement": true
                },
                "inlinecompletionscopilotmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of inline completions copilot modified characters",
                    "isMeasurement": true
                },
                "inlinecompletionsnesmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of inline completions nes modified characters",
                    "isMeasurement": true
                },
                "otheraimodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of other AI modified characters",
                    "isMeasurement": true
                },
                "unknownmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of unknown modified characters",
                    "isMeasurement": true
                },
                "usermodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of user modified characters",
                    "isMeasurement": true
                },
                "idemodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of IDE modified characters",
                    "isMeasurement": true
                },
                "totalmodifiedcharacters": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Total modified characters",
                    "isMeasurement": true
                },
                "istrackedbygit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the document is tracked by git."
                }
            },
            "GitHub.copilot-chatreportInlineEditArc": {
                "owner": "hediet",
                "comment": "Reports the accepted and retained character count for an inline completion/edit.",
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension id (copilot or copilot-chat), which provided this inline completion."
                },
                "opportunityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique identifier for an opportunity to show an inline completion or NES."
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "arc": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The accepted and restrained character count.",
                    "isMeasurement": true
                },
                "originalcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The original character count before any edits.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcopilot.search.request": {
                "owner": "osortega",
                "comment": "Copilot search request.",
                "chunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of copilot search code chunks.",
                    "isMeasurement": true
                },
                "rankresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of the copilot search ranking."
                },
                "rankresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of the results from copilot search ranking.",
                    "isMeasurement": true
                },
                "combinedresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of combined results from copilot search.",
                    "isMeasurement": true
                },
                "chunksearchduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the chunk search",
                    "isMeasurement": true
                },
                "llmfilteringduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the LLM filtering",
                    "isMeasurement": true
                },
                "llmbestrank": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Best rank (lowest index) among LLM-selected chunks in the original retrieval ranking.",
                    "isMeasurement": true
                },
                "llmworstrank": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Worst rank (highest index) among LLM-selected chunks in the original retrieval ranking.",
                    "isMeasurement": true
                },
                "llmselectedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of chunks selected by LLM from the initial retrieval.",
                    "isMeasurement": true
                },
                "rawllmrankingresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of raw results returned by the LLM.",
                    "isMeasurement": true
                },
                "parseresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates the result of parsing the LLM response."
                },
                "strategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates the strategy used for the search."
                }
            },
            "GitHub.copilot-chatsemanticSearch.ranking": {
                "owner": "rebornix",
                "comment": "Semantic search request ranking.",
                "llmbestrank": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Best rank (lowest index) among LLM-selected chunks in the original retrieval ranking.",
                    "isMeasurement": true
                },
                "llmworstrank": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Worst rank (highest index) among LLM-selected chunks in the original retrieval ranking.",
                    "isMeasurement": true
                },
                "llmselectedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of chunks selected by LLM from the initial retrieval.",
                    "isMeasurement": true
                },
                "rawllmrankingresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of raw results returned by the LLM.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcopilot.search.keywords": {
                "owner": "osortega",
                "comment": "Copilot keywords request.",
                "keywordresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of the copilot keywords request."
                },
                "keywordscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of keywords found by copilot search.",
                    "isMeasurement": true
                },
                "keywordsearchduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the keyword search",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatsummarizedConversationHistory": {
                "owner": "roblourens",
                "comment": "Tracks when summarization happens and what the outcome was",
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The success state or failure reason of the summarization."
                },
                "detailedoutcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A more detailed error message."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model ID used for the summarization."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request ID from the summarization call."
                },
                "numrounds": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tool call rounds before this summarization was triggered.",
                    "isMeasurement": true
                },
                "numroundssincelastsummarization": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tool call rounds since the last summarization.",
                    "isMeasurement": true
                },
                "lastusedtool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the last tool used before summarization."
                },
                "isduringtoolcalling": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this summarization was triggered during a tool calling loop.",
                    "isMeasurement": true
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the current chat conversation."
                }
            },
            "GitHub.copilot-chatworkspaceContext.perf.prepareWorkspaceChunks": {
                "owner": "mjbvz",
                "comment": "Understanding the performance of including workspace context",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "resultchunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of chunks returned",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceContext.perf.prepare": {
                "owner": "mjbvz",
                "comment": "Understanding how effective ADA re-ranking is",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceResolver.error": {
                "owner": "mjbvz",
                "comment": "Tracks errors for resolving workspace information",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Error type"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Detailed error reason"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                }
            },
            "GitHub.copilot-chatworkspaceResolver.success": {
                "owner": "mjbvz",
                "comment": "Tracks errors for resolving workspace information",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Success type"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "totalkeywordcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of keywords returned.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatprompt.invalidreference": {
                "owner": "jrieken",
                "comment": "Tracks bad prompt references",
                "stack": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Error stack"
                }
            },
            "GitHub.copilot-chatcodemapper.completeCodeBlock": {
                "owner": "aeschli",
                "comment": "Sent when a codemapper request is received for a complete code block that contains no ...existing code... comments."
            },
            "GitHub.copilot-chatcodemapper.request": {
                "owner": "aeschli",
                "comment": "Metadata about the code mapper request",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "requestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from where the request was made"
                },
                "mapper": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The mapper used: One of 'fast', 'fast-lora', 'full' and 'patch'"
                },
                "outcomeannotations": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Annotations about the outcome of the request."
                }
            },
            "GitHub.copilot-chatcodeMapper.trackEditSurvival": {
                "owner": "aeschli",
                "comment": "Tracks how much percent of the AI edits survived after 5 minutes of accepting",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "speculationrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the speculation request."
                },
                "requestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from where the request was made"
                },
                "chatrequestmodel": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the base chat request to generate the edit object."
                },
                "mapper": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The code mapper used: One of 'fast', 'fast-lora', 'full' and 'patch'"
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattoolInvoke": {
                "owner": "donjayamanne",
                "comment": "Details about invocation of tools",
                "validationoutcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The outcome of the tool Invokcation. invalidInput, disabledByUser, success, error, cancelled"
                },
                "toolname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the tool being invoked."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                }
            },
            "GitHub.copilot-chatagent.tool.responseLength": {
                "owner": "connor4312",
                "comment": "Counts the number of tokens generated by tools",
                "toolname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the tool being invoked."
                },
                "tokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of tokens used.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chateditNotebook.validation": {
                "owner": "donjayamanne",
                "comment": "Validation failure for a Edit Notebook tool invocation",
                "validationresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result of the tool input validation. valid, invalid and unknown"
                },
                "invokeresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result of the tool Invocation. invalidInput, disabledByUser, success, error, cancelled"
                },
                "edittype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of edit that was attempted. insert, delete, edit or unknown"
                },
                "unknownprops": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "List of unknown properties in the input"
                },
                "missingprops": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "List of missing properties in the input"
                },
                "newcodetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of code, whether its string, string[], object, object[] or unknown"
                },
                "cellid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the cell, TOP, BOTTOM, cellid, empty or unknown"
                },
                "explanation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The explanation for the edit. provided, empty and unknown"
                },
                "inputparsed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the input was parsed as JSON",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                }
            },
            "GitHub.copilot-chatspeculation.response.success": {
                "owner": "alexdima",
                "comment": "Report quality details for a successful speculative response.",
                "chatrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "chatrequestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source of the current turn request"
                },
                "isnoopedit": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the response text is identical to the speculation."
                },
                "speculationrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "containselidedcodecomments": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the response text contains elided code comments."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The model used for this speculation request"
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens",
                    "isMeasurement": true
                },
                "speculationtokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of speculation tokens",
                    "isMeasurement": true
                },
                "responsetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of response tokens",
                    "isMeasurement": true
                },
                "addedlines": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of lines added",
                    "isMeasurement": true
                },
                "removedlines": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of lines removed",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether this is a notebook",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to complete the request",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatspeculation.response.error": {
                "owner": "alexdima",
                "comment": "Report quality issue for when a speculative response failed.",
                "errormessage": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the error"
                },
                "chatrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "speculationrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the speculation request"
                },
                "chatrequestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source of the current turn request"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The model used for this speculation request"
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens",
                    "isMeasurement": true
                },
                "speculationtokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of speculation tokens",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether this is a notebook",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatspeculation.response.loop": {
                "owner": "joyceerhl",
                "comment": "Report when the model appears to have gone into a loop.",
                "hasloop": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the model appears to have gone into a loop."
                },
                "speculationrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The language id of the document"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The model used for this speculation request"
                },
                "documentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Length of original file",
                    "isMeasurement": true
                },
                "rewrittenlength": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Length of original file",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcookbook.accessed": {
                "owner": "luabud",
                "comment": "Reports when a cookbook entry is accessed for a diagnostic.",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "diagnosticcode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The diagnostic code accessed in the cookbook."
                },
                "provider": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The tool which is the diagnostic provider."
                }
            },
            "GitHub.copilot-chatapplyPatch.inResponse": {
                "owner": "digitarald",
                "comment": "Metadata about an inline response from the model",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                }
            },
            "GitHub.copilot-chattoolCallDetails": {
                "owner": "roblourens",
                "comment": "Records information about tool calls during a request.",
                "intentid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the invoked intent."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the current chat conversation."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request succeeded or failed."
                },
                "numrequests": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The total number of requests made",
                    "isMeasurement": true
                },
                "turnindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The conversation turn index",
                    "isMeasurement": true
                },
                "toolcounts": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of times each tool was used"
                },
                "sessionduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time since the session started",
                    "isMeasurement": true
                },
                "turnduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time since the turn started",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many tokens were in the last generated prompt.",
                    "isMeasurement": true
                },
                "messagecharlen": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were in the user message.",
                    "isMeasurement": true
                },
                "availabletoolcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How number of tools that were available.",
                    "isMeasurement": true
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the final response was successful or how it failed."
                },
                "invalidtoolcallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tool call rounds that had an invalid tool call."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chatpanel.request": {
                "owner": "digitarald",
                "comment": "Metadata about one message turn in a chat conversation.",
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "contexttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The context parts which were used in providing the response."
                },
                "prompttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The prompt types and their length which were used in providing the response."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the current chat conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "responseid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message response."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the response was successful or how it failed."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language of the active editor."
                },
                "codeblocks": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Code block languages in the response."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "turn": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many turns have been made in the conversation.",
                    "isMeasurement": true
                },
                "textblocks": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "For text-only responses (no code), how many paragraphs were in the response.",
                    "isMeasurement": true
                },
                "links": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Symbol and file links in the response.",
                    "isMeasurement": true
                },
                "maybeofftopic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the response sounds like it got rejected due to the request being off-topic.",
                    "isMeasurement": true
                },
                "messagetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were in the user message.",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were in the generated prompt.",
                    "isMeasurement": true
                },
                "userpromptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many user messages were in the generated prompt.",
                    "isMeasurement": true
                },
                "responsetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were in the response.",
                    "isMeasurement": true
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the final request.",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to get the first token.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                },
                "codegeninstructionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions are in the request.",
                    "isMeasurement": true
                },
                "codegeninstructionslength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whats the length of the code generation instructions that were added to request.",
                    "isMeasurement": true
                },
                "codegeninstructionsfilteredcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions were filtered.",
                    "isMeasurement": true
                },
                "codegeninstructionfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instruction files were read.",
                    "isMeasurement": true
                },
                "codegeninstructionsettingscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions originated from settings.",
                    "isMeasurement": true
                },
                "toolcounts": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of times each tool was used"
                },
                "numtoolcalls": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The total number of tool calls",
                    "isMeasurement": true
                },
                "availabletoolcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How number of tools that were available.",
                    "isMeasurement": true
                },
                "temporalctxfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many temporal document-parts where included",
                    "isMeasurement": true
                },
                "temporalctxtotalcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many characters all temporal document-parts where included",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatinline.request": {
                "owner": "digitarald",
                "comment": "Metadata about an inline response from the model",
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "contexttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The context parts which were used in providing the response."
                },
                "prompttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The prompt types and their length which were used in providing the response."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language of the current document."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result type of the response."
                },
                "replytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How response is shown in the interface."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "diagnosticsprovider": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The diagnostics provider."
                },
                "diagnosticcodes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The diagnostics codes in the file."
                },
                "selectiondiagnosticcodes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The selected diagnostics codes."
                },
                "firstturn": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the first turn in the conversation.",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is a notebook document.",
                    "isMeasurement": true
                },
                "messagetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many tokens are in the rest of the query, without the command.",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many tokens are in the overall prompt.",
                    "isMeasurement": true
                },
                "responsetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many tokens were in the response.",
                    "isMeasurement": true
                },
                "implicitcommand": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the command was implictly detected or provided by the user.",
                    "isMeasurement": true
                },
                "attemptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many times the user has retried.",
                    "isMeasurement": true
                },
                "selectionlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the current selection.",
                    "isMeasurement": true
                },
                "wholerangelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the expanded whole range.",
                    "isMeasurement": true
                },
                "editcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many edits are suggested.",
                    "isMeasurement": true
                },
                "editlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in all suggested edits.",
                    "isMeasurement": true
                },
                "markdowncharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were emitted as markdown to vscode in the response stream.",
                    "isMeasurement": true
                },
                "problemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current document.",
                    "isMeasurement": true
                },
                "selectionproblemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current selected code.",
                    "isMeasurement": true
                },
                "diagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current .",
                    "isMeasurement": true
                },
                "selectiondiagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the code at the selection.",
                    "isMeasurement": true
                },
                "outcomeannotations": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Annotations about the outcome of the request."
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the final request.",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to get the first token.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                },
                "temporalctxfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many temporal document-parts where included",
                    "isMeasurement": true
                },
                "temporalctxtotalcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many characters all temporal document-parts where included",
                    "isMeasurement": true
                },
                "codegeninstructionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions are in the request.",
                    "isMeasurement": true
                },
                "codegeninstructionslength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The length of the code generation instructions that were added to request.",
                    "isMeasurement": true
                },
                "codegeninstructionsfilteredcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions were filtered.",
                    "isMeasurement": true
                },
                "codegeninstructionfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instruction files were read.",
                    "isMeasurement": true
                },
                "codegeninstructionsettingscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions originated from settings.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgetNodeToDocument": {
                "owner": "ulugbekna",
                "comment": "Info on success and properties of detecting AST node to document",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language ID of the document"
                },
                "typeofnodetodocument": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Type of the AST node offered to be documented (type defined by tree-sitter grammar for that language)"
                },
                "nodetodocumentstart": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Start offset of the AST node offered to be documented (type defined by tree-sitter grammar for that language)"
                },
                "nodetodocumentend": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "End offset of the AST node offered to be documented (type defined by tree-sitter grammar for that language)"
                },
                "selectionoffsetrangestart": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The start offset range of the selection in the document"
                },
                "selectionoffsetrangeend": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The end offset range of the selection in the document"
                },
                "wholerangeoffsetrangestart": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The start offset range of the inline-chat wholeRange"
                },
                "wholerangeoffsetrangeend": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The end offset range of the inline-chat wholeRange"
                },
                "timespentms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time (in milliseconds) spent on finding the AST node to document (approximate as it's an async call)",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgit.generateCommitMessageSurvival": {
                "owner": "lszomoru",
                "comment": "Tracks how much of the generated git commit message has survived",
                "attemptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many times the user has retried.",
                    "isMeasurement": true
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the suggested git commit message was used when the code change was committed.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatfeedback.generateDiagnostics": {
                "owner": "chrmarti",
                "comment": "Metadata about the code feedback generation",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which backend generated the comment."
                },
                "messageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result type of the response."
                },
                "documenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of document (e.g., text or notebook)."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "inputtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What type of input (e.g., selection or change)."
                },
                "commenttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of comment (e.g., correctness or performance)."
                },
                "promptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of prompts run.",
                    "isMeasurement": true
                },
                "numberofdiagnostics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of diagnostics.",
                    "isMeasurement": true
                },
                "inputdocumentcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many documents were part of the input.",
                    "isMeasurement": true
                },
                "inputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many (selected or changed) lines were part of the input.",
                    "isMeasurement": true
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the request.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreview.comment.vote": {
                "owner": "chrmarti",
                "comment": "Metadata about votes on review comments",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which backend generated the comment."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "documenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of document (e.g., text or notebook)."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "inputtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What type of input (e.g., selection or change)."
                },
                "commenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of comment (e.g., correctness or performance)."
                },
                "useraction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What action the user triggered (e.g., helpful, unhelpful, apply or discard)."
                },
                "commentindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Original index of the comment in the generated comments.",
                    "isMeasurement": true
                },
                "actioncount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of previously logged actions on the comment.",
                    "isMeasurement": true
                },
                "inputdocumentcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many documents were part of the input.",
                    "isMeasurement": true
                },
                "inputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many (selected or changed) lines were part of the input.",
                    "isMeasurement": true
                },
                "promptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of prompts run.",
                    "isMeasurement": true
                },
                "totalcomments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of comments.",
                    "isMeasurement": true
                },
                "comments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many comments are affected by the action.",
                    "isMeasurement": true
                },
                "commentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters long the review comment is.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreview.comment.action": {
                "owner": "chrmarti",
                "comment": "Metadata about actions on review comments",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which backend generated the comment."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "documenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of document (e.g., text or notebook)."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "inputtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What type of input (e.g., selection or change)."
                },
                "commenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of comment (e.g., correctness or performance)."
                },
                "useraction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What action the user triggered (e.g., helpful, unhelpful, apply or discard)."
                },
                "commentindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Original index of the comment in the generated comments.",
                    "isMeasurement": true
                },
                "actioncount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of previously logged actions on the comment.",
                    "isMeasurement": true
                },
                "inputdocumentcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many documents were part of the input.",
                    "isMeasurement": true
                },
                "inputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many (selected or changed) lines were part of the input.",
                    "isMeasurement": true
                },
                "promptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of prompts run.",
                    "isMeasurement": true
                },
                "totalcomments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of comments.",
                    "isMeasurement": true
                },
                "comments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many comments are affected by the action.",
                    "isMeasurement": true
                },
                "commentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters long the review comment is.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreview.discardCommentRangeSurvival": {
                "owner": "chrmarti",
                "comment": "Tracks how much percent of the commented range surived after 5 minutes of discarding",
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which backend generated the comment."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "documenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of document (e.g., text or notebook)."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "inputtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What type of input (e.g., selection or change)."
                },
                "commenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of comment (e.g., correctness or performance)."
                },
                "useraction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What action the user triggered (e.g., helpful, unhelpful, apply or discard)."
                },
                "commentindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Original index of the comment in the generated comments.",
                    "isMeasurement": true
                },
                "actioncount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of previously logged actions on the comment.",
                    "isMeasurement": true
                },
                "inputdocumentcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many documents were part of the input.",
                    "isMeasurement": true
                },
                "inputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many (selected or changed) lines were part of the input.",
                    "isMeasurement": true
                },
                "promptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of prompts run.",
                    "isMeasurement": true
                },
                "totalcomments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of comments.",
                    "isMeasurement": true
                },
                "comments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many comments are affected by the action.",
                    "isMeasurement": true
                },
                "commentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters long the review comment is.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatdevcontainer.generateConfig": {
                "owner": "chrmarti",
                "comment": "Metadata about the Dev Container Config generation",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result type of the response."
                },
                "templateid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The chosen template id."
                },
                "featureids": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The chosen feature ids."
                },
                "originalfilenamecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of filenames.",
                    "isMeasurement": true
                },
                "originalfilenamelength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The length of the filenames.",
                    "isMeasurement": true
                },
                "processedfilenamecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of filenames after processing.",
                    "isMeasurement": true
                },
                "processedfilenamelength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The length of the filenames after processing.",
                    "isMeasurement": true
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the request.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatresponse.cancelled": {
                "owner": "digitarald",
                "comment": "Report canceled service responses for quality.",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Model selection for the response"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source for why the request was made"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the request"
                },
                "totaltokenmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum total token window",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens",
                    "isMeasurement": true
                },
                "tokencountmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum generated tokens",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "timetocancelled": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "isvisionrequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the request was for a vision model",
                    "isMeasurement": true
                },
                "isbyok": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was for a BYOK model",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatresponse.error": {
                "owner": "digitarald",
                "comment": "Report quality issue for when a service response failed.",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Type of issue"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Reason of issue"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Model selection for the response"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source for why the request was made"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the request"
                },
                "totaltokenmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum total token window",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens",
                    "isMeasurement": true
                },
                "tokencountmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum generated tokens",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "isvisionrequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the request was for a vision model",
                    "isMeasurement": true
                },
                "isbyok": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was for a BYOK model",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatresponse.success": {
                "owner": "digitarald",
                "comment": "Report quality details for a successful service response.",
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Reason for why a response finished"
                },
                "filterreason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Reason for why a response was filtered"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source of the initial request"
                },
                "initiatortype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was initiated by a user or an agent"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Model selection for the response"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "totaltokenmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum total token window",
                    "isMeasurement": true
                },
                "clientprompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens, locally counted",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens, server side counted",
                    "isMeasurement": true
                },
                "promptcachetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens hitting cache as reported by server",
                    "isMeasurement": true
                },
                "tokencountmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum generated tokens",
                    "isMeasurement": true
                },
                "tokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of generated tokens",
                    "isMeasurement": true
                },
                "acceptedpredictiontokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prediction that appeared in the completion",
                    "isMeasurement": true
                },
                "rejectedpredictiontokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prediction that appeared in the completion",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to complete the request",
                    "isMeasurement": true
                },
                "isvisionrequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the request was for a vision model",
                    "isMeasurement": true
                },
                "isbyok": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was for a BYOK model",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatconversation.repetition.detected": {
                "owner": "lramos15",
                "comment": "Calculates the number of repetitions in a response. Useful for loop detection",
                "finishreason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Reason for why a response finished. Helps identify cancellation vs length limits"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id for this message request."
                },
                "lengthofline": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Length of the repeating line, in characters.",
                    "isMeasurement": true
                },
                "numberofrepetitions": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of times the line repeats.",
                    "isMeasurement": true
                },
                "totallines": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of total lines in the response.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgit.generateCommitMessage": {
                "owner": "lszomoru",
                "comment": "Metadata about the git commit message generation",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result type of the response."
                },
                "attemptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many times the user has retried.",
                    "isMeasurement": true
                },
                "difffilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of files in the commit.",
                    "isMeasurement": true
                },
                "difflength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The length of the diffs in the commit.",
                    "isMeasurement": true
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the request.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgit.generateCommitMessageIncorrectResponseFormat": {
                "owner": "lszomoru",
                "comment": "Metadata about the git commit message generation when the response is not in the expected format",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "responseformat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of the response format."
                }
            },
            "GitHub.copilot-chatintentDetection": {
                "owner": "ulugbekna",
                "comment": "Intent detection telemetry.",
                "chatlocation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which chat (panel or inline) intent detection is used for."
                },
                "preferredintent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which intent was initially provided as preferred."
                },
                "detectedintent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Intent that was detected by Copilot"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language ID of the document for which intent detection happened."
                },
                "isrerunwithoutintentdetection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user disliked the detected intent and tried to rerun without it."
                }
            },
            "GitHub.copilot-chatpanel.action.filelink": {
                "owner": "digitarald",
                "comment": "Clicks on file links in the panel response",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the chat request."
                }
            },
            "GitHub.copilot-chatpanel.action.symbollink": {
                "owner": "digitarald",
                "comment": "Clicks on symbol links in the panel response",
                "hadmatch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the symbol was found.",
                    "isMeasurement": true
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the chat request."
                }
            },
            "GitHub.copilot-chatpanel.action.openSymbolFromReferencesLink": {
                "owner": "mjbvz",
                "comment": "Clicks on symbol links in the panel response",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the chat request."
                },
                "resolveddestinationtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How the link was actually resolved."
                }
            },
            "GitHub.copilot-chatreplaceStringToolInvoked": {
                "owner": "roblourens",
                "comment": "The replace_string tool was invoked",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "interactionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current interaction."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the invocation was successful, or a failure reason"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook, 1 = yes, 0 = no, other = unknown.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatapplyPatch.trackEditSurvival": {
                "owner": "joyceerhl",
                "comment": "Tracks how much percent of the AI edits survived after 5 minutes of accepting",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "requestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from where the request was made"
                },
                "mapper": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The code mapper used strategy"
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatapplyPatchHealRate": {
                "owner": "connor4312",
                "comment": "Records how correct the healing of a patch was",
                "success": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the input was healed"
                }
            },
            "GitHub.copilot-chatapplyPatchToolInvoked": {
                "owner": "roblourens",
                "comment": "The apply_patch tool was invoked",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "interactionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current interaction."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the invocation was successful, or a failure reason"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                },
                "healed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the input was healed"
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the input was a notebook, 1 = yes, 0 = no, other = Unknown"
                }
            },
            "GitHub.copilot-chatreadFileToolInvoked": {
                "owner": "roblourens",
                "comment": "The read_file tool was invoked",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "interactionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current interaction."
                },
                "tooloutcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the invocation was successful, or a failure reason"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                },
                "linesread": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of lines that were read",
                    "isMeasurement": true
                },
                "truncated": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The file length was truncated",
                    "isMeasurement": true
                },
                "isv2": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the tool is a v2 version"
                }
            },
            "GitHub.copilot-chateditNotebook.toolUsed": {
                "owner": "donjayamanne",
                "comment": "Tracks the tool used to edit Notebook documents",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "resourcehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The hash of the resource of the current request turn. (Notebook Uri)"
                },
                "edittool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tool used to edit the notebook, one of 'notebookEdit' | 'applyPatch' | 'stringReplace' | 'newNotebookIntent' | 'editCodeIntent' | 'insertEdit' | 'createFile'"
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chateditNotebook.toolOutcome": {
                "owner": "donjayamanne",
                "comment": "Tracks the tool used to edit Notebook documents",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Outcome of the edit operation",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chateditNotebook.cellEditOps": {
                "owner": "donjayamanne",
                "comment": "Tracks the tool used to edit Notebook documents",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "insert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cell inserts",
                    "isMeasurement": true
                },
                "delete": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cell deletes",
                    "isMeasurement": true
                },
                "edit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cell edits",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chateditNotebook.editCellWithCodeMarker": {
                "owner": "donjayamanne",
                "comment": "Tracks the presence of code markers in code when editing Notebook cells",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "resourcehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The hash of the resource of the current request turn. (Notebook Uri)"
                },
                "hascodemarker": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether there any code markers are present",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chatnewNotebookTool.outcome": {
                "owner": "donjayamanne",
                "comment": "Tracks the outcome of new notebook tool",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The outcome of the tool call."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chattoolUse.runInTerminal": {
                "owner": "roblourens",
                "comment": "Understanding the usage of the runInTerminal tool",
                "result": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the tool ran successfully, or the type of error"
                },
                "strategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What strategy was used to execute the command (0=none, 1=basic, 2=rich)",
                    "isMeasurement": true
                },
                "usereditedcommand": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user edited the command",
                    "isMeasurement": true
                },
                "tooleditedcommand": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the tool edited the command",
                    "isMeasurement": true
                },
                "isbackground": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the command is a background command",
                    "isMeasurement": true
                },
                "isnewsession": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "Whether this was the first execution for the terminal session"
                },
                "outputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "How many lines of output were produced, this is -1 when isBackground is true or if there's an error"
                },
                "nonzeroexitcode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "Whether the command exited with a non-zero code (-1=error/unknown, 0=zero exit code, 1=non-zero)"
                },
                "timingconnectms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "How long the terminal took to start up and connect to"
                },
                "timingexecutems": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "How long the command took to execute"
                }
            },
            "GitHub.copilot-chateditFileResult.diagnostics": {
                "owner": "roblourens",
                "comment": "Tracks whether new diagnostics were found after editing files",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "toolname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the tool that performed the edit"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                },
                "totalnewdiagnostics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of new diagnostics found across all files",
                    "isMeasurement": true
                },
                "fileswithnewdiagnostics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that had new diagnostics",
                    "isMeasurement": true
                },
                "totalfilesedited": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files that were edited",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatrunNotebookCellInvoked": {
                "owner": "amunger",
                "comment": "Tracks the usage and result ",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "resourcehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The hash of the resource of the current request turn. (Notebook Uri)"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                },
                "result": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of the operation: success, failure, or unknown."
                },
                "resultinfo": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason for failure if the result is failure."
                }
            },
            "GitHub.copilot-chatgithubRepoTool.prepare.error": {
                "owner": "mjbvz",
                "comment": "Tracks errors for the GitHub repo tool prepare step",
                "errorid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "General reason why the search failed"
                },
                "errordetails": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "More detailed info about the failure"
                }
            },
            "GitHub.copilot-chatworkbenchActionExecuted": {},
            "GitHub.copilot-chatcommandCenter.chatInstall": {
                "owner": "bpasero",
                "comment": "Provides insight into chat installation.",
                "installresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the extension was installed successfully, cancelled or failed to install."
                },
                "installduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The duration it took to install the extension.",
                    "isMeasurement": true
                },
                "signuperrorcode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The error code in case of an error signing up."
                }
            },
            "GitHub.copilot-chatinteractiveEditor/session": {
                "owner": "jrieken",
                "comment": "Data about an interaction editor session",
                "extension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension providing the data"
                },
                "rounds": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of request that were made"
                },
                "undos": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Requests that have been undone"
                },
                "edits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Did edits happen while the session was active"
                },
                "terminaledits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Did edits terminal the session",
                    "isMeasurement": true
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "When the session started"
                },
                "endtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "When the session ended"
                }
            },
            "GitHub.copilot-chatnotebook/editorOpened": {
                "owner": "rebornix",
                "comment": "Identify the notebook editor view type",
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File system provider scheme for the resource"
                },
                "ext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File extension for the resource"
                },
                "viewtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "View type of the notebook editor"
                },
                "isrepl": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the notebook editor is within a REPL editor",
                    "isMeasurement": true
                }
            }
        },
        "commonProperties": {
            "common.tid": {
                "classification": "EndUserPseudonymizedInformation",
                "purpose": "BusinessInsight"
            },
            "common.sku": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight"
            },
            "common.internal": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "isMeasurement": true
            }
        }
    },
    "github.copilot-chat-0.29.2025062703": {
        "events": {
            "GitHub.copilot-chatnotebook.chatEditGeneration": {
                "owner": "donjayamanne",
                "comment": "Metadata about the code mapper request",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "requestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from where the request was made"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Model selection for the response"
                },
                "inputformat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Input format for the notebook source (xml, json, text)"
                },
                "isemptynotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the notebook is empty",
                    "isMeasurement": true
                },
                "isnotebookoruri": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether we're given a notebook or just a uri (1 = Notebook, 0 = Uri)",
                    "isMeasurement": true
                },
                "isjupyternotebookuri": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether we're given a Jupyter notebook or just a uri (1 = Jupyter Notebook, 0 = Other)",
                    "isMeasurement": true
                },
                "iseditemitted": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether a Notebook edit was emitted (insert or delete cell) (1 = Yes, 0 = No)",
                    "isMeasurement": true
                },
                "iscelltexteditemitted": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether an edit was emitted for a cell (1 = Yes, 0 = No)",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "sourcelength": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of lines in the source code from which we're to generate edits",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatnesStatusOnActivation": {
                "owner": "ulugbekna",
                "comment": "To identify if NES was enabled by the user when extension is activated",
                "iscompletionsenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether ghost-text completions was effectively enabled",
                    "isMeasurement": true
                },
                "iscompletionsuserconfigured": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether ghost-text completions was configured by the user",
                    "isMeasurement": true
                },
                "isnesenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether NES was effectively enabled (e.g., by nes-by-default exp)",
                    "isMeasurement": true
                },
                "isnesuserconfigured": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the Inline Edits feature is configured by the user",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubAvailableEmbeddingTypes.getAvailableTypes.error": {
                "owner": "mjbvz",
                "comment": "Information about failed githubAvailableEmbeddingTypes calls",
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubAvailableEmbeddingTypes.getAvailableTypes.success": {
                "owner": "mjbvz",
                "comment": "Information about successful githubAvailableEmbeddingTypes calls",
                "primaryembeddingtypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "List of primary embedding types"
                },
                "deprecatedembeddingtypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "List of deprecated embedding types"
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.isAvailable": {
                "owner": "mjbvz",
                "comment": "Metadata about the code search availability check",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "unavailablereason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "repostatues": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Detailed info about the statues of the repos in the workspace"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How long the check too to complete",
                    "isMeasurement": true
                },
                "indexedrepocount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of indexed repositories",
                    "isMeasurement": true
                },
                "notyetindexedrepocount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that have not yet been indexed",
                    "isMeasurement": true
                },
                "indexedrepolocation.workspace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that map exactly to a workspace folder",
                    "isMeasurement": true
                },
                "indexedrepolocation.parent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that map to a parent folder",
                    "isMeasurement": true
                },
                "indexedrepolocation.sub": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that map to a sub-folder",
                    "isMeasurement": true
                },
                "indexedrepolocation.unknown": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that map to an unknown folder",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.search.success": {
                "owner": "mjbvz",
                "comment": "Information about successful code searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "diffsearchstrategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Search strategy for the diff"
                },
                "chunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of returned chunks just from code search",
                    "isMeasurement": true
                },
                "locallychangedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files that are different than the code search index",
                    "isMeasurement": true
                },
                "codesearchoutofsync": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tracks if the local commit we think code search has indexed matches what code search actually has indexed",
                    "isMeasurement": true
                },
                "embeddingsrecomputedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that needed to have their embeddings recomputed. Only logged when embeddings search is used",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.perf.doCodeSearchWithRetry": {
                "owner": "mjbvz",
                "comment": "Total time for doCodeSearch to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.perf.tryToInstantIndexRepo": {
                "owner": "mjbvz",
                "comment": "Total time for instant indexing to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "startrepostatus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Initial status of the repo"
                },
                "endrepostatus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Final status of the repo"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.triggerRemoteIndexing": {
                "owner": "mjbvz",
                "comment": "Triggers of remote indexing",
                "triggerreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How the call was triggered"
                },
                "error": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How the trigger call failed"
                }
            },
            "GitHub.copilot-chatworkspaceChunkSearchStrategy": {
                "owner": "mjbvz",
                "comment": "Understanding which workspace chunk search strategy is used",
                "strategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The chosen strategy"
                },
                "errordiagmessage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The reason why the search failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total time in ms for workspace chunk search",
                    "isMeasurement": true
                },
                "workspaceindexfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files in our workspace index",
                    "isMeasurement": true
                },
                "wasfirstsearchinworkspace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tracks if this was the first time we triggered a workspace search",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkSearch.perf.adaRerank": {
                "owner": "mjbvz",
                "comment": "Understanding how effective ADA re-ranking is",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkIndex.initialize": {
                "owner": "mjbvz",
                "comment": "Information about successful code searches",
                "totalfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files we can index",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatembeddingsChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatembeddingsChunkSearch.perf.searchSubsetOfFiles": {
                "owner": "mjbvz",
                "comment": "Total time for searchSubsetOfFiles to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatfullWorkspaceChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "failurereason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "why did we fail"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfWithSemanticChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfWithSemanticChunkSearch.perf.toSemanticChunks": {
                "owner": "mjbvz",
                "comment": "Time for the toSemantic part of searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfChunkSearch.perf.searchSubsetOfFiles": {
                "owner": "mjbvz",
                "comment": "Total time for searchSubsetOfFiles to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "files": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files being searched",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfChunkSearch.perf.tfidfSearch": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "filecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files in the index",
                    "isMeasurement": true
                },
                "updatedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files updated for this search",
                    "isMeasurement": true
                },
                "updatetime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that updating of the index took",
                    "isMeasurement": true
                },
                "searchtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that searching the index took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfidfChunkSearch.perf.initializeTfidf": {
                "owner": "mjbvz",
                "comment": "Understanding how long it took to initialize the tfidf index",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "filecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that we can index",
                    "isMeasurement": true
                },
                "newfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of new files",
                    "isMeasurement": true
                },
                "outofsyncfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that are out of sync",
                    "isMeasurement": true
                },
                "deletedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that have been deleted",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.triggerIndexingOfWorkspace": {
                "owner": "mjbvz",
                "comment": "Total time for triggerIndexingOfWorkspace to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What triggered the call"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.searchWorkspace": {
                "owner": "mjbvz",
                "comment": "Total time for searchWorkspace to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.searchSubsetOfFiles": {
                "owner": "mjbvz",
                "comment": "Total time for searchSubsetOfFiles to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.toSemanticChunks.noSemanticChunkFound": {
                "owner": "mjbvz",
                "comment": "Tracks errors related to mapping to semantic chunks",
                "extname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The file's extension"
                },
                "semanticchunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of semantic chunks returned",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.getAllWorkspaceEmbeddings": {
                "owner": "mjbvz",
                "comment": "Total time for getAllWorkspaceEmbeddings to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "totalfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files we have in the workspace",
                    "isMeasurement": true
                },
                "recomputedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files that were not in the cache",
                    "isMeasurement": true
                },
                "recomputedtotalcontentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total length of text for recomputed files",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.getEmbeddingsForFiles": {
                "owner": "mjbvz",
                "comment": "Total time for getEmbeddingsForFiles to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "totalfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files we are searching",
                    "isMeasurement": true
                },
                "recomputedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files that were not in the cache",
                    "isMeasurement": true
                },
                "recomputedtotalcontentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total length of text for recomputed files",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatsurvey.show": {
                "owner": "digitarald",
                "comment": "Measures survey notification result",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The last used feature before the survey."
                },
                "language": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The last used editor language before the survey."
                },
                "activedays": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of days the user has used the extension.",
                    "isMeasurement": true
                },
                "firstactive": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of days since the user first used the extension.",
                    "isMeasurement": true
                },
                "surveytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of survey being prompted."
                }
            },
            "GitHub.copilot-chatsurvey.action": {
                "owner": "digitarald",
                "comment": "Measures survey notification result",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the survey prompt."
                },
                "language": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The last used editor language before the survey."
                },
                "selection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The user's selection."
                },
                "surveytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of survey being prompted."
                }
            },
            "GitHub.copilot-chatembedding.error": {
                "owner": "digitarald",
                "comment": "Tracks errors for embedding requests",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Error type"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Detailed error reason"
                }
            },
            "GitHub.copilot-chatembedding.success": {
                "owner": "digitarald",
                "comment": "Performance data for embedding requests",
                "inputtokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The number of tokens in the input.",
                    "isMeasurement": true
                },
                "batchsize": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The number of inputs sent over.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.getRemoteIndexState.error": {
                "owner": "mjbvz",
                "comment": "Information about failed remote index state requests",
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.triggerIndexing.error": {
                "owner": "mjbvz",
                "comment": "Information about failed trigger indexing requests",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "triggerreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason why the indexing was triggered"
                },
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.getRemoteIndexState.success": {
                "owner": "mjbvz",
                "comment": "Information about failed remote index state requests",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "triggerreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason why the indexing was triggered"
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.searchRepo.error": {
                "owner": "mjbvz",
                "comment": "Information about failed code searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.searchRepo.success": {
                "owner": "mjbvz",
                "comment": "Information about successful code searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "resultcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of returned chunks from the search",
                    "isMeasurement": true
                },
                "resultoutofsync": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tracks if the commit we think code search has indexed matches the commit code search returns results from",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatadoCodeSearch.searchRepo.error": {
                "owner": "mjbvz",
                "comment": "Information about failed code ado searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatadoCodeSearch.searchRepo.success": {
                "owner": "mjbvz",
                "comment": "Information about successful ado code search searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "resultcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of returned chunks from the search",
                    "isMeasurement": true
                },
                "resultoutofsync": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tracks if the commit we think code search has indexed matches the commit code search returns results from",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchRepoTracker.openGitRepo.error.noCurrentRepo": {
                "owner": "mjbvz",
                "comment": "Information about errors when trying to resolve a remote"
            },
            "GitHub.copilot-chatcodeSearchRepoTracker.openGitRepo.remoteInfo": {
                "owner": "mjbvz",
                "comment": "Information about the remote",
                "resolvedremotetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Identifies the primary remote's type ",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchRepoTracker.openGitRepo.error.couldNotResolveRemote": {
                "owner": "mjbvz",
                "comment": "Information about errors when trying to resolve a remote",
                "reporemotefetchurlscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of remote fetch urls on the git repo",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattoken": {
                "owner": "digitarald",
                "comment": "Copilot token received from the service.",
                "chatenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the token enabled chat.",
                    "isMeasurement": true
                },
                "snippyenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the block setting for public suggestions is enabled.",
                    "isMeasurement": true
                },
                "telemetryenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the subscription has telemetry enabled.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatquery-expfeature": {
                "abexp.queriedfeature": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "GitHub.copilot-chatcall-tas-error": {
                "errortype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "GitHub.copilot-chattokenizer.stats": {
                "owner": "jrieken",
                "comment": "Perf stats about tokenizers",
                "callcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How often tokenize was called",
                    "isMeasurement": true
                },
                "encodeduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Average time encode took",
                    "isMeasurement": true
                },
                "textlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Average length of text that got encoded",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.computeChunksAndEmbeddings.error": {
                "owner": "mjbvz",
                "comment": "Tracks errors from the chunks service",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of computeChunksAndEmbeddings"
                },
                "responsestatus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatdebugSessionStart": {
                "owner": "connor4312",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "breakpointcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "exceptionbreakpoints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "watchexpressionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "extensionname": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight"
                },
                "isbuiltin": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "launchjsonexists": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatdebugSessionStop": {
                "owner": "connor4312",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "success": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "sessionlengthinseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "breakpointcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "watchexpressionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattoolUse.runInTerminal": {
                "owner": "roblourens",
                "comment": "Understanding the usage of the runInTerminal tool",
                "result": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the tool ran successfully, or the type of error"
                },
                "strategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What strategy was used to execute the command (0=none, 1=basic, 2=rich)",
                    "isMeasurement": true
                },
                "usereditedcommand": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user edited the command",
                    "isMeasurement": true
                },
                "tooleditedcommand": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the tool edited the command",
                    "isMeasurement": true
                },
                "isbackground": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the command is a background command",
                    "isMeasurement": true
                },
                "isnewsession": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "Whether this was the first execution for the terminal session"
                },
                "outputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "How many lines of output were produced, this is -1 when isBackground is true or if there's an error"
                },
                "nonzeroexitcode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "Whether the command exited with a non-zero code (-1=error/unknown, 0=zero exit code, 1=non-zero)"
                },
                "timingconnectms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "How long the terminal took to start up and connect to"
                },
                "timingexecutems": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "How long the command took to execute"
                }
            },
            "GitHub.copilot-chatreadFileToolInvoked": {
                "owner": "roblourens",
                "comment": "The read_file tool was invoked",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "interactionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current interaction."
                },
                "tooloutcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the invocation was successful, or a failure reason"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                },
                "linesread": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of lines that were read",
                    "isMeasurement": true
                },
                "truncated": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The file length was truncated",
                    "isMeasurement": true
                },
                "isv2": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the tool is a v2 version"
                }
            },
            "GitHub.copilot-chateditFileResult.diagnostics": {
                "owner": "roblourens",
                "comment": "Tracks whether new diagnostics were found after editing files",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "toolname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the tool that performed the edit"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                },
                "totalnewdiagnostics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of new diagnostics found across all files",
                    "isMeasurement": true
                },
                "fileswithnewdiagnostics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that had new diagnostics",
                    "isMeasurement": true
                },
                "totalfilesedited": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files that were edited",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatrunNotebookCellInvoked": {
                "owner": "amunger",
                "comment": "Tracks the usage and result ",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "resourcehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The hash of the resource of the current request turn. (Notebook Uri)"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                },
                "result": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of the operation: success, failure, or unknown."
                },
                "resultinfo": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason for failure if the result is failure."
                }
            },
            "GitHub.copilot-chatgithubRepoTool.prepare.error": {
                "owner": "mjbvz",
                "comment": "Tracks errors for the GitHub repo tool prepare step",
                "errorid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "General reason why the search failed"
                },
                "errordetails": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "More detailed info about the failure"
                }
            },
            "GitHub.copilot-chateditNotebook.toolUsed": {
                "owner": "donjayamanne",
                "comment": "Tracks the tool used to edit Notebook documents",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "resourcehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The hash of the resource of the current request turn. (Notebook Uri)"
                },
                "edittool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tool used to edit the notebook, one of 'notebookEdit' | 'applyPatch' | 'stringReplace' | 'newNotebookIntent' | 'editCodeIntent' | 'insertEdit' | 'createFile'"
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chateditNotebook.toolOutcome": {
                "owner": "donjayamanne",
                "comment": "Tracks the tool used to edit Notebook documents",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Outcome of the edit operation",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chateditNotebook.cellEditOps": {
                "owner": "donjayamanne",
                "comment": "Tracks the tool used to edit Notebook documents",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "insert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cell inserts",
                    "isMeasurement": true
                },
                "delete": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cell deletes",
                    "isMeasurement": true
                },
                "edit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cell edits",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chateditNotebook.editCellWithCodeMarker": {
                "owner": "donjayamanne",
                "comment": "Tracks the presence of code markers in code when editing Notebook cells",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "resourcehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The hash of the resource of the current request turn. (Notebook Uri)"
                },
                "hascodemarker": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether there any code markers are present",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chatnewNotebookTool.outcome": {
                "owner": "donjayamanne",
                "comment": "Tracks the outcome of new notebook tool",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The outcome of the tool call."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chatapplyPatch.trackEditSurvival": {
                "owner": "joyceerhl",
                "comment": "Tracks how much percent of the AI edits survived after 5 minutes of accepting",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "requestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from where the request was made"
                },
                "mapper": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The code mapper used strategy"
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatapplyPatchHealRate": {
                "owner": "connor4312",
                "comment": "Records how correct the healing of a patch was",
                "success": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the input was healed"
                }
            },
            "GitHub.copilot-chatapplyPatchToolInvoked": {
                "owner": "roblourens",
                "comment": "The apply_patch tool was invoked",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "interactionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current interaction."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the invocation was successful, or a failure reason"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                },
                "healed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the input was healed"
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the input was a notebook, 1 = yes, 0 = no, other = Unknown"
                }
            },
            "GitHub.copilot-chatcodeMapper.trackEditSurvival": {
                "owner": "aeschli",
                "comment": "Tracks how much percent of the AI edits survived after 5 minutes of accepting",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "requestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from where the request was made"
                },
                "mapper": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The code mapper used: One of 'fast', 'fast-lora', 'full' and 'patch'"
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "speculationrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the speculation request."
                },
                "chatrequestmodel": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the base chat request to generate the edit object."
                }
            },
            "GitHub.copilot-chatreplaceStringToolInvoked": {
                "owner": "roblourens",
                "comment": "The replace_string tool was invoked",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "interactionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current interaction."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the invocation was successful, or a failure reason"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook, 1 = yes, 0 = no, other = unknown.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatintent.fixTestFailure.actioned": {
                "owner": "connor4312",
                "comment": "Reports when we show a ",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Where the action was taken"
                }
            },
            "GitHub.copilot-chattoolCalling.invalidToolMessages": {
                "owner": "roblourens",
                "comment": "Provides info about invalid tool messages that were rendered in a prompt",
                "filterreasons": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reasons for filtering the messages."
                },
                "filtercount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of filtered messages.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatpanel.edit.codeblocks": {
                "owner": "joyceerhl",
                "comment": "Records information about the proposed edit codeblocks in an editing session",
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the current chat conversation."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request succeeded or failed."
                },
                "workingsetcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of entries in the working set",
                    "isMeasurement": true
                },
                "uniquecodeblockuricount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of unique code block URIs",
                    "isMeasurement": true
                },
                "codeblockcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of code blocks in the response",
                    "isMeasurement": true
                },
                "codeblockwithuricount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of code blocks that had URIs",
                    "isMeasurement": true
                },
                "codeblockwithelidedcodecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of code blocks that had a ...existing code... comment",
                    "isMeasurement": true
                },
                "shellcodeblockcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of shell code blocks in the response",
                    "isMeasurement": true
                },
                "shellcodeblockwithuricount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of shell code blocks that had URIs",
                    "isMeasurement": true
                },
                "shellcodeblockwithelidedcodecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of shell code blocks that had a ...existing code... comment",
                    "isMeasurement": true
                },
                "editstepcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of edit steps in the session so far",
                    "isMeasurement": true
                },
                "sessionduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time since the session started",
                    "isMeasurement": true
                },
                "intentid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the intent being executed"
                }
            },
            "GitHub.copilot-chateditCodeIntent.promptRender": {
                "owner": "roblourens",
                "comment": "Understanding the performance of the edit code intent rendering",
                "promptrenderdurationincludingrunningtools": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of the prompt rendering, includes running tools",
                    "isMeasurement": true
                },
                "isagentmode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the prompt was for agent mode",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattriggerSummarizeFailed": {
                "owner": "roblourens",
                "comment": "Tracks when triggering summarization failed - for example, a summary was created but not applied successfully.",
                "errorkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The success state or failure reason of the summarization."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model ID used for the summarization."
                }
            },
            "GitHub.copilot-chatpanel.action.copy": {
                "owner": "digitarald",
                "comment": "Counts copied code blocks from a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "codeblockindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Index of the code block in the response.",
                    "isMeasurement": true
                },
                "copytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the copy was done via the context menu or the toolbar.",
                    "isMeasurement": true
                },
                "charactercount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of characters copied.",
                    "isMeasurement": true
                },
                "linecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of lines copied.",
                    "isMeasurement": true
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                }
            },
            "GitHub.copilot-chatpanel.action.insert": {
                "owner": "digitarald",
                "comment": "Counts inserts on a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "codeblockindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Index of the code block in the response.",
                    "isMeasurement": true
                },
                "charactercount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of characters copied.",
                    "isMeasurement": true
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                },
                "newfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the insert was done in a new file.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatpanel.action.runinterminal": {
                "owner": "digitarald",
                "comment": "Counts generic actions on a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "blocklanguage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the code block in the response."
                },
                "codeblockindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Index of the code block in the response.",
                    "isMeasurement": true
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                }
            },
            "GitHub.copilot-chatpanel.action.followup": {
                "owner": "digitarald",
                "comment": "Counts generic actions on a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the message request that is being followed-up."
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                }
            },
            "GitHub.copilot-chatpanel.edit.feedback": {
                "owner": "joyceerhl",
                "comment": "Counts accept/reject actions for a proposed edit from panel chat",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the message request that is being followed-up."
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The user decision taken for the edited file"
                },
                "hasremainingedits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there are additional unactioned edits in the file."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook.",
                    "isMeasurement": true
                },
                "isnotebookcell": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook cell.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatpanel.action.vote": {
                "owner": "digitarald",
                "comment": "Counts votes on a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "direction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the vote was positive or negative.",
                    "isMeasurement": true
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Preset value for why the user found the response unhelpful."
                }
            },
            "GitHub.copilot-chatinline.action.vote": {
                "owner": "digitarald",
                "comment": "Metadata about votes on inline code conversations",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "replytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How response is shown in the interface."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the inline assistant conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Preset value for why the user found the response unhelpful."
                },
                "vote": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user found the response helpful.",
                    "isMeasurement": true
                },
                "selectionlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the current selection.",
                    "isMeasurement": true
                },
                "wholerangelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the expanded whole range.",
                    "isMeasurement": true
                },
                "editcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many edits are suggested.",
                    "isMeasurement": true
                },
                "editlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in all suggested edits.",
                    "isMeasurement": true
                },
                "problemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current code.",
                    "isMeasurement": true
                },
                "selectionproblemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current selected code.",
                    "isMeasurement": true
                },
                "diagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current code.",
                    "isMeasurement": true
                },
                "selectiondiagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current selected code.",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatinline.done": {
                "owner": "digitarald",
                "comment": "Metadata about an inline code suggestion being accepted or undone",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "replytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How response is shown in the interface."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the inline assistant conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "accepted": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user accepted the suggested code or discarded it.",
                    "isMeasurement": true
                },
                "selectionlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the current selection.",
                    "isMeasurement": true
                },
                "wholerangelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the expanded whole range.",
                    "isMeasurement": true
                },
                "editcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many edits are suggested.",
                    "isMeasurement": true
                },
                "editlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in all suggested edits.",
                    "isMeasurement": true
                },
                "problemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current code.",
                    "isMeasurement": true
                },
                "selectionproblemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current selected code.",
                    "isMeasurement": true
                },
                "diagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current code.",
                    "isMeasurement": true
                },
                "selectiondiagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current code.",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatinline.trackEditSurvival": {
                "owner": "hediet",
                "comment": "Tracks how much percent of the AI edits surived after 5 minutes of accepting",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "replytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How response is shown in the interface."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the inline assistant conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "selectionlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the current selection.",
                    "isMeasurement": true
                },
                "wholerangelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the expanded whole range.",
                    "isMeasurement": true
                },
                "editcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many edits are suggested.",
                    "isMeasurement": true
                },
                "editlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in all suggested edits.",
                    "isMeasurement": true
                },
                "problemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current code.",
                    "isMeasurement": true
                },
                "selectionproblemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current selected code.",
                    "isMeasurement": true
                },
                "diagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current code.",
                    "isMeasurement": true
                },
                "selectiondiagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current selected code.",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcopilot.search.feedback": {
                "owner": "osortega",
                "comment": "Feedback telemetry for copilot search",
                "kind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Feedback provided by the user."
                },
                "chunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of copilot search code chunks.",
                    "isMeasurement": true
                },
                "rankresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of the copilot search ranking."
                },
                "rankresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of the results from copilot search ranking.",
                    "isMeasurement": true
                },
                "combinedresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of combined results from copilot search.",
                    "isMeasurement": true
                },
                "chunksearchduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the chunk search",
                    "isMeasurement": true
                },
                "llmfilteringduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the LLM filtering",
                    "isMeasurement": true
                },
                "strategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates the strategy used for the search."
                }
            },
            "GitHub.copilot-chatlanguagemodelrequest": {
                "owner": "jrieken",
                "comment": "Data about extensions using the language model",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is being used"
                },
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension identifier for which we make the request"
                },
                "extensionversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension version for which we make the request"
                },
                "tokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tokens",
                    "isMeasurement": true
                },
                "tokenlimit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tokens that can be used",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chateditSourceTracker.stats": {
                "owner": "hediet",
                "comment": "Reports distribution of AI vs user edited characters.",
                "mode": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "longterm or 5minWindow"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language id of the document."
                },
                "nesmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of nes modified characters",
                    "isMeasurement": true
                },
                "inlinecompletionscopilotmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of inline completions copilot modified characters",
                    "isMeasurement": true
                },
                "inlinecompletionsnesmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of inline completions nes modified characters",
                    "isMeasurement": true
                },
                "otheraimodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of other AI modified characters",
                    "isMeasurement": true
                },
                "unknownmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of unknown modified characters",
                    "isMeasurement": true
                },
                "usermodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of user modified characters",
                    "isMeasurement": true
                },
                "idemodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of IDE modified characters",
                    "isMeasurement": true
                },
                "totalmodifiedcharacters": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Total modified characters",
                    "isMeasurement": true
                },
                "istrackedbygit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the document is tracked by git."
                }
            },
            "GitHub.copilot-chatreportInlineEditArc": {
                "owner": "hediet",
                "comment": "Reports the accepted and retained character count for an inline completion/edit.",
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension id (copilot or copilot-chat), which provided this inline completion."
                },
                "opportunityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique identifier for an opportunity to show an inline completion or NES."
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "arc": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The accepted and restrained character count.",
                    "isMeasurement": true
                },
                "originalcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The original character count before any edits.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreportInlineEditSurvivalRate": {
                "owner": "hediet",
                "comment": "Reports the survival rate for an inline edit.",
                "opportunityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique identifier for an opportunity to show an NES."
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "arc": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The accepted and restrained character count.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatvscode.contentChangeForUnknownDocument": {
                "owner": "hediet",
                "comment": "Telemetry for verifying VSCode content change API consistency"
            },
            "GitHub.copilot-chatvscode.contentChangeInconsistencyDetected": {
                "owner": "hediet",
                "comment": "Telemetry for verifying VSCode content change API consistency",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Scheme of the currently open document."
                }
            },
            "GitHub.copilot-chatcopilot.search.request": {
                "owner": "osortega",
                "comment": "Copilot search request.",
                "chunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of copilot search code chunks.",
                    "isMeasurement": true
                },
                "rankresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of the copilot search ranking."
                },
                "rankresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of the results from copilot search ranking.",
                    "isMeasurement": true
                },
                "combinedresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of combined results from copilot search.",
                    "isMeasurement": true
                },
                "chunksearchduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the chunk search",
                    "isMeasurement": true
                },
                "llmfilteringduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the LLM filtering",
                    "isMeasurement": true
                },
                "llmbestrank": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Best rank (lowest index) among LLM-selected chunks in the original retrieval ranking.",
                    "isMeasurement": true
                },
                "llmworstrank": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Worst rank (highest index) among LLM-selected chunks in the original retrieval ranking.",
                    "isMeasurement": true
                },
                "llmselectedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of chunks selected by LLM from the initial retrieval.",
                    "isMeasurement": true
                },
                "rawllmrankingresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of raw results returned by the LLM.",
                    "isMeasurement": true
                },
                "parseresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates the result of parsing the LLM response."
                },
                "strategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates the strategy used for the search."
                }
            },
            "GitHub.copilot-chatsemanticSearch.ranking": {
                "owner": "rebornix",
                "comment": "Semantic search request ranking.",
                "llmbestrank": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Best rank (lowest index) among LLM-selected chunks in the original retrieval ranking.",
                    "isMeasurement": true
                },
                "llmworstrank": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Worst rank (highest index) among LLM-selected chunks in the original retrieval ranking.",
                    "isMeasurement": true
                },
                "llmselectedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of chunks selected by LLM from the initial retrieval.",
                    "isMeasurement": true
                },
                "rawllmrankingresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of raw results returned by the LLM.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcopilot.search.keywords": {
                "owner": "osortega",
                "comment": "Copilot keywords request.",
                "keywordresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of the copilot keywords request."
                },
                "keywordscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of keywords found by copilot search.",
                    "isMeasurement": true
                },
                "keywordsearchduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the keyword search",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatprovideInlineEdit": {
                "owner": "ulugbekna",
                "comment": "Telemetry for inline edit (NES) provided",
                "opportunityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique identifier for an opportunity to show an NES."
                },
                "headerrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique identifier of the network request which is also included in the fetch request header."
                },
                "providerid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "NES provider identifier (StatelessNextEditProvider)"
                },
                "documentshorteningstrategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Document shortening strategy, eg clipping or summarization"
                },
                "activedocumentlanguageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "LanguageId of the active document"
                },
                "acceptance": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "User acceptance of the edit"
                },
                "disposalreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason for disposal of NES"
                },
                "supersededbyopportunityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "UUID of the opportunity that superseded this edit"
                },
                "endpoint": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Endpoint for the request"
                },
                "nonexteditreasonkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason kind for no next edit"
                },
                "nonexteditreasonmessage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason message for no next edit"
                },
                "fetchresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Fetch result"
                },
                "fetcherror": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Fetch error message"
                },
                "pickednes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request had picked NES"
                },
                "diagnostictype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Type of diagnostics"
                },
                "diagnosticdroppedreasons": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reasons for dropping diagnostics NES suggestions"
                },
                "requestn": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Request number",
                    "isMeasurement": true
                },
                "hadstatelessnexteditprovidercall": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request had a stateless next edit provider call",
                    "isMeasurement": true
                },
                "statelessnexteditproviderduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of stateless next edit provider",
                    "isMeasurement": true
                },
                "nexteditproviderduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of next edit provider",
                    "isMeasurement": true
                },
                "isfromcache": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the edit was provided from cache",
                    "isMeasurement": true
                },
                "subsequenteditorder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Order of the subsequent edit",
                    "isMeasurement": true
                },
                "activedocumentoriginallinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of lines in the active document before shortening",
                    "isMeasurement": true
                },
                "activedocumentshortenedlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of lines in the active document after shortening",
                    "isMeasurement": true
                },
                "waspreviouslyrejected": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the edit was previously rejected",
                    "isMeasurement": true
                },
                "isshown": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the edit was shown",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook",
                    "isMeasurement": true
                },
                "logprobthreshold": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Log probability threshold for the edit",
                    "isMeasurement": true
                },
                "documentscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of documents",
                    "isMeasurement": true
                },
                "editscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of edits",
                    "isMeasurement": true
                },
                "activedocumenteditscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of edits in the active document",
                    "isMeasurement": true
                },
                "promptlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of lines in the prompt",
                    "isMeasurement": true
                },
                "promptcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of characters in the prompt",
                    "isMeasurement": true
                },
                "hadlowlogprobsuggestion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the suggestion had low log probability",
                    "isMeasurement": true
                },
                "neditssuggested": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of edits suggested",
                    "isMeasurement": true
                },
                "hasnextedit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there is a next edit",
                    "isMeasurement": true
                },
                "nexteditlogprob": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Log probability of the next edit",
                    "isMeasurement": true
                },
                "linedistancetomostrecentedit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Line distance to most recent edit",
                    "isMeasurement": true
                },
                "debouncetime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Debounce time",
                    "isMeasurement": true
                },
                "artificialdelay": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Artificial delay (aka backoff) on the response based on previous user acceptance/rejection in milliseconds",
                    "isMeasurement": true
                },
                "fetchstartedafterms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time from inline edit provider invocation to fetch init",
                    "isMeasurement": true
                },
                "ttft": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "fetchtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time from fetch init to end of stream",
                    "isMeasurement": true
                },
                "prompttokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prompt",
                    "isMeasurement": true
                },
                "responsetokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the response",
                    "isMeasurement": true
                },
                "cachedtokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cached tokens in the response",
                    "isMeasurement": true
                },
                "acceptedpredictiontokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prediction that appeared in the completion",
                    "isMeasurement": true
                },
                "rejectedpredictiontokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prediction that appeared in the completion",
                    "isMeasurement": true
                },
                "haddiagnosticsnes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request had diagnostics NES",
                    "isMeasurement": true
                },
                "hadllmnes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request had LLM NES",
                    "isMeasurement": true
                },
                "configisdiagnosticsnesenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether diagnostics NES is enabled",
                    "isMeasurement": true
                },
                "isnaturallanguagedominated": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the context is dominated by natural language",
                    "isMeasurement": true
                },
                "diagnostichasexistingsamefileimport": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the diagnostic has an existing same file import",
                    "isMeasurement": true
                },
                "diagnosticislocalimport": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the diagnostic is a local import",
                    "isMeasurement": true
                },
                "diagnosticalternativeimportscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of alternative imports for the diagnostic",
                    "isMeasurement": true
                },
                "diagnosticdistancetounknowndiagnostic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Distance to the unknown diagnostic",
                    "isMeasurement": true
                },
                "diagnosticdistancetoalternativediagnostic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Distance to the alternative diagnostic",
                    "isMeasurement": true
                },
                "diagnostichasalternativediagnosticforsamerange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there is an alternative diagnostic for the same range",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatintentDetection": {
                "owner": "ulugbekna",
                "comment": "Intent detection telemetry.",
                "chatlocation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which chat (panel or inline) intent detection is used for."
                },
                "preferredintent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which intent was initially provided as preferred."
                },
                "detectedintent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Intent that was detected by Copilot"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language ID of the document for which intent detection happened."
                },
                "isrerunwithoutintentdetection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user disliked the detected intent and tried to rerun without it."
                }
            },
            "GitHub.copilot-chatgit.generateCommitMessageSurvival": {
                "owner": "lszomoru",
                "comment": "Tracks how much of the generated git commit message has survived",
                "attemptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many times the user has retried.",
                    "isMeasurement": true
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the suggested git commit message was used when the code change was committed.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatresponse.cancelled": {
                "owner": "digitarald",
                "comment": "Report canceled service responses for quality.",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Model selection for the response"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source for why the request was made"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the request"
                },
                "totaltokenmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum total token window",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens",
                    "isMeasurement": true
                },
                "tokencountmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum generated tokens",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "timetocancelled": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "isvisionrequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the request was for a vision model",
                    "isMeasurement": true
                },
                "isbyok": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was for a BYOK model",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatresponse.error": {
                "owner": "digitarald",
                "comment": "Report quality issue for when a service response failed.",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Type of issue"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Reason of issue"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Model selection for the response"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source for why the request was made"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the request"
                },
                "totaltokenmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum total token window",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens",
                    "isMeasurement": true
                },
                "tokencountmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum generated tokens",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "isvisionrequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the request was for a vision model",
                    "isMeasurement": true
                },
                "isbyok": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was for a BYOK model",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatresponse.success": {
                "owner": "digitarald",
                "comment": "Report quality details for a successful service response.",
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Reason for why a response finished"
                },
                "filterreason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Reason for why a response was filtered"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source of the initial request"
                },
                "initiatortype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was initiated by a user or an agent"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Model selection for the response"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "totaltokenmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum total token window",
                    "isMeasurement": true
                },
                "clientprompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens, locally counted",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens, server side counted",
                    "isMeasurement": true
                },
                "promptcachetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens hitting cache as reported by server",
                    "isMeasurement": true
                },
                "tokencountmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum generated tokens",
                    "isMeasurement": true
                },
                "tokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of generated tokens",
                    "isMeasurement": true
                },
                "acceptedpredictiontokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prediction that appeared in the completion",
                    "isMeasurement": true
                },
                "rejectedpredictiontokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prediction that appeared in the completion",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to complete the request",
                    "isMeasurement": true
                },
                "isvisionrequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the request was for a vision model",
                    "isMeasurement": true
                },
                "isbyok": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was for a BYOK model",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatconversation.repetition.detected": {
                "owner": "lramos15",
                "comment": "Calculates the number of repetitions in a response. Useful for loop detection",
                "finishreason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Reason for why a response finished. Helps identify cancellation vs length limits"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id for this message request."
                },
                "lengthofline": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Length of the repeating line, in characters.",
                    "isMeasurement": true
                },
                "numberofrepetitions": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of times the line repeats.",
                    "isMeasurement": true
                },
                "totallines": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of total lines in the response.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgetNodeToDocument": {
                "owner": "ulugbekna",
                "comment": "Info on success and properties of detecting AST node to document",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language ID of the document"
                },
                "typeofnodetodocument": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Type of the AST node offered to be documented (type defined by tree-sitter grammar for that language)"
                },
                "nodetodocumentstart": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Start offset of the AST node offered to be documented (type defined by tree-sitter grammar for that language)"
                },
                "nodetodocumentend": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "End offset of the AST node offered to be documented (type defined by tree-sitter grammar for that language)"
                },
                "selectionoffsetrangestart": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The start offset range of the selection in the document"
                },
                "selectionoffsetrangeend": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The end offset range of the selection in the document"
                },
                "wholerangeoffsetrangestart": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The start offset range of the inline-chat wholeRange"
                },
                "wholerangeoffsetrangeend": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The end offset range of the inline-chat wholeRange"
                },
                "timespentms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time (in milliseconds) spent on finding the AST node to document (approximate as it's an async call)",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgit.generateCommitMessage": {
                "owner": "lszomoru",
                "comment": "Metadata about the git commit message generation",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result type of the response."
                },
                "attemptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many times the user has retried.",
                    "isMeasurement": true
                },
                "difffilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of files in the commit.",
                    "isMeasurement": true
                },
                "difflength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The length of the diffs in the commit.",
                    "isMeasurement": true
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the request.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgit.generateCommitMessageIncorrectResponseFormat": {
                "owner": "lszomoru",
                "comment": "Metadata about the git commit message generation when the response is not in the expected format",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "responseformat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of the response format."
                }
            },
            "GitHub.copilot-chatapplyPatch.inResponse": {
                "owner": "digitarald",
                "comment": "Metadata about an inline response from the model",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                }
            },
            "GitHub.copilot-chattoolCallDetails": {
                "owner": "roblourens",
                "comment": "Records information about tool calls during a request.",
                "intentid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the invoked intent."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the current chat conversation."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request succeeded or failed."
                },
                "numrequests": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The total number of requests made",
                    "isMeasurement": true
                },
                "turnindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The conversation turn index",
                    "isMeasurement": true
                },
                "toolcounts": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of times each tool was used"
                },
                "sessionduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time since the session started",
                    "isMeasurement": true
                },
                "turnduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time since the turn started",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many tokens were in the last generated prompt.",
                    "isMeasurement": true
                },
                "messagecharlen": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were in the user message.",
                    "isMeasurement": true
                },
                "availabletoolcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How number of tools that were available.",
                    "isMeasurement": true
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the final response was successful or how it failed."
                },
                "invalidtoolcallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tool call rounds that had an invalid tool call."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chatpanel.request": {
                "owner": "digitarald",
                "comment": "Metadata about one message turn in a chat conversation.",
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "contexttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The context parts which were used in providing the response."
                },
                "prompttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The prompt types and their length which were used in providing the response."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the current chat conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "responseid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message response."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the response was successful or how it failed."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language of the active editor."
                },
                "codeblocks": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Code block languages in the response."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "turn": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many turns have been made in the conversation.",
                    "isMeasurement": true
                },
                "textblocks": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "For text-only responses (no code), how many paragraphs were in the response.",
                    "isMeasurement": true
                },
                "links": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Symbol and file links in the response.",
                    "isMeasurement": true
                },
                "maybeofftopic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the response sounds like it got rejected due to the request being off-topic.",
                    "isMeasurement": true
                },
                "messagetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were in the user message.",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were in the generated prompt.",
                    "isMeasurement": true
                },
                "userpromptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many user messages were in the generated prompt.",
                    "isMeasurement": true
                },
                "responsetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were in the response.",
                    "isMeasurement": true
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the final request.",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to get the first token.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                },
                "codegeninstructionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions are in the request.",
                    "isMeasurement": true
                },
                "codegeninstructionslength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whats the length of the code generation instructions that were added to request.",
                    "isMeasurement": true
                },
                "codegeninstructionsfilteredcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions were filtered.",
                    "isMeasurement": true
                },
                "codegeninstructionfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instruction files were read.",
                    "isMeasurement": true
                },
                "codegeninstructionsettingscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions originated from settings.",
                    "isMeasurement": true
                },
                "toolcounts": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of times each tool was used"
                },
                "numtoolcalls": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The total number of tool calls",
                    "isMeasurement": true
                },
                "availabletoolcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How number of tools that were available.",
                    "isMeasurement": true
                },
                "temporalctxfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many temporal document-parts where included",
                    "isMeasurement": true
                },
                "temporalctxtotalcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many characters all temporal document-parts where included",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatinline.request": {
                "owner": "digitarald",
                "comment": "Metadata about an inline response from the model",
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "contexttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The context parts which were used in providing the response."
                },
                "prompttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The prompt types and their length which were used in providing the response."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language of the current document."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result type of the response."
                },
                "replytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How response is shown in the interface."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "diagnosticsprovider": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The diagnostics provider."
                },
                "diagnosticcodes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The diagnostics codes in the file."
                },
                "selectiondiagnosticcodes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The selected diagnostics codes."
                },
                "firstturn": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the first turn in the conversation.",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is a notebook document.",
                    "isMeasurement": true
                },
                "messagetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many tokens are in the rest of the query, without the command.",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many tokens are in the overall prompt.",
                    "isMeasurement": true
                },
                "responsetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many tokens were in the response.",
                    "isMeasurement": true
                },
                "implicitcommand": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the command was implictly detected or provided by the user.",
                    "isMeasurement": true
                },
                "attemptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many times the user has retried.",
                    "isMeasurement": true
                },
                "selectionlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the current selection.",
                    "isMeasurement": true
                },
                "wholerangelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the expanded whole range.",
                    "isMeasurement": true
                },
                "editcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many edits are suggested.",
                    "isMeasurement": true
                },
                "editlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in all suggested edits.",
                    "isMeasurement": true
                },
                "markdowncharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were emitted as markdown to vscode in the response stream.",
                    "isMeasurement": true
                },
                "problemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current document.",
                    "isMeasurement": true
                },
                "selectionproblemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current selected code.",
                    "isMeasurement": true
                },
                "diagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current .",
                    "isMeasurement": true
                },
                "selectiondiagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the code at the selection.",
                    "isMeasurement": true
                },
                "outcomeannotations": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Annotations about the outcome of the request."
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the final request.",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to get the first token.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                },
                "temporalctxfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many temporal document-parts where included",
                    "isMeasurement": true
                },
                "temporalctxtotalcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many characters all temporal document-parts where included",
                    "isMeasurement": true
                },
                "codegeninstructionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions are in the request.",
                    "isMeasurement": true
                },
                "codegeninstructionslength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The length of the code generation instructions that were added to request.",
                    "isMeasurement": true
                },
                "codegeninstructionsfilteredcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions were filtered.",
                    "isMeasurement": true
                },
                "codegeninstructionfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instruction files were read.",
                    "isMeasurement": true
                },
                "codegeninstructionsettingscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions originated from settings.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatdevcontainer.generateConfig": {
                "owner": "chrmarti",
                "comment": "Metadata about the Dev Container Config generation",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result type of the response."
                },
                "templateid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The chosen template id."
                },
                "featureids": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The chosen feature ids."
                },
                "originalfilenamecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of filenames.",
                    "isMeasurement": true
                },
                "originalfilenamelength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The length of the filenames.",
                    "isMeasurement": true
                },
                "processedfilenamecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of filenames after processing.",
                    "isMeasurement": true
                },
                "processedfilenamelength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The length of the filenames after processing.",
                    "isMeasurement": true
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the request.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatfeedback.generateDiagnostics": {
                "owner": "chrmarti",
                "comment": "Metadata about the code feedback generation",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which backend generated the comment."
                },
                "messageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result type of the response."
                },
                "documenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of document (e.g., text or notebook)."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "inputtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What type of input (e.g., selection or change)."
                },
                "commenttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of comment (e.g., correctness or performance)."
                },
                "promptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of prompts run.",
                    "isMeasurement": true
                },
                "numberofdiagnostics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of diagnostics.",
                    "isMeasurement": true
                },
                "inputdocumentcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many documents were part of the input.",
                    "isMeasurement": true
                },
                "inputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many (selected or changed) lines were part of the input.",
                    "isMeasurement": true
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the request.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreview.comment.vote": {
                "owner": "chrmarti",
                "comment": "Metadata about votes on review comments",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which backend generated the comment."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "documenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of document (e.g., text or notebook)."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "inputtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What type of input (e.g., selection or change)."
                },
                "commenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of comment (e.g., correctness or performance)."
                },
                "useraction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What action the user triggered (e.g., helpful, unhelpful, apply or discard)."
                },
                "commentindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Original index of the comment in the generated comments.",
                    "isMeasurement": true
                },
                "actioncount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of previously logged actions on the comment.",
                    "isMeasurement": true
                },
                "inputdocumentcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many documents were part of the input.",
                    "isMeasurement": true
                },
                "inputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many (selected or changed) lines were part of the input.",
                    "isMeasurement": true
                },
                "promptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of prompts run.",
                    "isMeasurement": true
                },
                "totalcomments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of comments.",
                    "isMeasurement": true
                },
                "comments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many comments are affected by the action.",
                    "isMeasurement": true
                },
                "commentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters long the review comment is.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreview.comment.action": {
                "owner": "chrmarti",
                "comment": "Metadata about actions on review comments",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which backend generated the comment."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "documenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of document (e.g., text or notebook)."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "inputtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What type of input (e.g., selection or change)."
                },
                "commenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of comment (e.g., correctness or performance)."
                },
                "useraction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What action the user triggered (e.g., helpful, unhelpful, apply or discard)."
                },
                "commentindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Original index of the comment in the generated comments.",
                    "isMeasurement": true
                },
                "actioncount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of previously logged actions on the comment.",
                    "isMeasurement": true
                },
                "inputdocumentcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many documents were part of the input.",
                    "isMeasurement": true
                },
                "inputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many (selected or changed) lines were part of the input.",
                    "isMeasurement": true
                },
                "promptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of prompts run.",
                    "isMeasurement": true
                },
                "totalcomments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of comments.",
                    "isMeasurement": true
                },
                "comments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many comments are affected by the action.",
                    "isMeasurement": true
                },
                "commentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters long the review comment is.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreview.discardCommentRangeSurvival": {
                "owner": "chrmarti",
                "comment": "Tracks how much percent of the commented range surived after 5 minutes of discarding",
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which backend generated the comment."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "documenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of document (e.g., text or notebook)."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "inputtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What type of input (e.g., selection or change)."
                },
                "commenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of comment (e.g., correctness or performance)."
                },
                "useraction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What action the user triggered (e.g., helpful, unhelpful, apply or discard)."
                },
                "commentindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Original index of the comment in the generated comments.",
                    "isMeasurement": true
                },
                "actioncount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of previously logged actions on the comment.",
                    "isMeasurement": true
                },
                "inputdocumentcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many documents were part of the input.",
                    "isMeasurement": true
                },
                "inputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many (selected or changed) lines were part of the input.",
                    "isMeasurement": true
                },
                "promptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of prompts run.",
                    "isMeasurement": true
                },
                "totalcomments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of comments.",
                    "isMeasurement": true
                },
                "comments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many comments are affected by the action.",
                    "isMeasurement": true
                },
                "commentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters long the review comment is.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatprovideRenameSuggestions": {
                "owner": "ulugbekna",
                "comment": "Telemetry for rename suggestions provided",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language ID of the document."
                },
                "cancellationreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Specify when exactly during the provider call the cancellation happened. Empty string if the cancellation didn't happen."
                },
                "fetchresulttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of a fetch to endpoint"
                },
                "replyformat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Copilot reply format: 'jsonStringArray' | 'multiJsonStringArray' | 'list' | 'unknown'"
                },
                "triggerkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Rename suggestion trigger kind - 'automatic' | 'manual'"
                },
                "promptconstructiontime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time it took to construct the prompt",
                    "isMeasurement": true
                },
                "timeelapsedbeforedelay": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time elapsed before delay starts",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Token count of the prompt",
                    "isMeasurement": true
                },
                "expecteddelaybeforefetch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Expected delay before fetch dictated by the experiment 'renameSuggestionsDelayBeforeFetch'",
                    "isMeasurement": true
                },
                "actualdelaybeforefetch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Actual delay before fetch computed as 'expectedDelay - promptComputationTime'",
                    "isMeasurement": true
                },
                "successresponsecharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Character count in model response (for response.type == 'success')",
                    "isMeasurement": true
                },
                "responseunusedcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Character count in model response that was unused, e.g., rename explanations, response format overhead",
                    "isMeasurement": true
                },
                "fetchtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time it took to fetch from endpoint",
                    "isMeasurement": true
                },
                "symbolnamescount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of suggested names",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.speculative": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                },
                "originalrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The original request id for which this is a speculative request"
                },
                "numberofitems": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of items in the speculative request",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.ok": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                },
                "filesize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The size of the file",
                    "isMeasurement": true
                },
                "completioncontext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Kind of completion context"
                },
                "nodepath": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The syntax kind path to the AST node the position resolved to."
                },
                "cancelled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request got cancelled on the client side"
                },
                "timedout": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request timed out on the server side"
                },
                "servertime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time taken on the server side",
                    "isMeasurement": true
                },
                "contextcomputetime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time taken on the server side to compute the context",
                    "isMeasurement": true
                },
                "timetaken": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time taken to provide the completion",
                    "isMeasurement": true
                },
                "tokenbudgetexhausted": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the token budget was exhausted"
                },
                "blueprints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of blueprints",
                    "isMeasurement": true
                },
                "signatures": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of signatures",
                    "isMeasurement": true
                },
                "superclasses": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of super classes",
                    "isMeasurement": true
                },
                "generalscopes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of general scopes",
                    "isMeasurement": true
                },
                "completions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of traditional completion scopes",
                    "isMeasurement": true
                },
                "neighborfiles": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of neighbor files",
                    "isMeasurement": true
                },
                "module": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of modules",
                    "isMeasurement": true
                },
                "moduleresolution": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of moduleResolutions",
                    "isMeasurement": true
                },
                "lib": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of libs",
                    "isMeasurement": true
                },
                "target": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of targets",
                    "isMeasurement": true
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of versions",
                    "isMeasurement": true
                },
                "totalsize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total size of all context items",
                    "isMeasurement": true
                },
                "items": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Detailed information about each context item delivered."
                },
                "cachehits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cache hits",
                    "isMeasurement": true
                },
                "isspeculative": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was speculative"
                },
                "beforecachestate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The cache state before the request was sent"
                },
                "aftercachestate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The cache state after the request was sent"
                },
                "cacheditemsforspeculativerequest": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was cached for a speculative request",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.error": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context errors",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                },
                "code": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The failure code",
                    "isMeasurement": true
                },
                "message": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure message"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.on-timeout": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context on timeout",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "items": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Detailed information about each context item delivered."
                },
                "blueprints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of blueprints",
                    "isMeasurement": true
                },
                "signatures": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of signatures",
                    "isMeasurement": true
                },
                "superclasses": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of super classes",
                    "isMeasurement": true
                },
                "generalscopes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of general scopes",
                    "isMeasurement": true
                },
                "completions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of traditional completion scopes",
                    "isMeasurement": true
                },
                "neighborfiles": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of neighbor files",
                    "isMeasurement": true
                },
                "module": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of modules",
                    "isMeasurement": true
                },
                "moduleresolution": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of moduleResolutions",
                    "isMeasurement": true
                },
                "lib": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of libs",
                    "isMeasurement": true
                },
                "target": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of targets",
                    "isMeasurement": true
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of versions",
                    "isMeasurement": true
                },
                "totalsize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total size of all context items",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.failed": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context in failure case",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                },
                "code:": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The failure code"
                },
                "message": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure message"
                },
                "stack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure stack"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.cancelled": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context in cancellation case",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.activation.ok": {
                "owner": "dirkb",
                "comment": "Telemetry for TypeScript server plugin",
                "session": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the TypeScript server had a session"
                },
                "supported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the TypeScript server version is supported"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The version of the TypeScript server"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.activation.failed": {
                "owner": "dirkb",
                "comment": "Telemetry for TypeScript server plugin",
                "location": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The location of the failure"
                },
                "part": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The part that errored"
                },
                "message": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure message"
                },
                "stack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure stack"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The version"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.activation.unknown-ping-response": {
                "owner": "dirkb",
                "comment": "Telemetry for TypeScript server plugin",
                "location": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The location of the failure"
                },
                "part": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The part that errored"
                },
                "response": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The response literal"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.integration.failed": {
                "owner": "dirkb",
                "comment": "Telemetry for Copilot inline chat integration.",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "document": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The document for which the integration failed"
                },
                "versionmismatch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The version mismatch"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.inline-completion-provider.registered": {
                "owner": "dirkb",
                "comment": "Telemetry for Copilot inline completions",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.inline-completion-provider.unregistered": {
                "owner": "dirkb",
                "comment": "Telemetry for Copilot inline completions",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                }
            },
            "GitHub.copilot-chaturiHandler": {
                "owner": "lramos15",
                "comment": "Reports when the uri handler is called in the copilot extension",
                "referrer": {
                    "classification": "SystemMetaData",
                    "purpose": "BusinessInsight",
                    "comment": "The referrer query param for the uri"
                }
            },
            "GitHub.copilot-chatonboardDebug.commandExecuted": {
                "owner": "connor4312",
                "comment": "Reports usages of the copilot-debug command",
                "binary": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Binary executed with the command"
                }
            },
            "GitHub.copilot-chatonboardDebug.configGenerated": {
                "owner": "connor4312",
                "comment": "Reports usages of the copilot-debug command",
                "binary": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Binary executed with the command"
                },
                "debugtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Debug type generated"
                },
                "configgenerated": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether a config was generated",
                    "isMeasurement": true
                },
                "configtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "GitHub.copilot-chatpanel.action.filelink": {
                "owner": "digitarald",
                "comment": "Clicks on file links in the panel response",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the chat request."
                }
            },
            "GitHub.copilot-chatpanel.action.symbollink": {
                "owner": "digitarald",
                "comment": "Clicks on symbol links in the panel response",
                "hadmatch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the symbol was found.",
                    "isMeasurement": true
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the chat request."
                }
            },
            "GitHub.copilot-chatpanel.action.openSymbolFromReferencesLink": {
                "owner": "mjbvz",
                "comment": "Clicks on symbol links in the panel response",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the chat request."
                },
                "resolveddestinationtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How the link was actually resolved."
                }
            },
            "GitHub.copilot-chatcodemapper.completeCodeBlock": {
                "owner": "aeschli",
                "comment": "Sent when a codemapper request is received for a complete code block that contains no ...existing code... comments."
            },
            "GitHub.copilot-chatcodemapper.request": {
                "owner": "aeschli",
                "comment": "Metadata about the code mapper request",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "requestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from where the request was made"
                },
                "mapper": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The mapper used: One of 'fast', 'fast-lora', 'full' and 'patch'"
                },
                "outcomeannotations": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Annotations about the outcome of the request."
                }
            },
            "GitHub.copilot-chatspeculation.response.success": {
                "owner": "alexdima",
                "comment": "Report quality details for a successful speculative response.",
                "chatrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "chatrequestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source of the current turn request"
                },
                "isnoopedit": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the response text is identical to the speculation."
                },
                "speculationrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "containselidedcodecomments": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the response text contains elided code comments."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The model used for this speculation request"
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens",
                    "isMeasurement": true
                },
                "speculationtokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of speculation tokens",
                    "isMeasurement": true
                },
                "responsetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of response tokens",
                    "isMeasurement": true
                },
                "addedlines": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of lines added",
                    "isMeasurement": true
                },
                "removedlines": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of lines removed",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether this is a notebook",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to complete the request",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatspeculation.response.error": {
                "owner": "alexdima",
                "comment": "Report quality issue for when a speculative response failed.",
                "errormessage": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the error"
                },
                "chatrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "speculationrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the speculation request"
                },
                "chatrequestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source of the current turn request"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The model used for this speculation request"
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens",
                    "isMeasurement": true
                },
                "speculationtokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of speculation tokens",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether this is a notebook",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatspeculation.response.loop": {
                "owner": "joyceerhl",
                "comment": "Report when the model appears to have gone into a loop.",
                "hasloop": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the model appears to have gone into a loop."
                },
                "speculationrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The language id of the document"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The model used for this speculation request"
                },
                "documentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Length of original file",
                    "isMeasurement": true
                },
                "rewrittenlength": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Length of original file",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceContext.perf.prepareWorkspaceChunks": {
                "owner": "mjbvz",
                "comment": "Understanding the performance of including workspace context",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "resultchunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of chunks returned",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceContext.perf.prepare": {
                "owner": "mjbvz",
                "comment": "Understanding how effective ADA re-ranking is",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceResolver.error": {
                "owner": "mjbvz",
                "comment": "Tracks errors for resolving workspace information",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Error type"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Detailed error reason"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                }
            },
            "GitHub.copilot-chatworkspaceResolver.success": {
                "owner": "mjbvz",
                "comment": "Tracks errors for resolving workspace information",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Success type"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "totalkeywordcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of keywords returned.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattoolInvoke": {
                "owner": "donjayamanne",
                "comment": "Details about invocation of tools",
                "validationoutcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The outcome of the tool Invokcation. invalidInput, disabledByUser, success, error, cancelled"
                },
                "toolname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the tool being invoked."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                }
            },
            "GitHub.copilot-chatagent.tool.responseLength": {
                "owner": "connor4312",
                "comment": "Counts the number of tokens generated by tools",
                "toolname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the tool being invoked."
                },
                "tokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of tokens used.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chateditNotebook.validation": {
                "owner": "donjayamanne",
                "comment": "Validation failure for a Edit Notebook tool invocation",
                "validationresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result of the tool input validation. valid, invalid and unknown"
                },
                "invokeresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result of the tool Invocation. invalidInput, disabledByUser, success, error, cancelled"
                },
                "edittype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of edit that was attempted. insert, delete, edit or unknown"
                },
                "unknownprops": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "List of unknown properties in the input"
                },
                "missingprops": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "List of missing properties in the input"
                },
                "newcodetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of code, whether its string, string[], object, object[] or unknown"
                },
                "cellid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the cell, TOP, BOTTOM, cellid, empty or unknown"
                },
                "explanation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The explanation for the edit. provided, empty and unknown"
                },
                "inputparsed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the input was parsed as JSON",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                }
            },
            "GitHub.copilot-chatcookbook.accessed": {
                "owner": "luabud",
                "comment": "Reports when a cookbook entry is accessed for a diagnostic.",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "diagnosticcode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The diagnostic code accessed in the cookbook."
                },
                "provider": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The tool which is the diagnostic provider."
                }
            },
            "GitHub.copilot-chatprompt.invalidreference": {
                "owner": "jrieken",
                "comment": "Tracks bad prompt references",
                "stack": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Error stack"
                }
            },
            "GitHub.copilot-chatsummarizedConversationHistory": {
                "owner": "roblourens",
                "comment": "Tracks when summarization happens and what the outcome was",
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The success state or failure reason of the summarization."
                },
                "detailedoutcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A more detailed error message."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model ID used for the summarization."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request ID from the summarization call."
                },
                "numrounds": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tool call rounds before this summarization was triggered.",
                    "isMeasurement": true
                },
                "numroundssincelastsummarization": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tool call rounds since the last summarization.",
                    "isMeasurement": true
                },
                "lastusedtool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the last tool used before summarization."
                },
                "isduringtoolcalling": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this summarization was triggered during a tool calling loop.",
                    "isMeasurement": true
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the current chat conversation."
                }
            },
            "GitHub.copilot-chatcodeBlock.action.goTo": {
                "owner": "mjbvz",
                "comment": "Counts interactions with code blocks in chat responses",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The go to command being run."
                },
                "codeblockid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique hash of the code block."
                }
            },
            "GitHub.copilot-chatprojectLabels": {
                "owner": "digitarald",
                "comment": "Reports quality of labels detected in a workspace",
                "labels": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique workspace label count."
                },
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique workspace labels in context.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkbenchActionExecuted": {},
            "GitHub.copilot-chatcommandCenter.chatInstall": {
                "owner": "bpasero",
                "comment": "Provides insight into chat installation.",
                "installresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the extension was installed successfully, cancelled or failed to install."
                },
                "installduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The duration it took to install the extension.",
                    "isMeasurement": true
                },
                "signuperrorcode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The error code in case of an error signing up."
                }
            },
            "GitHub.copilot-chatnotebook/editorOpened": {
                "owner": "rebornix",
                "comment": "Identify the notebook editor view type",
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File system provider scheme for the resource"
                },
                "ext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File extension for the resource"
                },
                "viewtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "View type of the notebook editor"
                },
                "isrepl": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the notebook editor is within a REPL editor",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatinteractiveEditor/session": {
                "owner": "jrieken",
                "comment": "Data about an interaction editor session",
                "extension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension providing the data"
                },
                "rounds": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of request that were made"
                },
                "undos": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Requests that have been undone"
                },
                "edits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Did edits happen while the session was active"
                },
                "terminaledits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Did edits terminal the session",
                    "isMeasurement": true
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "When the session started"
                },
                "endtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "When the session ended"
                }
            }
        },
        "commonProperties": {
            "common.tid": {
                "classification": "EndUserPseudonymizedInformation",
                "purpose": "BusinessInsight"
            },
            "common.sku": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight"
            },
            "common.internal": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "isMeasurement": true
            }
        }
    },
    "github.copilot-chat-0.29.2025062705": {
        "events": {
            "GitHub.copilot-chatprovideRenameSuggestions": {
                "owner": "ulugbekna",
                "comment": "Telemetry for rename suggestions provided",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language ID of the document."
                },
                "cancellationreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Specify when exactly during the provider call the cancellation happened. Empty string if the cancellation didn't happen."
                },
                "fetchresulttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of a fetch to endpoint"
                },
                "replyformat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Copilot reply format: 'jsonStringArray' | 'multiJsonStringArray' | 'list' | 'unknown'"
                },
                "triggerkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Rename suggestion trigger kind - 'automatic' | 'manual'"
                },
                "promptconstructiontime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time it took to construct the prompt",
                    "isMeasurement": true
                },
                "timeelapsedbeforedelay": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time elapsed before delay starts",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Token count of the prompt",
                    "isMeasurement": true
                },
                "expecteddelaybeforefetch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Expected delay before fetch dictated by the experiment 'renameSuggestionsDelayBeforeFetch'",
                    "isMeasurement": true
                },
                "actualdelaybeforefetch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Actual delay before fetch computed as 'expectedDelay - promptComputationTime'",
                    "isMeasurement": true
                },
                "successresponsecharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Character count in model response (for response.type == 'success')",
                    "isMeasurement": true
                },
                "responseunusedcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Character count in model response that was unused, e.g., rename explanations, response format overhead",
                    "isMeasurement": true
                },
                "fetchtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time it took to fetch from endpoint",
                    "isMeasurement": true
                },
                "symbolnamescount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of suggested names",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatembedding.error": {
                "owner": "digitarald",
                "comment": "Tracks errors for embedding requests",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Error type"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Detailed error reason"
                }
            },
            "GitHub.copilot-chatembedding.success": {
                "owner": "digitarald",
                "comment": "Performance data for embedding requests",
                "inputtokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The number of tokens in the input.",
                    "isMeasurement": true
                },
                "batchsize": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The number of inputs sent over.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatonboardDebug.configGenerated": {
                "owner": "connor4312",
                "comment": "Reports a generated config for the copilot-debug command",
                "configgenerated": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether a config was generated",
                    "isMeasurement": true
                },
                "configtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "binary": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Binary executed with the command"
                },
                "debugtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Debug type generated"
                }
            },
            "GitHub.copilot-chatcookbook.accessed": {
                "owner": "luabud",
                "comment": "Reports when a cookbook entry is accessed for a diagnostic.",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "diagnosticcode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The diagnostic code accessed in the cookbook."
                },
                "provider": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The tool which is the diagnostic provider."
                }
            },
            "GitHub.copilot-chatspeculation.response.success": {
                "owner": "alexdima",
                "comment": "Report quality details for a successful speculative response.",
                "chatrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "chatrequestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source of the current turn request"
                },
                "isnoopedit": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the response text is identical to the speculation."
                },
                "speculationrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "containselidedcodecomments": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the response text contains elided code comments."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The model used for this speculation request"
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens",
                    "isMeasurement": true
                },
                "speculationtokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of speculation tokens",
                    "isMeasurement": true
                },
                "responsetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of response tokens",
                    "isMeasurement": true
                },
                "addedlines": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of lines added",
                    "isMeasurement": true
                },
                "removedlines": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of lines removed",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether this is a notebook",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to complete the request",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatspeculation.response.error": {
                "owner": "alexdima",
                "comment": "Report quality issue for when a speculative response failed.",
                "errormessage": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the error"
                },
                "chatrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "speculationrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the speculation request"
                },
                "chatrequestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source of the current turn request"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The model used for this speculation request"
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens",
                    "isMeasurement": true
                },
                "speculationtokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of speculation tokens",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether this is a notebook",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatspeculation.response.loop": {
                "owner": "joyceerhl",
                "comment": "Report when the model appears to have gone into a loop.",
                "hasloop": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the model appears to have gone into a loop."
                },
                "speculationrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The language id of the document"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The model used for this speculation request"
                },
                "documentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Length of original file",
                    "isMeasurement": true
                },
                "rewrittenlength": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Length of original file",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodemapper.completeCodeBlock": {
                "owner": "aeschli",
                "comment": "Sent when a codemapper request is received for a complete code block that contains no ...existing code... comments."
            },
            "GitHub.copilot-chatcodemapper.request": {
                "owner": "aeschli",
                "comment": "Metadata about the code mapper request",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "requestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from where the request was made"
                },
                "mapper": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The mapper used: One of 'fast', 'fast-lora', 'full' and 'patch'"
                },
                "outcomeannotations": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Annotations about the outcome of the request."
                }
            },
            "GitHub.copilot-chatcodeMapper.trackEditSurvival": {
                "owner": "aeschli",
                "comment": "Tracks how much percent of the AI edits survived after 5 minutes of accepting",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "speculationrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the speculation request."
                },
                "requestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from where the request was made"
                },
                "chatrequestmodel": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the base chat request to generate the edit object."
                },
                "mapper": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The code mapper used: One of 'fast', 'fast-lora', 'full' and 'patch'"
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatonboardDebug.commandExecuted": {
                "owner": "connor4312",
                "comment": "Reports usages of the copilot-debug command",
                "binary": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Binary executed with the command"
                }
            },
            "GitHub.copilot-chattoolInvoke": {
                "owner": "donjayamanne",
                "comment": "Details about invocation of tools",
                "validationoutcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The outcome of the tool Invokcation. invalidInput, disabledByUser, success, error, cancelled"
                },
                "toolname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the tool being invoked."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                }
            },
            "GitHub.copilot-chatagent.tool.responseLength": {
                "owner": "connor4312",
                "comment": "Counts the number of tokens generated by tools",
                "toolname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the tool being invoked."
                },
                "tokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of tokens used.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chateditNotebook.validation": {
                "owner": "donjayamanne",
                "comment": "Validation failure for a Edit Notebook tool invocation",
                "validationresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result of the tool input validation. valid, invalid and unknown"
                },
                "invokeresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result of the tool Invocation. invalidInput, disabledByUser, success, error, cancelled"
                },
                "edittype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of edit that was attempted. insert, delete, edit or unknown"
                },
                "unknownprops": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "List of unknown properties in the input"
                },
                "missingprops": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "List of missing properties in the input"
                },
                "newcodetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of code, whether its string, string[], object, object[] or unknown"
                },
                "cellid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the cell, TOP, BOTTOM, cellid, empty or unknown"
                },
                "explanation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The explanation for the edit. provided, empty and unknown"
                },
                "inputparsed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the input was parsed as JSON",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                }
            },
            "GitHub.copilot-chatprompt.invalidreference": {
                "owner": "jrieken",
                "comment": "Tracks bad prompt references",
                "stack": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Error stack"
                }
            },
            "GitHub.copilot-chatsummarizedConversationHistory": {
                "owner": "roblourens",
                "comment": "Tracks when summarization happens and what the outcome was",
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The success state or failure reason of the summarization."
                },
                "detailedoutcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A more detailed error message."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model ID used for the summarization."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request ID from the summarization call."
                },
                "numrounds": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tool call rounds before this summarization was triggered.",
                    "isMeasurement": true
                },
                "numroundssincelastsummarization": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tool call rounds since the last summarization.",
                    "isMeasurement": true
                },
                "lastusedtool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the last tool used before summarization."
                },
                "isduringtoolcalling": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this summarization was triggered during a tool calling loop.",
                    "isMeasurement": true
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the current chat conversation."
                }
            },
            "GitHub.copilot-chatworkspaceContext.perf.prepareWorkspaceChunks": {
                "owner": "mjbvz",
                "comment": "Understanding the performance of including workspace context",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "resultchunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of chunks returned",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceContext.perf.prepare": {
                "owner": "mjbvz",
                "comment": "Understanding how effective ADA re-ranking is",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceResolver.error": {
                "owner": "mjbvz",
                "comment": "Tracks errors for resolving workspace information",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Error type"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Detailed error reason"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                }
            },
            "GitHub.copilot-chatworkspaceResolver.success": {
                "owner": "mjbvz",
                "comment": "Tracks errors for resolving workspace information",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Success type"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "totalkeywordcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of keywords returned.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattoken": {
                "owner": "digitarald",
                "comment": "Copilot token received from the service.",
                "chatenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the token enabled chat.",
                    "isMeasurement": true
                },
                "snippyenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the block setting for public suggestions is enabled.",
                    "isMeasurement": true
                },
                "telemetryenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the subscription has telemetry enabled.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatquery-expfeature": {
                "abexp.queriedfeature": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "GitHub.copilot-chatcall-tas-error": {
                "errortype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "GitHub.copilot-chaturiHandler": {
                "owner": "lramos15",
                "comment": "Reports when the uri handler is called in the copilot extension",
                "referrer": {
                    "classification": "SystemMetaData",
                    "purpose": "BusinessInsight",
                    "comment": "The referrer query param for the uri"
                }
            },
            "GitHub.copilot-chatpanel.action.copy": {
                "owner": "digitarald",
                "comment": "Counts copied code blocks from a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "codeblockindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Index of the code block in the response.",
                    "isMeasurement": true
                },
                "copytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the copy was done via the context menu or the toolbar.",
                    "isMeasurement": true
                },
                "charactercount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of characters copied.",
                    "isMeasurement": true
                },
                "linecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of lines copied.",
                    "isMeasurement": true
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                }
            },
            "GitHub.copilot-chatpanel.action.insert": {
                "owner": "digitarald",
                "comment": "Counts inserts on a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "codeblockindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Index of the code block in the response.",
                    "isMeasurement": true
                },
                "charactercount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of characters copied.",
                    "isMeasurement": true
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                },
                "newfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the insert was done in a new file.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatpanel.action.runinterminal": {
                "owner": "digitarald",
                "comment": "Counts generic actions on a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "blocklanguage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the code block in the response."
                },
                "codeblockindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Index of the code block in the response.",
                    "isMeasurement": true
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                }
            },
            "GitHub.copilot-chatpanel.action.followup": {
                "owner": "digitarald",
                "comment": "Counts generic actions on a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the message request that is being followed-up."
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                }
            },
            "GitHub.copilot-chatpanel.edit.feedback": {
                "owner": "joyceerhl",
                "comment": "Counts accept/reject actions for a proposed edit from panel chat",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the message request that is being followed-up."
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The user decision taken for the edited file"
                },
                "hasremainingedits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there are additional unactioned edits in the file."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook.",
                    "isMeasurement": true
                },
                "isnotebookcell": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook cell.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatpanel.action.vote": {
                "owner": "digitarald",
                "comment": "Counts votes on a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "direction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the vote was positive or negative.",
                    "isMeasurement": true
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Preset value for why the user found the response unhelpful."
                }
            },
            "GitHub.copilot-chatinline.action.vote": {
                "owner": "digitarald",
                "comment": "Metadata about votes on inline code conversations",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "replytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How response is shown in the interface."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the inline assistant conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Preset value for why the user found the response unhelpful."
                },
                "vote": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user found the response helpful.",
                    "isMeasurement": true
                },
                "selectionlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the current selection.",
                    "isMeasurement": true
                },
                "wholerangelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the expanded whole range.",
                    "isMeasurement": true
                },
                "editcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many edits are suggested.",
                    "isMeasurement": true
                },
                "editlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in all suggested edits.",
                    "isMeasurement": true
                },
                "problemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current code.",
                    "isMeasurement": true
                },
                "selectionproblemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current selected code.",
                    "isMeasurement": true
                },
                "diagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current code.",
                    "isMeasurement": true
                },
                "selectiondiagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current selected code.",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatinline.done": {
                "owner": "digitarald",
                "comment": "Metadata about an inline code suggestion being accepted or undone",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "replytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How response is shown in the interface."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the inline assistant conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "accepted": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user accepted the suggested code or discarded it.",
                    "isMeasurement": true
                },
                "selectionlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the current selection.",
                    "isMeasurement": true
                },
                "wholerangelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the expanded whole range.",
                    "isMeasurement": true
                },
                "editcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many edits are suggested.",
                    "isMeasurement": true
                },
                "editlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in all suggested edits.",
                    "isMeasurement": true
                },
                "problemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current code.",
                    "isMeasurement": true
                },
                "selectionproblemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current selected code.",
                    "isMeasurement": true
                },
                "diagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current code.",
                    "isMeasurement": true
                },
                "selectiondiagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current code.",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatinline.trackEditSurvival": {
                "owner": "hediet",
                "comment": "Tracks how much percent of the AI edits surived after 5 minutes of accepting",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "replytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How response is shown in the interface."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the inline assistant conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "selectionlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the current selection.",
                    "isMeasurement": true
                },
                "wholerangelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the expanded whole range.",
                    "isMeasurement": true
                },
                "editcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many edits are suggested.",
                    "isMeasurement": true
                },
                "editlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in all suggested edits.",
                    "isMeasurement": true
                },
                "problemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current code.",
                    "isMeasurement": true
                },
                "selectionproblemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current selected code.",
                    "isMeasurement": true
                },
                "diagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current code.",
                    "isMeasurement": true
                },
                "selectiondiagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current selected code.",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcopilot.search.feedback": {
                "owner": "osortega",
                "comment": "Feedback telemetry for copilot search",
                "kind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Feedback provided by the user."
                },
                "chunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of copilot search code chunks.",
                    "isMeasurement": true
                },
                "rankresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of the copilot search ranking."
                },
                "rankresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of the results from copilot search ranking.",
                    "isMeasurement": true
                },
                "combinedresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of combined results from copilot search.",
                    "isMeasurement": true
                },
                "chunksearchduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the chunk search",
                    "isMeasurement": true
                },
                "llmfilteringduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the LLM filtering",
                    "isMeasurement": true
                },
                "strategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates the strategy used for the search."
                }
            },
            "GitHub.copilot-chatlanguagemodelrequest": {
                "owner": "jrieken",
                "comment": "Data about extensions using the language model",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is being used"
                },
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension identifier for which we make the request"
                },
                "extensionversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension version for which we make the request"
                },
                "tokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tokens",
                    "isMeasurement": true
                },
                "tokenlimit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tokens that can be used",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatintent.fixTestFailure.actioned": {
                "owner": "connor4312",
                "comment": "Reports when we show a ",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Where the action was taken"
                }
            },
            "GitHub.copilot-chatpanel.edit.codeblocks": {
                "owner": "joyceerhl",
                "comment": "Records information about the proposed edit codeblocks in an editing session",
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the current chat conversation."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request succeeded or failed."
                },
                "workingsetcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of entries in the working set",
                    "isMeasurement": true
                },
                "uniquecodeblockuricount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of unique code block URIs",
                    "isMeasurement": true
                },
                "codeblockcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of code blocks in the response",
                    "isMeasurement": true
                },
                "codeblockwithuricount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of code blocks that had URIs",
                    "isMeasurement": true
                },
                "codeblockwithelidedcodecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of code blocks that had a ...existing code... comment",
                    "isMeasurement": true
                },
                "shellcodeblockcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of shell code blocks in the response",
                    "isMeasurement": true
                },
                "shellcodeblockwithuricount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of shell code blocks that had URIs",
                    "isMeasurement": true
                },
                "shellcodeblockwithelidedcodecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of shell code blocks that had a ...existing code... comment",
                    "isMeasurement": true
                },
                "editstepcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of edit steps in the session so far",
                    "isMeasurement": true
                },
                "sessionduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time since the session started",
                    "isMeasurement": true
                },
                "intentid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the intent being executed"
                }
            },
            "GitHub.copilot-chateditCodeIntent.promptRender": {
                "owner": "roblourens",
                "comment": "Understanding the performance of the edit code intent rendering",
                "promptrenderdurationincludingrunningtools": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of the prompt rendering, includes running tools",
                    "isMeasurement": true
                },
                "isagentmode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the prompt was for agent mode",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattoolCalling.invalidToolMessages": {
                "owner": "roblourens",
                "comment": "Provides info about invalid tool messages that were rendered in a prompt",
                "filterreasons": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reasons for filtering the messages."
                },
                "filtercount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of filtered messages.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattriggerSummarizeFailed": {
                "owner": "roblourens",
                "comment": "Tracks when triggering summarization failed - for example, a summary was created but not applied successfully.",
                "errorkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The success state or failure reason of the summarization."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model ID used for the summarization."
                }
            },
            "GitHub.copilot-chatprojectLabels": {
                "owner": "digitarald",
                "comment": "Reports quality of labels detected in a workspace",
                "labels": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique workspace label count."
                },
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique workspace labels in context.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeBlock.action.goTo": {
                "owner": "mjbvz",
                "comment": "Counts interactions with code blocks in chat responses",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The go to command being run."
                },
                "codeblockid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique hash of the code block."
                }
            },
            "GitHub.copilot-chatadoCodeSearch.searchRepo.error": {
                "owner": "mjbvz",
                "comment": "Information about failed code ado searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatadoCodeSearch.searchRepo.success": {
                "owner": "mjbvz",
                "comment": "Information about successful ado code search searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "resultcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of returned chunks from the search",
                    "isMeasurement": true
                },
                "resultoutofsync": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tracks if the commit we think code search has indexed matches the commit code search returns results from",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.getRemoteIndexState.error": {
                "owner": "mjbvz",
                "comment": "Information about failed remote index state requests",
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.triggerIndexing.error": {
                "owner": "mjbvz",
                "comment": "Information about failed trigger indexing requests",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "triggerreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason why the indexing was triggered"
                },
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.getRemoteIndexState.success": {
                "owner": "mjbvz",
                "comment": "Information about failed remote index state requests",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "triggerreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason why the indexing was triggered"
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.searchRepo.error": {
                "owner": "mjbvz",
                "comment": "Information about failed code searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.searchRepo.success": {
                "owner": "mjbvz",
                "comment": "Information about successful code searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "resultcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of returned chunks from the search",
                    "isMeasurement": true
                },
                "resultoutofsync": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tracks if the commit we think code search has indexed matches the commit code search returns results from",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchRepoTracker.openGitRepo.error.noCurrentRepo": {
                "owner": "mjbvz",
                "comment": "Information about errors when trying to resolve a remote"
            },
            "GitHub.copilot-chatcodeSearchRepoTracker.openGitRepo.remoteInfo": {
                "owner": "mjbvz",
                "comment": "Information about the remote",
                "resolvedremotetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Identifies the primary remote's type ",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchRepoTracker.openGitRepo.error.couldNotResolveRemote": {
                "owner": "mjbvz",
                "comment": "Information about errors when trying to resolve a remote",
                "reporemotefetchurlscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of remote fetch urls on the git repo",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatembeddingsChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatembeddingsChunkSearch.perf.searchSubsetOfFiles": {
                "owner": "mjbvz",
                "comment": "Total time for searchSubsetOfFiles to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatfullWorkspaceChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "failurereason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "why did we fail"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfChunkSearch.perf.searchSubsetOfFiles": {
                "owner": "mjbvz",
                "comment": "Total time for searchSubsetOfFiles to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "files": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files being searched",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfChunkSearch.perf.tfidfSearch": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "filecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files in the index",
                    "isMeasurement": true
                },
                "updatedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files updated for this search",
                    "isMeasurement": true
                },
                "updatetime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that updating of the index took",
                    "isMeasurement": true
                },
                "searchtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that searching the index took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfidfChunkSearch.perf.initializeTfidf": {
                "owner": "mjbvz",
                "comment": "Understanding how long it took to initialize the tfidf index",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "filecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that we can index",
                    "isMeasurement": true
                },
                "newfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of new files",
                    "isMeasurement": true
                },
                "outofsyncfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that are out of sync",
                    "isMeasurement": true
                },
                "deletedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that have been deleted",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfWithSemanticChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfWithSemanticChunkSearch.perf.toSemanticChunks": {
                "owner": "mjbvz",
                "comment": "Time for the toSemantic part of searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkSearchStrategy": {
                "owner": "mjbvz",
                "comment": "Understanding which workspace chunk search strategy is used",
                "strategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The chosen strategy"
                },
                "errordiagmessage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The reason why the search failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total time in ms for workspace chunk search",
                    "isMeasurement": true
                },
                "workspaceindexfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files in our workspace index",
                    "isMeasurement": true
                },
                "wasfirstsearchinworkspace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tracks if this was the first time we triggered a workspace search",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkSearch.perf.adaRerank": {
                "owner": "mjbvz",
                "comment": "Understanding how effective ADA re-ranking is",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.isAvailable": {
                "owner": "mjbvz",
                "comment": "Metadata about the code search availability check",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "unavailablereason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "repostatues": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Detailed info about the statues of the repos in the workspace"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How long the check too to complete",
                    "isMeasurement": true
                },
                "indexedrepocount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of indexed repositories",
                    "isMeasurement": true
                },
                "notyetindexedrepocount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that have not yet been indexed",
                    "isMeasurement": true
                },
                "indexedrepolocation.workspace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that map exactly to a workspace folder",
                    "isMeasurement": true
                },
                "indexedrepolocation.parent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that map to a parent folder",
                    "isMeasurement": true
                },
                "indexedrepolocation.sub": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that map to a sub-folder",
                    "isMeasurement": true
                },
                "indexedrepolocation.unknown": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that map to an unknown folder",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.search.success": {
                "owner": "mjbvz",
                "comment": "Information about successful code searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "diffsearchstrategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Search strategy for the diff"
                },
                "chunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of returned chunks just from code search",
                    "isMeasurement": true
                },
                "locallychangedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files that are different than the code search index",
                    "isMeasurement": true
                },
                "codesearchoutofsync": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tracks if the local commit we think code search has indexed matches what code search actually has indexed",
                    "isMeasurement": true
                },
                "embeddingsrecomputedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that needed to have their embeddings recomputed. Only logged when embeddings search is used",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.perf.doCodeSearchWithRetry": {
                "owner": "mjbvz",
                "comment": "Total time for doCodeSearch to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.perf.tryToInstantIndexRepo": {
                "owner": "mjbvz",
                "comment": "Total time for instant indexing to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "startrepostatus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Initial status of the repo"
                },
                "endrepostatus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Final status of the repo"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.triggerRemoteIndexing": {
                "owner": "mjbvz",
                "comment": "Triggers of remote indexing",
                "triggerreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How the call was triggered"
                },
                "error": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How the trigger call failed"
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.triggerIndexingOfWorkspace": {
                "owner": "mjbvz",
                "comment": "Total time for triggerIndexingOfWorkspace to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What triggered the call"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.searchWorkspace": {
                "owner": "mjbvz",
                "comment": "Total time for searchWorkspace to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.searchSubsetOfFiles": {
                "owner": "mjbvz",
                "comment": "Total time for searchSubsetOfFiles to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.toSemanticChunks.noSemanticChunkFound": {
                "owner": "mjbvz",
                "comment": "Tracks errors related to mapping to semantic chunks",
                "extname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The file's extension"
                },
                "semanticchunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of semantic chunks returned",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.getAllWorkspaceEmbeddings": {
                "owner": "mjbvz",
                "comment": "Total time for getAllWorkspaceEmbeddings to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "totalfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files we have in the workspace",
                    "isMeasurement": true
                },
                "recomputedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files that were not in the cache",
                    "isMeasurement": true
                },
                "recomputedtotalcontentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total length of text for recomputed files",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.getEmbeddingsForFiles": {
                "owner": "mjbvz",
                "comment": "Total time for getEmbeddingsForFiles to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "totalfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files we are searching",
                    "isMeasurement": true
                },
                "recomputedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files that were not in the cache",
                    "isMeasurement": true
                },
                "recomputedtotalcontentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total length of text for recomputed files",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubAvailableEmbeddingTypes.getAvailableTypes.error": {
                "owner": "mjbvz",
                "comment": "Information about failed githubAvailableEmbeddingTypes calls",
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubAvailableEmbeddingTypes.getAvailableTypes.success": {
                "owner": "mjbvz",
                "comment": "Information about successful githubAvailableEmbeddingTypes calls",
                "primaryembeddingtypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "List of primary embedding types"
                },
                "deprecatedembeddingtypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "List of deprecated embedding types"
                }
            },
            "GitHub.copilot-chatworkspaceChunkIndex.initialize": {
                "owner": "mjbvz",
                "comment": "Information about successful code searches",
                "totalfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files we can index",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatnotebook.chatEditGeneration": {
                "owner": "donjayamanne",
                "comment": "Metadata about the code mapper request",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "requestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from where the request was made"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Model selection for the response"
                },
                "inputformat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Input format for the notebook source (xml, json, text)"
                },
                "isemptynotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the notebook is empty",
                    "isMeasurement": true
                },
                "isnotebookoruri": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether we're given a notebook or just a uri (1 = Notebook, 0 = Uri)",
                    "isMeasurement": true
                },
                "isjupyternotebookuri": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether we're given a Jupyter notebook or just a uri (1 = Jupyter Notebook, 0 = Other)",
                    "isMeasurement": true
                },
                "iseditemitted": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether a Notebook edit was emitted (insert or delete cell) (1 = Yes, 0 = No)",
                    "isMeasurement": true
                },
                "iscelltexteditemitted": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether an edit was emitted for a cell (1 = Yes, 0 = No)",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "sourcelength": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of lines in the source code from which we're to generate edits",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.speculative": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                },
                "originalrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The original request id for which this is a speculative request"
                },
                "numberofitems": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of items in the speculative request",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.ok": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                },
                "filesize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The size of the file",
                    "isMeasurement": true
                },
                "completioncontext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Kind of completion context"
                },
                "nodepath": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The syntax kind path to the AST node the position resolved to."
                },
                "cancelled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request got cancelled on the client side"
                },
                "timedout": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request timed out on the server side"
                },
                "servertime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time taken on the server side",
                    "isMeasurement": true
                },
                "contextcomputetime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time taken on the server side to compute the context",
                    "isMeasurement": true
                },
                "timetaken": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time taken to provide the completion",
                    "isMeasurement": true
                },
                "tokenbudgetexhausted": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the token budget was exhausted"
                },
                "blueprints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of blueprints",
                    "isMeasurement": true
                },
                "signatures": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of signatures",
                    "isMeasurement": true
                },
                "superclasses": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of super classes",
                    "isMeasurement": true
                },
                "generalscopes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of general scopes",
                    "isMeasurement": true
                },
                "completions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of traditional completion scopes",
                    "isMeasurement": true
                },
                "neighborfiles": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of neighbor files",
                    "isMeasurement": true
                },
                "module": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of modules",
                    "isMeasurement": true
                },
                "moduleresolution": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of moduleResolutions",
                    "isMeasurement": true
                },
                "lib": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of libs",
                    "isMeasurement": true
                },
                "target": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of targets",
                    "isMeasurement": true
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of versions",
                    "isMeasurement": true
                },
                "totalsize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total size of all context items",
                    "isMeasurement": true
                },
                "items": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Detailed information about each context item delivered."
                },
                "cachehits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cache hits",
                    "isMeasurement": true
                },
                "isspeculative": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was speculative"
                },
                "beforecachestate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The cache state before the request was sent"
                },
                "aftercachestate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The cache state after the request was sent"
                },
                "cacheditemsforspeculativerequest": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was cached for a speculative request",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.error": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context errors",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                },
                "code": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The failure code",
                    "isMeasurement": true
                },
                "message": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure message"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.on-timeout": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context on timeout",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "items": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Detailed information about each context item delivered."
                },
                "blueprints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of blueprints",
                    "isMeasurement": true
                },
                "signatures": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of signatures",
                    "isMeasurement": true
                },
                "superclasses": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of super classes",
                    "isMeasurement": true
                },
                "generalscopes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of general scopes",
                    "isMeasurement": true
                },
                "completions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of traditional completion scopes",
                    "isMeasurement": true
                },
                "neighborfiles": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of neighbor files",
                    "isMeasurement": true
                },
                "module": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of modules",
                    "isMeasurement": true
                },
                "moduleresolution": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of moduleResolutions",
                    "isMeasurement": true
                },
                "lib": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of libs",
                    "isMeasurement": true
                },
                "target": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of targets",
                    "isMeasurement": true
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of versions",
                    "isMeasurement": true
                },
                "totalsize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total size of all context items",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.failed": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context in failure case",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                },
                "code:": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The failure code"
                },
                "message": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure message"
                },
                "stack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure stack"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.cancelled": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context in cancellation case",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.activation.ok": {
                "owner": "dirkb",
                "comment": "Telemetry for TypeScript server plugin",
                "session": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the TypeScript server had a session"
                },
                "supported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the TypeScript server version is supported"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The version of the TypeScript server"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.activation.failed": {
                "owner": "dirkb",
                "comment": "Telemetry for TypeScript server plugin",
                "location": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The location of the failure"
                },
                "part": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The part that errored"
                },
                "message": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure message"
                },
                "stack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure stack"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The version"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.activation.unknown-ping-response": {
                "owner": "dirkb",
                "comment": "Telemetry for TypeScript server plugin",
                "location": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The location of the failure"
                },
                "part": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The part that errored"
                },
                "response": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The response literal"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.integration.failed": {
                "owner": "dirkb",
                "comment": "Telemetry for Copilot inline chat integration.",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "document": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The document for which the integration failed"
                },
                "versionmismatch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The version mismatch"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.inline-completion-provider.registered": {
                "owner": "dirkb",
                "comment": "Telemetry for Copilot inline completions",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.inline-completion-provider.unregistered": {
                "owner": "dirkb",
                "comment": "Telemetry for Copilot inline completions",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                }
            },
            "GitHub.copilot-chatrunNotebookCellInvoked": {
                "owner": "amunger",
                "comment": "Tracks the usage and result ",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "resourcehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The hash of the resource of the current request turn. (Notebook Uri)"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                },
                "result": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of the operation: success, failure, or unknown."
                },
                "resultinfo": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason for failure if the result is failure."
                }
            },
            "GitHub.copilot-chatnewNotebookTool.outcome": {
                "owner": "donjayamanne",
                "comment": "Tracks the outcome of new notebook tool",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The outcome of the tool call."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chattoolUse.runInTerminal": {
                "owner": "roblourens",
                "comment": "Understanding the usage of the runInTerminal tool",
                "result": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the tool ran successfully, or the type of error"
                },
                "strategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What strategy was used to execute the command (0=none, 1=basic, 2=rich)",
                    "isMeasurement": true
                },
                "usereditedcommand": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user edited the command",
                    "isMeasurement": true
                },
                "tooleditedcommand": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the tool edited the command",
                    "isMeasurement": true
                },
                "isbackground": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the command is a background command",
                    "isMeasurement": true
                },
                "isnewsession": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "Whether this was the first execution for the terminal session"
                },
                "outputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "How many lines of output were produced, this is -1 when isBackground is true or if there's an error"
                },
                "nonzeroexitcode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "Whether the command exited with a non-zero code (-1=error/unknown, 0=zero exit code, 1=non-zero)"
                },
                "timingconnectms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "How long the terminal took to start up and connect to"
                },
                "timingexecutems": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "How long the command took to execute"
                }
            },
            "GitHub.copilot-chatapplyPatch.trackEditSurvival": {
                "owner": "joyceerhl",
                "comment": "Tracks how much percent of the AI edits survived after 5 minutes of accepting",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "requestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from where the request was made"
                },
                "mapper": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The code mapper used strategy"
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatapplyPatchHealRate": {
                "owner": "connor4312",
                "comment": "Records how correct the healing of a patch was",
                "success": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the input was healed"
                }
            },
            "GitHub.copilot-chatapplyPatchToolInvoked": {
                "owner": "roblourens",
                "comment": "The apply_patch tool was invoked",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "interactionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current interaction."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the invocation was successful, or a failure reason"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                },
                "healed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the input was healed"
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the input was a notebook, 1 = yes, 0 = no, other = Unknown"
                }
            },
            "GitHub.copilot-chatreplaceStringToolInvoked": {
                "owner": "roblourens",
                "comment": "The replace_string tool was invoked",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "interactionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current interaction."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the invocation was successful, or a failure reason"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook, 1 = yes, 0 = no, other = unknown.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreadFileToolInvoked": {
                "owner": "roblourens",
                "comment": "The read_file tool was invoked",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "interactionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current interaction."
                },
                "tooloutcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the invocation was successful, or a failure reason"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                },
                "linesread": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of lines that were read",
                    "isMeasurement": true
                },
                "truncated": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The file length was truncated",
                    "isMeasurement": true
                },
                "isv2": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the tool is a v2 version"
                }
            },
            "GitHub.copilot-chatgithubRepoTool.prepare.error": {
                "owner": "mjbvz",
                "comment": "Tracks errors for the GitHub repo tool prepare step",
                "errorid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "General reason why the search failed"
                },
                "errordetails": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "More detailed info about the failure"
                }
            },
            "GitHub.copilot-chateditFileResult.diagnostics": {
                "owner": "roblourens",
                "comment": "Tracks whether new diagnostics were found after editing files",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "toolname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the tool that performed the edit"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                },
                "totalnewdiagnostics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of new diagnostics found across all files",
                    "isMeasurement": true
                },
                "fileswithnewdiagnostics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that had new diagnostics",
                    "isMeasurement": true
                },
                "totalfilesedited": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files that were edited",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chateditNotebook.toolUsed": {
                "owner": "donjayamanne",
                "comment": "Tracks the tool used to edit Notebook documents",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "resourcehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The hash of the resource of the current request turn. (Notebook Uri)"
                },
                "edittool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tool used to edit the notebook, one of 'notebookEdit' | 'applyPatch' | 'stringReplace' | 'newNotebookIntent' | 'editCodeIntent' | 'insertEdit' | 'createFile'"
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chateditNotebook.toolOutcome": {
                "owner": "donjayamanne",
                "comment": "Tracks the tool used to edit Notebook documents",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Outcome of the edit operation",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chateditNotebook.cellEditOps": {
                "owner": "donjayamanne",
                "comment": "Tracks the tool used to edit Notebook documents",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "insert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cell inserts",
                    "isMeasurement": true
                },
                "delete": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cell deletes",
                    "isMeasurement": true
                },
                "edit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cell edits",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chateditNotebook.editCellWithCodeMarker": {
                "owner": "donjayamanne",
                "comment": "Tracks the presence of code markers in code when editing Notebook cells",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "resourcehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The hash of the resource of the current request turn. (Notebook Uri)"
                },
                "hascodemarker": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether there any code markers are present",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chatgit.generateCommitMessageSurvival": {
                "owner": "lszomoru",
                "comment": "Tracks how much of the generated git commit message has survived",
                "attemptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many times the user has retried.",
                    "isMeasurement": true
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the suggested git commit message was used when the code change was committed.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chateditSourceTracker.stats": {
                "owner": "hediet",
                "comment": "Reports distribution of AI vs user edited characters.",
                "mode": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "longterm or 5minWindow"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language id of the document."
                },
                "statsuuid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The unique identifier for the telemetry event."
                },
                "nesmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of nes modified characters",
                    "isMeasurement": true
                },
                "inlinecompletionscopilotmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of inline completions copilot modified characters",
                    "isMeasurement": true
                },
                "inlinecompletionsnesmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of inline completions nes modified characters",
                    "isMeasurement": true
                },
                "otheraimodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of other AI modified characters",
                    "isMeasurement": true
                },
                "unknownmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of unknown modified characters",
                    "isMeasurement": true
                },
                "usermodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of user modified characters",
                    "isMeasurement": true
                },
                "idemodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of IDE modified characters",
                    "isMeasurement": true
                },
                "totalmodifiedcharacters": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Total modified characters",
                    "isMeasurement": true
                },
                "istrackedbygit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the document is tracked by git."
                }
            },
            "GitHub.copilot-chateditSourceTracker.details": {
                "owner": "hediet",
                "comment": "Reports distribution of various edit kinds.",
                "reasonkey": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The reason for the edit."
                },
                "mode": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "longterm or 5minWindow"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language id of the document."
                },
                "statsuuid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The unique identifier for the telemetry event."
                },
                "modifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of nes modified characters",
                    "isMeasurement": true
                },
                "totalmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Total number of characters",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreportInlineEditArc": {
                "owner": "hediet",
                "comment": "Reports the accepted and retained character count for an inline completion/edit.",
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension id (copilot or copilot-chat), which provided this inline completion."
                },
                "opportunityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique identifier for an opportunity to show an inline completion or NES."
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "arc": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The accepted and restrained character count.",
                    "isMeasurement": true
                },
                "originalcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The original character count before any edits.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatfeedback.generateDiagnostics": {
                "owner": "chrmarti",
                "comment": "Metadata about the code feedback generation",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which backend generated the comment."
                },
                "messageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result type of the response."
                },
                "documenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of document (e.g., text or notebook)."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "inputtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What type of input (e.g., selection or change)."
                },
                "commenttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of comment (e.g., correctness or performance)."
                },
                "promptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of prompts run.",
                    "isMeasurement": true
                },
                "numberofdiagnostics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of diagnostics.",
                    "isMeasurement": true
                },
                "inputdocumentcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many documents were part of the input.",
                    "isMeasurement": true
                },
                "inputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many (selected or changed) lines were part of the input.",
                    "isMeasurement": true
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the request.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreview.comment.vote": {
                "owner": "chrmarti",
                "comment": "Metadata about votes on review comments",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which backend generated the comment."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "documenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of document (e.g., text or notebook)."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "inputtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What type of input (e.g., selection or change)."
                },
                "commenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of comment (e.g., correctness or performance)."
                },
                "useraction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What action the user triggered (e.g., helpful, unhelpful, apply or discard)."
                },
                "commentindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Original index of the comment in the generated comments.",
                    "isMeasurement": true
                },
                "actioncount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of previously logged actions on the comment.",
                    "isMeasurement": true
                },
                "inputdocumentcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many documents were part of the input.",
                    "isMeasurement": true
                },
                "inputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many (selected or changed) lines were part of the input.",
                    "isMeasurement": true
                },
                "promptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of prompts run.",
                    "isMeasurement": true
                },
                "totalcomments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of comments.",
                    "isMeasurement": true
                },
                "comments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many comments are affected by the action.",
                    "isMeasurement": true
                },
                "commentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters long the review comment is.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreview.comment.action": {
                "owner": "chrmarti",
                "comment": "Metadata about actions on review comments",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which backend generated the comment."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "documenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of document (e.g., text or notebook)."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "inputtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What type of input (e.g., selection or change)."
                },
                "commenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of comment (e.g., correctness or performance)."
                },
                "useraction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What action the user triggered (e.g., helpful, unhelpful, apply or discard)."
                },
                "commentindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Original index of the comment in the generated comments.",
                    "isMeasurement": true
                },
                "actioncount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of previously logged actions on the comment.",
                    "isMeasurement": true
                },
                "inputdocumentcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many documents were part of the input.",
                    "isMeasurement": true
                },
                "inputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many (selected or changed) lines were part of the input.",
                    "isMeasurement": true
                },
                "promptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of prompts run.",
                    "isMeasurement": true
                },
                "totalcomments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of comments.",
                    "isMeasurement": true
                },
                "comments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many comments are affected by the action.",
                    "isMeasurement": true
                },
                "commentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters long the review comment is.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreview.discardCommentRangeSurvival": {
                "owner": "chrmarti",
                "comment": "Tracks how much percent of the commented range surived after 5 minutes of discarding",
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which backend generated the comment."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "documenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of document (e.g., text or notebook)."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "inputtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What type of input (e.g., selection or change)."
                },
                "commenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of comment (e.g., correctness or performance)."
                },
                "useraction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What action the user triggered (e.g., helpful, unhelpful, apply or discard)."
                },
                "commentindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Original index of the comment in the generated comments.",
                    "isMeasurement": true
                },
                "actioncount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of previously logged actions on the comment.",
                    "isMeasurement": true
                },
                "inputdocumentcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many documents were part of the input.",
                    "isMeasurement": true
                },
                "inputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many (selected or changed) lines were part of the input.",
                    "isMeasurement": true
                },
                "promptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of prompts run.",
                    "isMeasurement": true
                },
                "totalcomments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of comments.",
                    "isMeasurement": true
                },
                "comments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many comments are affected by the action.",
                    "isMeasurement": true
                },
                "commentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters long the review comment is.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatresponse.cancelled": {
                "owner": "digitarald",
                "comment": "Report canceled service responses for quality.",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Model selection for the response"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source for why the request was made"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the request"
                },
                "totaltokenmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum total token window",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens",
                    "isMeasurement": true
                },
                "tokencountmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum generated tokens",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "timetocancelled": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "isvisionrequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the request was for a vision model",
                    "isMeasurement": true
                },
                "isbyok": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was for a BYOK model",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatresponse.error": {
                "owner": "digitarald",
                "comment": "Report quality issue for when a service response failed.",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Type of issue"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Reason of issue"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Model selection for the response"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source for why the request was made"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the request"
                },
                "totaltokenmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum total token window",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens",
                    "isMeasurement": true
                },
                "tokencountmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum generated tokens",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "isvisionrequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the request was for a vision model",
                    "isMeasurement": true
                },
                "isbyok": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was for a BYOK model",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatresponse.success": {
                "owner": "digitarald",
                "comment": "Report quality details for a successful service response.",
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Reason for why a response finished"
                },
                "filterreason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Reason for why a response was filtered"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source of the initial request"
                },
                "initiatortype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was initiated by a user or an agent"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Model selection for the response"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "totaltokenmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum total token window",
                    "isMeasurement": true
                },
                "clientprompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens, locally counted",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens, server side counted",
                    "isMeasurement": true
                },
                "promptcachetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens hitting cache as reported by server",
                    "isMeasurement": true
                },
                "tokencountmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum generated tokens",
                    "isMeasurement": true
                },
                "tokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of generated tokens",
                    "isMeasurement": true
                },
                "acceptedpredictiontokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prediction that appeared in the completion",
                    "isMeasurement": true
                },
                "rejectedpredictiontokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prediction that appeared in the completion",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to complete the request",
                    "isMeasurement": true
                },
                "isvisionrequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the request was for a vision model",
                    "isMeasurement": true
                },
                "isbyok": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was for a BYOK model",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatconversation.repetition.detected": {
                "owner": "lramos15",
                "comment": "Calculates the number of repetitions in a response. Useful for loop detection",
                "finishreason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Reason for why a response finished. Helps identify cancellation vs length limits"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id for this message request."
                },
                "lengthofline": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Length of the repeating line, in characters.",
                    "isMeasurement": true
                },
                "numberofrepetitions": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of times the line repeats.",
                    "isMeasurement": true
                },
                "totallines": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of total lines in the response.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatintentDetection": {
                "owner": "ulugbekna",
                "comment": "Intent detection telemetry.",
                "chatlocation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which chat (panel or inline) intent detection is used for."
                },
                "preferredintent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which intent was initially provided as preferred."
                },
                "detectedintent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Intent that was detected by Copilot"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language ID of the document for which intent detection happened."
                },
                "isrerunwithoutintentdetection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user disliked the detected intent and tried to rerun without it."
                }
            },
            "GitHub.copilot-chatreportInlineEditSurvivalRate": {
                "owner": "hediet",
                "comment": "Reports the survival rate for an inline edit.",
                "opportunityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique identifier for an opportunity to show an NES."
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "arc": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The accepted and restrained character count.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatprovideInlineEdit": {
                "owner": "ulugbekna",
                "comment": "Telemetry for inline edit (NES) provided",
                "opportunityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique identifier for an opportunity to show an NES."
                },
                "headerrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique identifier of the network request which is also included in the fetch request header."
                },
                "providerid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "NES provider identifier (StatelessNextEditProvider)"
                },
                "documentshorteningstrategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Document shortening strategy, eg clipping or summarization"
                },
                "activedocumentlanguageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "LanguageId of the active document"
                },
                "acceptance": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "User acceptance of the edit"
                },
                "disposalreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason for disposal of NES"
                },
                "supersededbyopportunityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "UUID of the opportunity that superseded this edit"
                },
                "endpoint": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Endpoint for the request"
                },
                "nonexteditreasonkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason kind for no next edit"
                },
                "nonexteditreasonmessage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason message for no next edit"
                },
                "fetchresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Fetch result"
                },
                "fetcherror": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Fetch error message"
                },
                "pickednes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request had picked NES"
                },
                "diagnostictype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Type of diagnostics"
                },
                "diagnosticdroppedreasons": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reasons for dropping diagnostics NES suggestions"
                },
                "requestn": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Request number",
                    "isMeasurement": true
                },
                "hadstatelessnexteditprovidercall": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request had a stateless next edit provider call",
                    "isMeasurement": true
                },
                "statelessnexteditproviderduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of stateless next edit provider",
                    "isMeasurement": true
                },
                "nexteditproviderduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of next edit provider",
                    "isMeasurement": true
                },
                "isfromcache": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the edit was provided from cache",
                    "isMeasurement": true
                },
                "subsequenteditorder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Order of the subsequent edit",
                    "isMeasurement": true
                },
                "activedocumentoriginallinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of lines in the active document before shortening",
                    "isMeasurement": true
                },
                "activedocumentshortenedlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of lines in the active document after shortening",
                    "isMeasurement": true
                },
                "waspreviouslyrejected": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the edit was previously rejected",
                    "isMeasurement": true
                },
                "isshown": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the edit was shown",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook",
                    "isMeasurement": true
                },
                "logprobthreshold": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Log probability threshold for the edit",
                    "isMeasurement": true
                },
                "documentscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of documents",
                    "isMeasurement": true
                },
                "editscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of edits",
                    "isMeasurement": true
                },
                "activedocumenteditscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of edits in the active document",
                    "isMeasurement": true
                },
                "promptlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of lines in the prompt",
                    "isMeasurement": true
                },
                "promptcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of characters in the prompt",
                    "isMeasurement": true
                },
                "hadlowlogprobsuggestion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the suggestion had low log probability",
                    "isMeasurement": true
                },
                "neditssuggested": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of edits suggested",
                    "isMeasurement": true
                },
                "hasnextedit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there is a next edit",
                    "isMeasurement": true
                },
                "nexteditlogprob": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Log probability of the next edit",
                    "isMeasurement": true
                },
                "linedistancetomostrecentedit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Line distance to most recent edit",
                    "isMeasurement": true
                },
                "debouncetime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Debounce time",
                    "isMeasurement": true
                },
                "artificialdelay": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Artificial delay (aka backoff) on the response based on previous user acceptance/rejection in milliseconds",
                    "isMeasurement": true
                },
                "fetchstartedafterms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time from inline edit provider invocation to fetch init",
                    "isMeasurement": true
                },
                "ttft": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "fetchtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time from fetch init to end of stream",
                    "isMeasurement": true
                },
                "prompttokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prompt",
                    "isMeasurement": true
                },
                "responsetokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the response",
                    "isMeasurement": true
                },
                "cachedtokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cached tokens in the response",
                    "isMeasurement": true
                },
                "acceptedpredictiontokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prediction that appeared in the completion",
                    "isMeasurement": true
                },
                "rejectedpredictiontokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prediction that appeared in the completion",
                    "isMeasurement": true
                },
                "haddiagnosticsnes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request had diagnostics NES",
                    "isMeasurement": true
                },
                "hadllmnes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request had LLM NES",
                    "isMeasurement": true
                },
                "configisdiagnosticsnesenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether diagnostics NES is enabled",
                    "isMeasurement": true
                },
                "isnaturallanguagedominated": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the context is dominated by natural language",
                    "isMeasurement": true
                },
                "diagnostichasexistingsamefileimport": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the diagnostic has an existing same file import",
                    "isMeasurement": true
                },
                "diagnosticislocalimport": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the diagnostic is a local import",
                    "isMeasurement": true
                },
                "diagnosticalternativeimportscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of alternative imports for the diagnostic",
                    "isMeasurement": true
                },
                "diagnosticdistancetounknowndiagnostic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Distance to the unknown diagnostic",
                    "isMeasurement": true
                },
                "diagnosticdistancetoalternativediagnostic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Distance to the alternative diagnostic",
                    "isMeasurement": true
                },
                "diagnostichasalternativediagnosticforsamerange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there is an alternative diagnostic for the same range",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatpanel.action.filelink": {
                "owner": "digitarald",
                "comment": "Clicks on file links in the panel response",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the chat request."
                }
            },
            "GitHub.copilot-chatpanel.action.symbollink": {
                "owner": "digitarald",
                "comment": "Clicks on symbol links in the panel response",
                "hadmatch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the symbol was found.",
                    "isMeasurement": true
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the chat request."
                }
            },
            "GitHub.copilot-chatpanel.action.openSymbolFromReferencesLink": {
                "owner": "mjbvz",
                "comment": "Clicks on symbol links in the panel response",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the chat request."
                },
                "resolveddestinationtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How the link was actually resolved."
                }
            },
            "GitHub.copilot-chatvscode.contentChangeForUnknownDocument": {
                "owner": "hediet",
                "comment": "Telemetry for verifying VSCode content change API consistency"
            },
            "GitHub.copilot-chatvscode.contentChangeInconsistencyDetected": {
                "owner": "hediet",
                "comment": "Telemetry for verifying VSCode content change API consistency",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Scheme of the currently open document."
                }
            },
            "GitHub.copilot-chatgit.generateCommitMessage": {
                "owner": "lszomoru",
                "comment": "Metadata about the git commit message generation",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result type of the response."
                },
                "attemptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many times the user has retried.",
                    "isMeasurement": true
                },
                "difffilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of files in the commit.",
                    "isMeasurement": true
                },
                "difflength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The length of the diffs in the commit.",
                    "isMeasurement": true
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the request.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgit.generateCommitMessageIncorrectResponseFormat": {
                "owner": "lszomoru",
                "comment": "Metadata about the git commit message generation when the response is not in the expected format",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "responseformat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of the response format."
                }
            },
            "GitHub.copilot-chatgetNodeToDocument": {
                "owner": "ulugbekna",
                "comment": "Info on success and properties of detecting AST node to document",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language ID of the document"
                },
                "typeofnodetodocument": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Type of the AST node offered to be documented (type defined by tree-sitter grammar for that language)"
                },
                "nodetodocumentstart": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Start offset of the AST node offered to be documented (type defined by tree-sitter grammar for that language)"
                },
                "nodetodocumentend": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "End offset of the AST node offered to be documented (type defined by tree-sitter grammar for that language)"
                },
                "selectionoffsetrangestart": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The start offset range of the selection in the document"
                },
                "selectionoffsetrangeend": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The end offset range of the selection in the document"
                },
                "wholerangeoffsetrangestart": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The start offset range of the inline-chat wholeRange"
                },
                "wholerangeoffsetrangeend": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The end offset range of the inline-chat wholeRange"
                },
                "timespentms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time (in milliseconds) spent on finding the AST node to document (approximate as it's an async call)",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatdevcontainer.generateConfig": {
                "owner": "chrmarti",
                "comment": "Metadata about the Dev Container Config generation",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result type of the response."
                },
                "templateid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The chosen template id."
                },
                "featureids": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The chosen feature ids."
                },
                "originalfilenamecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of filenames.",
                    "isMeasurement": true
                },
                "originalfilenamelength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The length of the filenames.",
                    "isMeasurement": true
                },
                "processedfilenamecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of filenames after processing.",
                    "isMeasurement": true
                },
                "processedfilenamelength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The length of the filenames after processing.",
                    "isMeasurement": true
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the request.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatapplyPatch.inResponse": {
                "owner": "digitarald",
                "comment": "Metadata about an inline response from the model",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                }
            },
            "GitHub.copilot-chattoolCallDetails": {
                "owner": "roblourens",
                "comment": "Records information about tool calls during a request.",
                "intentid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the invoked intent."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the current chat conversation."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request succeeded or failed."
                },
                "numrequests": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The total number of requests made",
                    "isMeasurement": true
                },
                "turnindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The conversation turn index",
                    "isMeasurement": true
                },
                "toolcounts": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of times each tool was used"
                },
                "sessionduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time since the session started",
                    "isMeasurement": true
                },
                "turnduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time since the turn started",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many tokens were in the last generated prompt.",
                    "isMeasurement": true
                },
                "messagecharlen": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were in the user message.",
                    "isMeasurement": true
                },
                "availabletoolcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How number of tools that were available.",
                    "isMeasurement": true
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the final response was successful or how it failed."
                },
                "invalidtoolcallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tool call rounds that had an invalid tool call."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chatpanel.request": {
                "owner": "digitarald",
                "comment": "Metadata about one message turn in a chat conversation.",
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "contexttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The context parts which were used in providing the response."
                },
                "prompttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The prompt types and their length which were used in providing the response."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the current chat conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "responseid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message response."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the response was successful or how it failed."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language of the active editor."
                },
                "codeblocks": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Code block languages in the response."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "turn": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many turns have been made in the conversation.",
                    "isMeasurement": true
                },
                "textblocks": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "For text-only responses (no code), how many paragraphs were in the response.",
                    "isMeasurement": true
                },
                "links": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Symbol and file links in the response.",
                    "isMeasurement": true
                },
                "maybeofftopic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the response sounds like it got rejected due to the request being off-topic.",
                    "isMeasurement": true
                },
                "messagetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were in the user message.",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were in the generated prompt.",
                    "isMeasurement": true
                },
                "userpromptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many user messages were in the generated prompt.",
                    "isMeasurement": true
                },
                "responsetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were in the response.",
                    "isMeasurement": true
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the final request.",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to get the first token.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                },
                "codegeninstructionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions are in the request.",
                    "isMeasurement": true
                },
                "codegeninstructionslength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whats the length of the code generation instructions that were added to request.",
                    "isMeasurement": true
                },
                "codegeninstructionsfilteredcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions were filtered.",
                    "isMeasurement": true
                },
                "codegeninstructionfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instruction files were read.",
                    "isMeasurement": true
                },
                "codegeninstructionsettingscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions originated from settings.",
                    "isMeasurement": true
                },
                "toolcounts": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of times each tool was used"
                },
                "numtoolcalls": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The total number of tool calls",
                    "isMeasurement": true
                },
                "availabletoolcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How number of tools that were available.",
                    "isMeasurement": true
                },
                "temporalctxfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many temporal document-parts where included",
                    "isMeasurement": true
                },
                "temporalctxtotalcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many characters all temporal document-parts where included",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatinline.request": {
                "owner": "digitarald",
                "comment": "Metadata about an inline response from the model",
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "contexttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The context parts which were used in providing the response."
                },
                "prompttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The prompt types and their length which were used in providing the response."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language of the current document."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result type of the response."
                },
                "replytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How response is shown in the interface."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "diagnosticsprovider": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The diagnostics provider."
                },
                "diagnosticcodes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The diagnostics codes in the file."
                },
                "selectiondiagnosticcodes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The selected diagnostics codes."
                },
                "firstturn": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the first turn in the conversation.",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is a notebook document.",
                    "isMeasurement": true
                },
                "messagetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many tokens are in the rest of the query, without the command.",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many tokens are in the overall prompt.",
                    "isMeasurement": true
                },
                "responsetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many tokens were in the response.",
                    "isMeasurement": true
                },
                "implicitcommand": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the command was implictly detected or provided by the user.",
                    "isMeasurement": true
                },
                "attemptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many times the user has retried.",
                    "isMeasurement": true
                },
                "selectionlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the current selection.",
                    "isMeasurement": true
                },
                "wholerangelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the expanded whole range.",
                    "isMeasurement": true
                },
                "editcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many edits are suggested.",
                    "isMeasurement": true
                },
                "editlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in all suggested edits.",
                    "isMeasurement": true
                },
                "markdowncharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were emitted as markdown to vscode in the response stream.",
                    "isMeasurement": true
                },
                "problemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current document.",
                    "isMeasurement": true
                },
                "selectionproblemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current selected code.",
                    "isMeasurement": true
                },
                "diagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current .",
                    "isMeasurement": true
                },
                "selectiondiagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the code at the selection.",
                    "isMeasurement": true
                },
                "outcomeannotations": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Annotations about the outcome of the request."
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the final request.",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to get the first token.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                },
                "temporalctxfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many temporal document-parts where included",
                    "isMeasurement": true
                },
                "temporalctxtotalcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many characters all temporal document-parts where included",
                    "isMeasurement": true
                },
                "codegeninstructionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions are in the request.",
                    "isMeasurement": true
                },
                "codegeninstructionslength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The length of the code generation instructions that were added to request.",
                    "isMeasurement": true
                },
                "codegeninstructionsfilteredcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions were filtered.",
                    "isMeasurement": true
                },
                "codegeninstructionfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instruction files were read.",
                    "isMeasurement": true
                },
                "codegeninstructionsettingscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions originated from settings.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattokenizer.stats": {
                "owner": "jrieken",
                "comment": "Perf stats about tokenizers",
                "callcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How often tokenize was called",
                    "isMeasurement": true
                },
                "encodeduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Average time encode took",
                    "isMeasurement": true
                },
                "textlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Average length of text that got encoded",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatsurvey.show": {
                "owner": "digitarald",
                "comment": "Measures survey notification result",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The last used feature before the survey."
                },
                "language": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The last used editor language before the survey."
                },
                "activedays": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of days the user has used the extension.",
                    "isMeasurement": true
                },
                "firstactive": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of days since the user first used the extension.",
                    "isMeasurement": true
                },
                "surveytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of survey being prompted."
                }
            },
            "GitHub.copilot-chatsurvey.action": {
                "owner": "digitarald",
                "comment": "Measures survey notification result",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the survey prompt."
                },
                "language": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The last used editor language before the survey."
                },
                "selection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The user's selection."
                },
                "surveytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of survey being prompted."
                }
            },
            "GitHub.copilot-chatcopilot.search.request": {
                "owner": "osortega",
                "comment": "Copilot search request.",
                "chunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of copilot search code chunks.",
                    "isMeasurement": true
                },
                "rankresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of the copilot search ranking."
                },
                "rankresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of the results from copilot search ranking.",
                    "isMeasurement": true
                },
                "combinedresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of combined results from copilot search.",
                    "isMeasurement": true
                },
                "chunksearchduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the chunk search",
                    "isMeasurement": true
                },
                "llmfilteringduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the LLM filtering",
                    "isMeasurement": true
                },
                "llmbestrank": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Best rank (lowest index) among LLM-selected chunks in the original retrieval ranking.",
                    "isMeasurement": true
                },
                "llmworstrank": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Worst rank (highest index) among LLM-selected chunks in the original retrieval ranking.",
                    "isMeasurement": true
                },
                "llmselectedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of chunks selected by LLM from the initial retrieval.",
                    "isMeasurement": true
                },
                "rawllmrankingresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of raw results returned by the LLM.",
                    "isMeasurement": true
                },
                "parseresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates the result of parsing the LLM response."
                },
                "strategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates the strategy used for the search."
                }
            },
            "GitHub.copilot-chatsemanticSearch.ranking": {
                "owner": "rebornix",
                "comment": "Semantic search request ranking.",
                "llmbestrank": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Best rank (lowest index) among LLM-selected chunks in the original retrieval ranking.",
                    "isMeasurement": true
                },
                "llmworstrank": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Worst rank (highest index) among LLM-selected chunks in the original retrieval ranking.",
                    "isMeasurement": true
                },
                "llmselectedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of chunks selected by LLM from the initial retrieval.",
                    "isMeasurement": true
                },
                "rawllmrankingresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of raw results returned by the LLM.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcopilot.search.keywords": {
                "owner": "osortega",
                "comment": "Copilot keywords request.",
                "keywordresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of the copilot keywords request."
                },
                "keywordscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of keywords found by copilot search.",
                    "isMeasurement": true
                },
                "keywordsearchduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the keyword search",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatnesStatusOnActivation": {
                "owner": "ulugbekna",
                "comment": "To identify if NES was enabled by the user when extension is activated",
                "iscompletionsenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether ghost-text completions was effectively enabled",
                    "isMeasurement": true
                },
                "iscompletionsuserconfigured": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether ghost-text completions was configured by the user",
                    "isMeasurement": true
                },
                "isnesenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether NES was effectively enabled (e.g., by nes-by-default exp)",
                    "isMeasurement": true
                },
                "isnesuserconfigured": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the Inline Edits feature is configured by the user",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.computeChunksAndEmbeddings.error": {
                "owner": "mjbvz",
                "comment": "Tracks errors from the chunks service",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of computeChunksAndEmbeddings"
                },
                "responsestatus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatdebugSessionStart": {
                "owner": "connor4312",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "breakpointcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "exceptionbreakpoints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "watchexpressionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "extensionname": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight"
                },
                "isbuiltin": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "launchjsonexists": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatdebugSessionStop": {
                "owner": "connor4312",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "success": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "sessionlengthinseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "breakpointcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "watchexpressionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkbenchActionExecuted": {},
            "GitHub.copilot-chatcommandCenter.chatInstall": {
                "owner": "bpasero",
                "comment": "Provides insight into chat installation.",
                "installresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the extension was installed successfully, cancelled or failed to install."
                },
                "installduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The duration it took to install the extension.",
                    "isMeasurement": true
                },
                "signuperrorcode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The error code in case of an error signing up."
                }
            },
            "GitHub.copilot-chatnotebook/editorOpened": {
                "owner": "rebornix",
                "comment": "Identify the notebook editor view type",
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File system provider scheme for the resource"
                },
                "ext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File extension for the resource"
                },
                "viewtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "View type of the notebook editor"
                },
                "isrepl": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the notebook editor is within a REPL editor",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatinteractiveEditor/session": {
                "owner": "jrieken",
                "comment": "Data about an interaction editor session",
                "extension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension providing the data"
                },
                "rounds": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of request that were made"
                },
                "undos": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Requests that have been undone"
                },
                "edits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Did edits happen while the session was active"
                },
                "terminaledits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Did edits terminal the session",
                    "isMeasurement": true
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "When the session started"
                },
                "endtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "When the session ended"
                }
            }
        },
        "commonProperties": {
            "common.tid": {
                "classification": "EndUserPseudonymizedInformation",
                "purpose": "BusinessInsight"
            },
            "common.sku": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight"
            },
            "common.internal": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "isMeasurement": true
            }
        }
    },
    "github.copilot-chat-0.29.2025063001": {
        "events": {
            "GitHub.copilot-chatembedding.error": {
                "owner": "digitarald",
                "comment": "Tracks errors for embedding requests",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Error type"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Detailed error reason"
                }
            },
            "GitHub.copilot-chatembedding.success": {
                "owner": "digitarald",
                "comment": "Performance data for embedding requests",
                "inputtokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The number of tokens in the input.",
                    "isMeasurement": true
                },
                "batchsize": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The number of inputs sent over.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatsurvey.show": {
                "owner": "digitarald",
                "comment": "Measures survey notification result",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The last used feature before the survey."
                },
                "language": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The last used editor language before the survey."
                },
                "activedays": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of days the user has used the extension.",
                    "isMeasurement": true
                },
                "firstactive": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of days since the user first used the extension.",
                    "isMeasurement": true
                },
                "surveytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of survey being prompted."
                }
            },
            "GitHub.copilot-chatsurvey.action": {
                "owner": "digitarald",
                "comment": "Measures survey notification result",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the survey prompt."
                },
                "language": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The last used editor language before the survey."
                },
                "selection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The user's selection."
                },
                "surveytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of survey being prompted."
                }
            },
            "GitHub.copilot-chatcodeSearchRepoTracker.openGitRepo.error.noCurrentRepo": {
                "owner": "mjbvz",
                "comment": "Information about errors when trying to resolve a remote"
            },
            "GitHub.copilot-chatcodeSearchRepoTracker.openGitRepo.remoteInfo": {
                "owner": "mjbvz",
                "comment": "Information about the remote",
                "resolvedremotetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Identifies the primary remote's type ",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchRepoTracker.openGitRepo.error.couldNotResolveRemote": {
                "owner": "mjbvz",
                "comment": "Information about errors when trying to resolve a remote",
                "reporemotefetchurlscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of remote fetch urls on the git repo",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatadoCodeSearch.searchRepo.error": {
                "owner": "mjbvz",
                "comment": "Information about failed code ado searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatadoCodeSearch.searchRepo.success": {
                "owner": "mjbvz",
                "comment": "Information about successful ado code search searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "resultcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of returned chunks from the search",
                    "isMeasurement": true
                },
                "resultoutofsync": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tracks if the commit we think code search has indexed matches the commit code search returns results from",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.getRemoteIndexState.error": {
                "owner": "mjbvz",
                "comment": "Information about failed remote index state requests",
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.triggerIndexing.error": {
                "owner": "mjbvz",
                "comment": "Information about failed trigger indexing requests",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "triggerreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason why the indexing was triggered"
                },
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.getRemoteIndexState.success": {
                "owner": "mjbvz",
                "comment": "Information about failed remote index state requests",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "triggerreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason why the indexing was triggered"
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.searchRepo.error": {
                "owner": "mjbvz",
                "comment": "Information about failed code searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.searchRepo.success": {
                "owner": "mjbvz",
                "comment": "Information about successful code searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "resultcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of returned chunks from the search",
                    "isMeasurement": true
                },
                "resultoutofsync": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tracks if the commit we think code search has indexed matches the commit code search returns results from",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattoken": {
                "owner": "digitarald",
                "comment": "Copilot token received from the service.",
                "chatenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the token enabled chat.",
                    "isMeasurement": true
                },
                "snippyenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the block setting for public suggestions is enabled.",
                    "isMeasurement": true
                },
                "telemetryenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the subscription has telemetry enabled.",
                    "isMeasurement": true
                },
                "mcpenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the token has MCP features enabled.",
                    "isMeasurement": true
                },
                "previewenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the token has editor preview features enabled.",
                    "isMeasurement": true
                },
                "reviewenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the token has Copilot code review features enabled.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatquery-expfeature": {
                "abexp.queriedfeature": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "GitHub.copilot-chatcall-tas-error": {
                "errortype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "GitHub.copilot-chatnesStatusOnActivation": {
                "owner": "ulugbekna",
                "comment": "To identify if NES was enabled by the user when extension is activated",
                "iscompletionsenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether ghost-text completions was effectively enabled",
                    "isMeasurement": true
                },
                "iscompletionsuserconfigured": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether ghost-text completions was configured by the user",
                    "isMeasurement": true
                },
                "isnesenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether NES was effectively enabled (e.g., by nes-by-default exp)",
                    "isMeasurement": true
                },
                "isnesuserconfigured": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the Inline Edits feature is configured by the user",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfWithSemanticChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfWithSemanticChunkSearch.perf.toSemanticChunks": {
                "owner": "mjbvz",
                "comment": "Time for the toSemantic part of searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubAvailableEmbeddingTypes.getAvailableTypes.error": {
                "owner": "mjbvz",
                "comment": "Information about failed githubAvailableEmbeddingTypes calls",
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubAvailableEmbeddingTypes.getAvailableTypes.success": {
                "owner": "mjbvz",
                "comment": "Information about successful githubAvailableEmbeddingTypes calls",
                "primaryembeddingtypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "List of primary embedding types"
                },
                "deprecatedembeddingtypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "List of deprecated embedding types"
                }
            },
            "GitHub.copilot-chattfIdfChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfChunkSearch.perf.searchSubsetOfFiles": {
                "owner": "mjbvz",
                "comment": "Total time for searchSubsetOfFiles to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "files": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files being searched",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfChunkSearch.perf.tfidfSearch": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "filecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files in the index",
                    "isMeasurement": true
                },
                "updatedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files updated for this search",
                    "isMeasurement": true
                },
                "updatetime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that updating of the index took",
                    "isMeasurement": true
                },
                "searchtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that searching the index took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfidfChunkSearch.perf.initializeTfidf": {
                "owner": "mjbvz",
                "comment": "Understanding how long it took to initialize the tfidf index",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "filecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that we can index",
                    "isMeasurement": true
                },
                "newfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of new files",
                    "isMeasurement": true
                },
                "outofsyncfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that are out of sync",
                    "isMeasurement": true
                },
                "deletedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that have been deleted",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatembeddingsChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatembeddingsChunkSearch.perf.searchSubsetOfFiles": {
                "owner": "mjbvz",
                "comment": "Total time for searchSubsetOfFiles to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatfullWorkspaceChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "failurereason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "why did we fail"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.isAvailable": {
                "owner": "mjbvz",
                "comment": "Metadata about the code search availability check",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "unavailablereason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "repostatues": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Detailed info about the statues of the repos in the workspace"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How long the check too to complete",
                    "isMeasurement": true
                },
                "indexedrepocount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of indexed repositories",
                    "isMeasurement": true
                },
                "notyetindexedrepocount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that have not yet been indexed",
                    "isMeasurement": true
                },
                "indexedrepolocation.workspace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that map exactly to a workspace folder",
                    "isMeasurement": true
                },
                "indexedrepolocation.parent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that map to a parent folder",
                    "isMeasurement": true
                },
                "indexedrepolocation.sub": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that map to a sub-folder",
                    "isMeasurement": true
                },
                "indexedrepolocation.unknown": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that map to an unknown folder",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.search.success": {
                "owner": "mjbvz",
                "comment": "Information about successful code searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "diffsearchstrategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Search strategy for the diff"
                },
                "chunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of returned chunks just from code search",
                    "isMeasurement": true
                },
                "locallychangedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files that are different than the code search index",
                    "isMeasurement": true
                },
                "codesearchoutofsync": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tracks if the local commit we think code search has indexed matches what code search actually has indexed",
                    "isMeasurement": true
                },
                "embeddingsrecomputedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that needed to have their embeddings recomputed. Only logged when embeddings search is used",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.perf.doCodeSearchWithRetry": {
                "owner": "mjbvz",
                "comment": "Total time for doCodeSearch to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.perf.tryToInstantIndexRepo": {
                "owner": "mjbvz",
                "comment": "Total time for instant indexing to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "startrepostatus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Initial status of the repo"
                },
                "endrepostatus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Final status of the repo"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.triggerRemoteIndexing": {
                "owner": "mjbvz",
                "comment": "Triggers of remote indexing",
                "triggerreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How the call was triggered"
                },
                "error": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How the trigger call failed"
                }
            },
            "GitHub.copilot-chatworkspaceChunkIndex.initialize": {
                "owner": "mjbvz",
                "comment": "Information about successful code searches",
                "totalfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files we can index",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkSearchStrategy": {
                "owner": "mjbvz",
                "comment": "Understanding which workspace chunk search strategy is used",
                "strategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The chosen strategy"
                },
                "errordiagmessage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The reason why the search failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total time in ms for workspace chunk search",
                    "isMeasurement": true
                },
                "workspaceindexfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files in our workspace index",
                    "isMeasurement": true
                },
                "wasfirstsearchinworkspace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tracks if this was the first time we triggered a workspace search",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkSearch.perf.adaRerank": {
                "owner": "mjbvz",
                "comment": "Understanding how effective ADA re-ranking is",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.triggerIndexingOfWorkspace": {
                "owner": "mjbvz",
                "comment": "Total time for triggerIndexingOfWorkspace to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What triggered the call"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.searchWorkspace": {
                "owner": "mjbvz",
                "comment": "Total time for searchWorkspace to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.searchSubsetOfFiles": {
                "owner": "mjbvz",
                "comment": "Total time for searchSubsetOfFiles to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.toSemanticChunks.noSemanticChunkFound": {
                "owner": "mjbvz",
                "comment": "Tracks errors related to mapping to semantic chunks",
                "extname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The file's extension"
                },
                "semanticchunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of semantic chunks returned",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.getAllWorkspaceEmbeddings": {
                "owner": "mjbvz",
                "comment": "Total time for getAllWorkspaceEmbeddings to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "totalfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files we have in the workspace",
                    "isMeasurement": true
                },
                "recomputedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files that were not in the cache",
                    "isMeasurement": true
                },
                "recomputedtotalcontentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total length of text for recomputed files",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.getEmbeddingsForFiles": {
                "owner": "mjbvz",
                "comment": "Total time for getEmbeddingsForFiles to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "totalfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files we are searching",
                    "isMeasurement": true
                },
                "recomputedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files that were not in the cache",
                    "isMeasurement": true
                },
                "recomputedtotalcontentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total length of text for recomputed files",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatnotebook.chatEditGeneration": {
                "owner": "donjayamanne",
                "comment": "Metadata about the code mapper request",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "requestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from where the request was made"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Model selection for the response"
                },
                "inputformat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Input format for the notebook source (xml, json, text)"
                },
                "isemptynotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the notebook is empty",
                    "isMeasurement": true
                },
                "isnotebookoruri": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether we're given a notebook or just a uri (1 = Notebook, 0 = Uri)",
                    "isMeasurement": true
                },
                "isjupyternotebookuri": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether we're given a Jupyter notebook or just a uri (1 = Jupyter Notebook, 0 = Other)",
                    "isMeasurement": true
                },
                "iseditemitted": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether a Notebook edit was emitted (insert or delete cell) (1 = Yes, 0 = No)",
                    "isMeasurement": true
                },
                "iscelltexteditemitted": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether an edit was emitted for a cell (1 = Yes, 0 = No)",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "sourcelength": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of lines in the source code from which we're to generate edits",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattokenizer.stats": {
                "owner": "jrieken",
                "comment": "Perf stats about tokenizers",
                "callcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How often tokenize was called",
                    "isMeasurement": true
                },
                "encodeduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Average time encode took",
                    "isMeasurement": true
                },
                "textlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Average length of text that got encoded",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.computeChunksAndEmbeddings.error": {
                "owner": "mjbvz",
                "comment": "Tracks errors from the chunks service",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of computeChunksAndEmbeddings"
                },
                "responsestatus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatprovideRenameSuggestions": {
                "owner": "ulugbekna",
                "comment": "Telemetry for rename suggestions provided",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language ID of the document."
                },
                "cancellationreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Specify when exactly during the provider call the cancellation happened. Empty string if the cancellation didn't happen."
                },
                "fetchresulttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of a fetch to endpoint"
                },
                "replyformat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Copilot reply format: 'jsonStringArray' | 'multiJsonStringArray' | 'list' | 'unknown'"
                },
                "triggerkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Rename suggestion trigger kind - 'automatic' | 'manual'"
                },
                "promptconstructiontime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time it took to construct the prompt",
                    "isMeasurement": true
                },
                "timeelapsedbeforedelay": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time elapsed before delay starts",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Token count of the prompt",
                    "isMeasurement": true
                },
                "expecteddelaybeforefetch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Expected delay before fetch dictated by the experiment 'renameSuggestionsDelayBeforeFetch'",
                    "isMeasurement": true
                },
                "actualdelaybeforefetch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Actual delay before fetch computed as 'expectedDelay - promptComputationTime'",
                    "isMeasurement": true
                },
                "successresponsecharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Character count in model response (for response.type == 'success')",
                    "isMeasurement": true
                },
                "responseunusedcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Character count in model response that was unused, e.g., rename explanations, response format overhead",
                    "isMeasurement": true
                },
                "fetchtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time it took to fetch from endpoint",
                    "isMeasurement": true
                },
                "symbolnamescount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of suggested names",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatpanel.action.filelink": {
                "owner": "digitarald",
                "comment": "Clicks on file links in the panel response",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the chat request."
                }
            },
            "GitHub.copilot-chatpanel.action.symbollink": {
                "owner": "digitarald",
                "comment": "Clicks on symbol links in the panel response",
                "hadmatch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the symbol was found.",
                    "isMeasurement": true
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the chat request."
                }
            },
            "GitHub.copilot-chatpanel.action.openSymbolFromReferencesLink": {
                "owner": "mjbvz",
                "comment": "Clicks on symbol links in the panel response",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the chat request."
                },
                "resolveddestinationtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How the link was actually resolved."
                }
            },
            "GitHub.copilot-chateditNotebook.toolUsed": {
                "owner": "donjayamanne",
                "comment": "Tracks the tool used to edit Notebook documents",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "resourcehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The hash of the resource of the current request turn. (Notebook Uri)"
                },
                "edittool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tool used to edit the notebook, one of 'notebookEdit' | 'applyPatch' | 'stringReplace' | 'newNotebookIntent' | 'editCodeIntent' | 'insertEdit' | 'createFile'"
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chateditNotebook.toolOutcome": {
                "owner": "donjayamanne",
                "comment": "Tracks the tool used to edit Notebook documents",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Outcome of the edit operation",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chateditNotebook.cellEditOps": {
                "owner": "donjayamanne",
                "comment": "Tracks the tool used to edit Notebook documents",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "insert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cell inserts",
                    "isMeasurement": true
                },
                "delete": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cell deletes",
                    "isMeasurement": true
                },
                "edit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cell edits",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chateditNotebook.editCellWithCodeMarker": {
                "owner": "donjayamanne",
                "comment": "Tracks the presence of code markers in code when editing Notebook cells",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "resourcehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The hash of the resource of the current request turn. (Notebook Uri)"
                },
                "hascodemarker": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether there any code markers are present",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chatonboardDebug.commandExecuted": {
                "owner": "connor4312",
                "comment": "Reports usages of the copilot-debug command",
                "binary": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Binary executed with the command"
                }
            },
            "GitHub.copilot-chatonboardDebug.configGenerated": {
                "owner": "connor4312",
                "comment": "Reports usages of the copilot-debug command",
                "binary": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Binary executed with the command"
                },
                "debugtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Debug type generated"
                },
                "configgenerated": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether a config was generated",
                    "isMeasurement": true
                },
                "configtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "GitHub.copilot-chatreadFileToolInvoked": {
                "owner": "roblourens",
                "comment": "The read_file tool was invoked",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "interactionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current interaction."
                },
                "tooloutcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the invocation was successful, or a failure reason"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                },
                "linesread": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of lines that were read",
                    "isMeasurement": true
                },
                "truncated": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The file length was truncated",
                    "isMeasurement": true
                },
                "isv2": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the tool is a v2 version"
                }
            },
            "GitHub.copilot-chatnewNotebookTool.outcome": {
                "owner": "donjayamanne",
                "comment": "Tracks the outcome of new notebook tool",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The outcome of the tool call."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chatrunNotebookCellInvoked": {
                "owner": "amunger",
                "comment": "Tracks the usage and result ",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "resourcehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The hash of the resource of the current request turn. (Notebook Uri)"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                },
                "result": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of the operation: success, failure, or unknown."
                },
                "resultinfo": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason for failure if the result is failure."
                }
            },
            "GitHub.copilot-chatgithubRepoTool.prepare.error": {
                "owner": "mjbvz",
                "comment": "Tracks errors for the GitHub repo tool prepare step",
                "errorid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "General reason why the search failed"
                },
                "errordetails": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "More detailed info about the failure"
                }
            },
            "GitHub.copilot-chateditFileResult.diagnostics": {
                "owner": "roblourens",
                "comment": "Tracks whether new diagnostics were found after editing files",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "toolname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the tool that performed the edit"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                },
                "totalnewdiagnostics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of new diagnostics found across all files",
                    "isMeasurement": true
                },
                "fileswithnewdiagnostics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that had new diagnostics",
                    "isMeasurement": true
                },
                "totalfilesedited": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files that were edited",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattoolUse.runInTerminal": {
                "owner": "roblourens",
                "comment": "Understanding the usage of the runInTerminal tool",
                "result": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the tool ran successfully, or the type of error"
                },
                "strategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What strategy was used to execute the command (0=none, 1=basic, 2=rich)",
                    "isMeasurement": true
                },
                "usereditedcommand": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user edited the command",
                    "isMeasurement": true
                },
                "tooleditedcommand": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the tool edited the command",
                    "isMeasurement": true
                },
                "isbackground": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the command is a background command",
                    "isMeasurement": true
                },
                "isnewsession": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "Whether this was the first execution for the terminal session"
                },
                "outputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "How many lines of output were produced, this is -1 when isBackground is true or if there's an error"
                },
                "nonzeroexitcode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "Whether the command exited with a non-zero code (-1=error/unknown, 0=zero exit code, 1=non-zero)"
                },
                "timingconnectms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "How long the terminal took to start up and connect to"
                },
                "timingexecutems": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "How long the command took to execute"
                }
            },
            "GitHub.copilot-chatprojectLabels": {
                "owner": "digitarald",
                "comment": "Reports quality of labels detected in a workspace",
                "labels": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique workspace label count."
                },
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique workspace labels in context.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chaturiHandler": {
                "owner": "lramos15",
                "comment": "Reports when the uri handler is called in the copilot extension",
                "referrer": {
                    "classification": "SystemMetaData",
                    "purpose": "BusinessInsight",
                    "comment": "The referrer query param for the uri"
                }
            },
            "GitHub.copilot-chatgetNotebookCellOutput.toolOutcome": {
                "owner": "donjayamanne",
                "comment": "Tracks the tool used to get Notebook cell outputs",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Outcome of the edit operation",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chatcodeMapper.trackEditSurvival": {
                "owner": "aeschli",
                "comment": "Tracks how much percent of the AI edits survived after 5 minutes of accepting",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "requestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from where the request was made"
                },
                "mapper": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The code mapper used: One of 'fast', 'fast-lora', 'full' and 'patch'"
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "speculationrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the speculation request."
                },
                "chatrequestmodel": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the base chat request to generate the edit object."
                }
            },
            "GitHub.copilot-chatreplaceStringToolInvoked": {
                "owner": "roblourens",
                "comment": "The replace_string tool was invoked",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "interactionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current interaction."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the invocation was successful, or a failure reason"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook, 1 = yes, 0 = no, other = unknown.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatapplyPatch.trackEditSurvival": {
                "owner": "joyceerhl",
                "comment": "Tracks how much percent of the AI edits survived after 5 minutes of accepting",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "requestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from where the request was made"
                },
                "mapper": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The code mapper used strategy"
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatapplyPatchHealRate": {
                "owner": "connor4312",
                "comment": "Records how correct the healing of a patch was",
                "success": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the input was healed"
                }
            },
            "GitHub.copilot-chatapplyPatchToolInvoked": {
                "owner": "roblourens",
                "comment": "The apply_patch tool was invoked",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "interactionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current interaction."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the invocation was successful, or a failure reason"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                },
                "healed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the input was healed"
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the input was a notebook, 1 = yes, 0 = no, other = Unknown"
                }
            },
            "GitHub.copilot-chatcopilot.search.request": {
                "owner": "osortega",
                "comment": "Copilot search request.",
                "chunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of copilot search code chunks.",
                    "isMeasurement": true
                },
                "rankresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of the copilot search ranking."
                },
                "rankresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of the results from copilot search ranking.",
                    "isMeasurement": true
                },
                "combinedresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of combined results from copilot search.",
                    "isMeasurement": true
                },
                "chunksearchduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the chunk search",
                    "isMeasurement": true
                },
                "llmfilteringduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the LLM filtering",
                    "isMeasurement": true
                },
                "llmbestrank": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Best rank (lowest index) among LLM-selected chunks in the original retrieval ranking.",
                    "isMeasurement": true
                },
                "llmworstrank": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Worst rank (highest index) among LLM-selected chunks in the original retrieval ranking.",
                    "isMeasurement": true
                },
                "llmselectedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of chunks selected by LLM from the initial retrieval.",
                    "isMeasurement": true
                },
                "rawllmrankingresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of raw results returned by the LLM.",
                    "isMeasurement": true
                },
                "parseresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates the result of parsing the LLM response."
                },
                "strategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates the strategy used for the search."
                }
            },
            "GitHub.copilot-chatsemanticSearch.ranking": {
                "owner": "rebornix",
                "comment": "Semantic search request ranking.",
                "llmbestrank": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Best rank (lowest index) among LLM-selected chunks in the original retrieval ranking.",
                    "isMeasurement": true
                },
                "llmworstrank": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Worst rank (highest index) among LLM-selected chunks in the original retrieval ranking.",
                    "isMeasurement": true
                },
                "llmselectedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of chunks selected by LLM from the initial retrieval.",
                    "isMeasurement": true
                },
                "rawllmrankingresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of raw results returned by the LLM.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcopilot.search.keywords": {
                "owner": "osortega",
                "comment": "Copilot keywords request.",
                "keywordresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of the copilot keywords request."
                },
                "keywordscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of keywords found by copilot search.",
                    "isMeasurement": true
                },
                "keywordsearchduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the keyword search",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcookbook.accessed": {
                "owner": "luabud",
                "comment": "Reports when a cookbook entry is accessed for a diagnostic.",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "diagnosticcode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The diagnostic code accessed in the cookbook."
                },
                "provider": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The tool which is the diagnostic provider."
                }
            },
            "GitHub.copilot-chatgetNodeToDocument": {
                "owner": "ulugbekna",
                "comment": "Info on success and properties of detecting AST node to document",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language ID of the document"
                },
                "typeofnodetodocument": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Type of the AST node offered to be documented (type defined by tree-sitter grammar for that language)"
                },
                "nodetodocumentstart": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Start offset of the AST node offered to be documented (type defined by tree-sitter grammar for that language)"
                },
                "nodetodocumentend": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "End offset of the AST node offered to be documented (type defined by tree-sitter grammar for that language)"
                },
                "selectionoffsetrangestart": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The start offset range of the selection in the document"
                },
                "selectionoffsetrangeend": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The end offset range of the selection in the document"
                },
                "wholerangeoffsetrangestart": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The start offset range of the inline-chat wholeRange"
                },
                "wholerangeoffsetrangeend": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The end offset range of the inline-chat wholeRange"
                },
                "timespentms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time (in milliseconds) spent on finding the AST node to document (approximate as it's an async call)",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatintentDetection": {
                "owner": "ulugbekna",
                "comment": "Intent detection telemetry.",
                "chatlocation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which chat (panel or inline) intent detection is used for."
                },
                "preferredintent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which intent was initially provided as preferred."
                },
                "detectedintent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Intent that was detected by Copilot"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language ID of the document for which intent detection happened."
                },
                "isrerunwithoutintentdetection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user disliked the detected intent and tried to rerun without it."
                }
            },
            "GitHub.copilot-chatdevcontainer.generateConfig": {
                "owner": "chrmarti",
                "comment": "Metadata about the Dev Container Config generation",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result type of the response."
                },
                "templateid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The chosen template id."
                },
                "featureids": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The chosen feature ids."
                },
                "originalfilenamecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of filenames.",
                    "isMeasurement": true
                },
                "originalfilenamelength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The length of the filenames.",
                    "isMeasurement": true
                },
                "processedfilenamecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of filenames after processing.",
                    "isMeasurement": true
                },
                "processedfilenamelength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The length of the filenames after processing.",
                    "isMeasurement": true
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the request.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatfeedback.generateDiagnostics": {
                "owner": "chrmarti",
                "comment": "Metadata about the code feedback generation",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which backend generated the comment."
                },
                "messageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result type of the response."
                },
                "documenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of document (e.g., text or notebook)."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "inputtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What type of input (e.g., selection or change)."
                },
                "commenttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of comment (e.g., correctness or performance)."
                },
                "promptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of prompts run.",
                    "isMeasurement": true
                },
                "numberofdiagnostics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of diagnostics.",
                    "isMeasurement": true
                },
                "inputdocumentcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many documents were part of the input.",
                    "isMeasurement": true
                },
                "inputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many (selected or changed) lines were part of the input.",
                    "isMeasurement": true
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the request.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreview.comment.vote": {
                "owner": "chrmarti",
                "comment": "Metadata about votes on review comments",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which backend generated the comment."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "documenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of document (e.g., text or notebook)."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "inputtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What type of input (e.g., selection or change)."
                },
                "commenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of comment (e.g., correctness or performance)."
                },
                "useraction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What action the user triggered (e.g., helpful, unhelpful, apply or discard)."
                },
                "commentindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Original index of the comment in the generated comments.",
                    "isMeasurement": true
                },
                "actioncount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of previously logged actions on the comment.",
                    "isMeasurement": true
                },
                "inputdocumentcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many documents were part of the input.",
                    "isMeasurement": true
                },
                "inputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many (selected or changed) lines were part of the input.",
                    "isMeasurement": true
                },
                "promptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of prompts run.",
                    "isMeasurement": true
                },
                "totalcomments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of comments.",
                    "isMeasurement": true
                },
                "comments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many comments are affected by the action.",
                    "isMeasurement": true
                },
                "commentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters long the review comment is.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreview.comment.action": {
                "owner": "chrmarti",
                "comment": "Metadata about actions on review comments",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which backend generated the comment."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "documenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of document (e.g., text or notebook)."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "inputtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What type of input (e.g., selection or change)."
                },
                "commenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of comment (e.g., correctness or performance)."
                },
                "useraction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What action the user triggered (e.g., helpful, unhelpful, apply or discard)."
                },
                "commentindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Original index of the comment in the generated comments.",
                    "isMeasurement": true
                },
                "actioncount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of previously logged actions on the comment.",
                    "isMeasurement": true
                },
                "inputdocumentcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many documents were part of the input.",
                    "isMeasurement": true
                },
                "inputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many (selected or changed) lines were part of the input.",
                    "isMeasurement": true
                },
                "promptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of prompts run.",
                    "isMeasurement": true
                },
                "totalcomments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of comments.",
                    "isMeasurement": true
                },
                "comments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many comments are affected by the action.",
                    "isMeasurement": true
                },
                "commentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters long the review comment is.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreview.discardCommentRangeSurvival": {
                "owner": "chrmarti",
                "comment": "Tracks how much percent of the commented range surived after 5 minutes of discarding",
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which backend generated the comment."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "documenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of document (e.g., text or notebook)."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "inputtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What type of input (e.g., selection or change)."
                },
                "commenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of comment (e.g., correctness or performance)."
                },
                "useraction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What action the user triggered (e.g., helpful, unhelpful, apply or discard)."
                },
                "commentindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Original index of the comment in the generated comments.",
                    "isMeasurement": true
                },
                "actioncount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of previously logged actions on the comment.",
                    "isMeasurement": true
                },
                "inputdocumentcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many documents were part of the input.",
                    "isMeasurement": true
                },
                "inputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many (selected or changed) lines were part of the input.",
                    "isMeasurement": true
                },
                "promptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of prompts run.",
                    "isMeasurement": true
                },
                "totalcomments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of comments.",
                    "isMeasurement": true
                },
                "comments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many comments are affected by the action.",
                    "isMeasurement": true
                },
                "commentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters long the review comment is.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatprompt.invalidreference": {
                "owner": "jrieken",
                "comment": "Tracks bad prompt references",
                "stack": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Error stack"
                }
            },
            "GitHub.copilot-chattoolInvoke": {
                "owner": "donjayamanne",
                "comment": "Details about invocation of tools",
                "validateoutcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The outcome of the tool input validation. valid, invalid and unknown"
                },
                "invokeoutcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The outcome of the tool Invokcation. invalidInput, disabledByUser, success, error, cancelled"
                },
                "toolname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the tool being invoked."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                }
            },
            "GitHub.copilot-chatagent.tool.responseLength": {
                "owner": "connor4312",
                "comment": "Counts the number of tokens generated by tools",
                "toolname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the tool being invoked."
                },
                "tokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of tokens used.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chateditNotebook.validation": {
                "owner": "donjayamanne",
                "comment": "Validation failure for a Edit Notebook tool invocation",
                "validationresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result of the tool input validation. valid, invalid and unknown"
                },
                "invokeoutcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result of the tool Invocation. invalidInput, disabledByUser, success, error, cancelled"
                },
                "edittype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of edit that was attempted. insert, delete, edit or unknown"
                },
                "unknownprops": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "List of unknown properties in the input"
                },
                "missingprops": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "List of missing properties in the input"
                },
                "newcodetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of code, whether its string, string[], object, object[] or unknown"
                },
                "cellid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the cell, TOP, BOTTOM, cellid, empty or unknown"
                },
                "explanation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The explanation for the edit. provided, empty and unknown"
                },
                "inputparsed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the input was parsed as JSON",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                }
            },
            "GitHub.copilot-chatworkspaceContext.perf.prepareWorkspaceChunks": {
                "owner": "mjbvz",
                "comment": "Understanding the performance of including workspace context",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "resultchunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of chunks returned",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceContext.perf.prepare": {
                "owner": "mjbvz",
                "comment": "Understanding how effective ADA re-ranking is",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceResolver.error": {
                "owner": "mjbvz",
                "comment": "Tracks errors for resolving workspace information",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Error type"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Detailed error reason"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                }
            },
            "GitHub.copilot-chatworkspaceResolver.success": {
                "owner": "mjbvz",
                "comment": "Tracks errors for resolving workspace information",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Success type"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "totalkeywordcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of keywords returned.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgit.generateCommitMessage": {
                "owner": "lszomoru",
                "comment": "Metadata about the git commit message generation",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result type of the response."
                },
                "attemptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many times the user has retried.",
                    "isMeasurement": true
                },
                "difffilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of files in the commit.",
                    "isMeasurement": true
                },
                "difflength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The length of the diffs in the commit.",
                    "isMeasurement": true
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the request.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgit.generateCommitMessageIncorrectResponseFormat": {
                "owner": "lszomoru",
                "comment": "Metadata about the git commit message generation when the response is not in the expected format",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "responseformat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of the response format."
                }
            },
            "GitHub.copilot-chatresponse.cancelled": {
                "owner": "digitarald",
                "comment": "Report canceled service responses for quality.",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Model selection for the response"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source for why the request was made"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the request"
                },
                "totaltokenmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum total token window",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens",
                    "isMeasurement": true
                },
                "tokencountmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum generated tokens",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "timetocancelled": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "isvisionrequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the request was for a vision model",
                    "isMeasurement": true
                },
                "isbyok": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was for a BYOK model",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatresponse.error": {
                "owner": "digitarald",
                "comment": "Report quality issue for when a service response failed.",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Type of issue"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Reason of issue"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Model selection for the response"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source for why the request was made"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the request"
                },
                "totaltokenmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum total token window",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens",
                    "isMeasurement": true
                },
                "tokencountmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum generated tokens",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "isvisionrequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the request was for a vision model",
                    "isMeasurement": true
                },
                "isbyok": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was for a BYOK model",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatresponse.success": {
                "owner": "digitarald",
                "comment": "Report quality details for a successful service response.",
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Reason for why a response finished"
                },
                "filterreason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Reason for why a response was filtered"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source of the initial request"
                },
                "initiatortype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was initiated by a user or an agent"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Model selection for the response"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "totaltokenmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum total token window",
                    "isMeasurement": true
                },
                "clientprompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens, locally counted",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens, server side counted",
                    "isMeasurement": true
                },
                "promptcachetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens hitting cache as reported by server",
                    "isMeasurement": true
                },
                "tokencountmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum generated tokens",
                    "isMeasurement": true
                },
                "tokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of generated tokens",
                    "isMeasurement": true
                },
                "acceptedpredictiontokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prediction that appeared in the completion",
                    "isMeasurement": true
                },
                "rejectedpredictiontokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prediction that appeared in the completion",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to complete the request",
                    "isMeasurement": true
                },
                "isvisionrequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the request was for a vision model",
                    "isMeasurement": true
                },
                "isbyok": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was for a BYOK model",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatconversation.repetition.detected": {
                "owner": "lramos15",
                "comment": "Calculates the number of repetitions in a response. Useful for loop detection",
                "finishreason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Reason for why a response finished. Helps identify cancellation vs length limits"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id for this message request."
                },
                "lengthofline": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Length of the repeating line, in characters.",
                    "isMeasurement": true
                },
                "numberofrepetitions": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of times the line repeats.",
                    "isMeasurement": true
                },
                "totallines": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of total lines in the response.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodemapper.completeCodeBlock": {
                "owner": "aeschli",
                "comment": "Sent when a codemapper request is received for a complete code block that contains no ...existing code... comments."
            },
            "GitHub.copilot-chatcodemapper.request": {
                "owner": "aeschli",
                "comment": "Metadata about the code mapper request",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "requestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from where the request was made"
                },
                "mapper": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The mapper used: One of 'fast', 'fast-lora', 'full' and 'patch'"
                },
                "outcomeannotations": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Annotations about the outcome of the request."
                }
            },
            "GitHub.copilot-chatapplyPatch.inResponse": {
                "owner": "digitarald",
                "comment": "Metadata about an inline response from the model",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                }
            },
            "GitHub.copilot-chattoolCallDetails": {
                "owner": "roblourens",
                "comment": "Records information about tool calls during a request.",
                "intentid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the invoked intent."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the current chat conversation."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request succeeded or failed."
                },
                "numrequests": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The total number of requests made",
                    "isMeasurement": true
                },
                "turnindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The conversation turn index",
                    "isMeasurement": true
                },
                "toolcounts": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of times each tool was used"
                },
                "sessionduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time since the session started",
                    "isMeasurement": true
                },
                "turnduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time since the turn started",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many tokens were in the last generated prompt.",
                    "isMeasurement": true
                },
                "messagecharlen": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were in the user message.",
                    "isMeasurement": true
                },
                "availabletoolcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How number of tools that were available.",
                    "isMeasurement": true
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the final response was successful or how it failed."
                },
                "invalidtoolcallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tool call rounds that had an invalid tool call."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chatpanel.request": {
                "owner": "digitarald",
                "comment": "Metadata about one message turn in a chat conversation.",
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "contexttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The context parts which were used in providing the response."
                },
                "prompttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The prompt types and their length which were used in providing the response."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the current chat conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "responseid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message response."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the response was successful or how it failed."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language of the active editor."
                },
                "codeblocks": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Code block languages in the response."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "turn": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many turns have been made in the conversation.",
                    "isMeasurement": true
                },
                "textblocks": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "For text-only responses (no code), how many paragraphs were in the response.",
                    "isMeasurement": true
                },
                "links": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Symbol and file links in the response.",
                    "isMeasurement": true
                },
                "maybeofftopic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the response sounds like it got rejected due to the request being off-topic.",
                    "isMeasurement": true
                },
                "messagetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were in the user message.",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were in the generated prompt.",
                    "isMeasurement": true
                },
                "userpromptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many user messages were in the generated prompt.",
                    "isMeasurement": true
                },
                "responsetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were in the response.",
                    "isMeasurement": true
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the final request.",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to get the first token.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                },
                "codegeninstructionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions are in the request.",
                    "isMeasurement": true
                },
                "codegeninstructionslength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whats the length of the code generation instructions that were added to request.",
                    "isMeasurement": true
                },
                "codegeninstructionsfilteredcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions were filtered.",
                    "isMeasurement": true
                },
                "codegeninstructionfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instruction files were read.",
                    "isMeasurement": true
                },
                "codegeninstructionsettingscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions originated from settings.",
                    "isMeasurement": true
                },
                "toolcounts": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of times each tool was used"
                },
                "numtoolcalls": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The total number of tool calls",
                    "isMeasurement": true
                },
                "availabletoolcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How number of tools that were available.",
                    "isMeasurement": true
                },
                "temporalctxfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many temporal document-parts where included",
                    "isMeasurement": true
                },
                "temporalctxtotalcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many characters all temporal document-parts where included",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatinline.request": {
                "owner": "digitarald",
                "comment": "Metadata about an inline response from the model",
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "contexttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The context parts which were used in providing the response."
                },
                "prompttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The prompt types and their length which were used in providing the response."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language of the current document."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result type of the response."
                },
                "replytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How response is shown in the interface."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "diagnosticsprovider": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The diagnostics provider."
                },
                "diagnosticcodes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The diagnostics codes in the file."
                },
                "selectiondiagnosticcodes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The selected diagnostics codes."
                },
                "firstturn": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the first turn in the conversation.",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is a notebook document.",
                    "isMeasurement": true
                },
                "messagetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many tokens are in the rest of the query, without the command.",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many tokens are in the overall prompt.",
                    "isMeasurement": true
                },
                "responsetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many tokens were in the response.",
                    "isMeasurement": true
                },
                "implicitcommand": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the command was implictly detected or provided by the user.",
                    "isMeasurement": true
                },
                "attemptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many times the user has retried.",
                    "isMeasurement": true
                },
                "selectionlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the current selection.",
                    "isMeasurement": true
                },
                "wholerangelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the expanded whole range.",
                    "isMeasurement": true
                },
                "editcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many edits are suggested.",
                    "isMeasurement": true
                },
                "editlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in all suggested edits.",
                    "isMeasurement": true
                },
                "markdowncharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were emitted as markdown to vscode in the response stream.",
                    "isMeasurement": true
                },
                "problemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current document.",
                    "isMeasurement": true
                },
                "selectionproblemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current selected code.",
                    "isMeasurement": true
                },
                "diagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current .",
                    "isMeasurement": true
                },
                "selectiondiagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the code at the selection.",
                    "isMeasurement": true
                },
                "outcomeannotations": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Annotations about the outcome of the request."
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the final request.",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to get the first token.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                },
                "temporalctxfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many temporal document-parts where included",
                    "isMeasurement": true
                },
                "temporalctxtotalcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many characters all temporal document-parts where included",
                    "isMeasurement": true
                },
                "codegeninstructionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions are in the request.",
                    "isMeasurement": true
                },
                "codegeninstructionslength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The length of the code generation instructions that were added to request.",
                    "isMeasurement": true
                },
                "codegeninstructionsfilteredcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions were filtered.",
                    "isMeasurement": true
                },
                "codegeninstructionfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instruction files were read.",
                    "isMeasurement": true
                },
                "codegeninstructionsettingscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions originated from settings.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatspeculation.response.success": {
                "owner": "alexdima",
                "comment": "Report quality details for a successful speculative response.",
                "chatrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "chatrequestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source of the current turn request"
                },
                "isnoopedit": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the response text is identical to the speculation."
                },
                "speculationrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "containselidedcodecomments": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the response text contains elided code comments."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The model used for this speculation request"
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens",
                    "isMeasurement": true
                },
                "speculationtokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of speculation tokens",
                    "isMeasurement": true
                },
                "responsetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of response tokens",
                    "isMeasurement": true
                },
                "addedlines": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of lines added",
                    "isMeasurement": true
                },
                "removedlines": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of lines removed",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether this is a notebook",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to complete the request",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatspeculation.response.error": {
                "owner": "alexdima",
                "comment": "Report quality issue for when a speculative response failed.",
                "errormessage": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the error"
                },
                "chatrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "speculationrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the speculation request"
                },
                "chatrequestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source of the current turn request"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The model used for this speculation request"
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens",
                    "isMeasurement": true
                },
                "speculationtokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of speculation tokens",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether this is a notebook",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatspeculation.response.loop": {
                "owner": "joyceerhl",
                "comment": "Report when the model appears to have gone into a loop.",
                "hasloop": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the model appears to have gone into a loop."
                },
                "speculationrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The language id of the document"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The model used for this speculation request"
                },
                "documentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Length of original file",
                    "isMeasurement": true
                },
                "rewrittenlength": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Length of original file",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgit.generateCommitMessageSurvival": {
                "owner": "lszomoru",
                "comment": "Tracks how much of the generated git commit message has survived",
                "attemptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many times the user has retried.",
                    "isMeasurement": true
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the suggested git commit message was used when the code change was committed.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatsummarizedConversationHistory": {
                "owner": "roblourens",
                "comment": "Tracks when summarization happens and what the outcome was",
                "summarizationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "An ID to join all attempts of this summarization task."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The success state or failure reason of the summarization."
                },
                "detailedoutcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A more detailed error message."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model ID used for the summarization."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request ID from the summarization call."
                },
                "numrounds": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tool call rounds before this summarization was triggered.",
                    "isMeasurement": true
                },
                "numroundssincelastsummarization": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tool call rounds since the last summarization.",
                    "isMeasurement": true
                },
                "lastusedtool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the last tool used before summarization."
                },
                "isduringtoolcalling": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this summarization was triggered during a tool calling loop.",
                    "isMeasurement": true
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the current chat conversation."
                },
                "hasworkingnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the conversation summary includes a working notebook.",
                    "isMeasurement": true
                },
                "mode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The mode of the conversation summary.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattriggerSummarizeFailed": {
                "owner": "roblourens",
                "comment": "Tracks when triggering summarization failed - for example, a summary was created but not applied successfully.",
                "errorkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The success state or failure reason of the summarization."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model ID used for the summarization."
                }
            },
            "GitHub.copilot-chattoolCalling.invalidToolMessages": {
                "owner": "roblourens",
                "comment": "Provides info about invalid tool messages that were rendered in a prompt",
                "filterreasons": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reasons for filtering the messages."
                },
                "filtercount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of filtered messages.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeBlock.action.goTo": {
                "owner": "mjbvz",
                "comment": "Counts interactions with code blocks in chat responses",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The go to command being run."
                },
                "codeblockid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique hash of the code block."
                }
            },
            "GitHub.copilot-chatpanel.edit.codeblocks": {
                "owner": "joyceerhl",
                "comment": "Records information about the proposed edit codeblocks in an editing session",
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the current chat conversation."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request succeeded or failed."
                },
                "workingsetcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of entries in the working set",
                    "isMeasurement": true
                },
                "uniquecodeblockuricount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of unique code block URIs",
                    "isMeasurement": true
                },
                "codeblockcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of code blocks in the response",
                    "isMeasurement": true
                },
                "codeblockwithuricount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of code blocks that had URIs",
                    "isMeasurement": true
                },
                "codeblockwithelidedcodecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of code blocks that had a ...existing code... comment",
                    "isMeasurement": true
                },
                "shellcodeblockcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of shell code blocks in the response",
                    "isMeasurement": true
                },
                "shellcodeblockwithuricount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of shell code blocks that had URIs",
                    "isMeasurement": true
                },
                "shellcodeblockwithelidedcodecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of shell code blocks that had a ...existing code... comment",
                    "isMeasurement": true
                },
                "editstepcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of edit steps in the session so far",
                    "isMeasurement": true
                },
                "sessionduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time since the session started",
                    "isMeasurement": true
                },
                "intentid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the intent being executed"
                }
            },
            "GitHub.copilot-chateditCodeIntent.promptRender": {
                "owner": "roblourens",
                "comment": "Understanding the performance of the edit code intent rendering",
                "promptrenderdurationincludingrunningtools": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of the prompt rendering, includes running tools",
                    "isMeasurement": true
                },
                "isagentmode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the prompt was for agent mode",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatintent.fixTestFailure.actioned": {
                "owner": "connor4312",
                "comment": "Reports when we show a ",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Where the action was taken"
                }
            },
            "GitHub.copilot-chatlanguagemodelrequest": {
                "owner": "jrieken",
                "comment": "Data about extensions using the language model",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is being used"
                },
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension identifier for which we make the request"
                },
                "extensionversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension version for which we make the request"
                },
                "tokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tokens",
                    "isMeasurement": true
                },
                "tokenlimit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tokens that can be used",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatpanel.action.copy": {
                "owner": "digitarald",
                "comment": "Counts copied code blocks from a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "codeblockindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Index of the code block in the response.",
                    "isMeasurement": true
                },
                "copytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the copy was done via the context menu or the toolbar.",
                    "isMeasurement": true
                },
                "charactercount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of characters copied.",
                    "isMeasurement": true
                },
                "linecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of lines copied.",
                    "isMeasurement": true
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                }
            },
            "GitHub.copilot-chatpanel.action.insert": {
                "owner": "digitarald",
                "comment": "Counts inserts on a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "codeblockindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Index of the code block in the response.",
                    "isMeasurement": true
                },
                "charactercount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of characters copied.",
                    "isMeasurement": true
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                },
                "newfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the insert was done in a new file.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatpanel.action.runinterminal": {
                "owner": "digitarald",
                "comment": "Counts generic actions on a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "blocklanguage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the code block in the response."
                },
                "codeblockindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Index of the code block in the response.",
                    "isMeasurement": true
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                }
            },
            "GitHub.copilot-chatpanel.action.followup": {
                "owner": "digitarald",
                "comment": "Counts generic actions on a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the message request that is being followed-up."
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                }
            },
            "GitHub.copilot-chatpanel.edit.feedback": {
                "owner": "joyceerhl",
                "comment": "Counts accept/reject actions for a proposed edit from panel chat",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the message request that is being followed-up."
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The user decision taken for the edited file"
                },
                "hasremainingedits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there are additional unactioned edits in the file."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook.",
                    "isMeasurement": true
                },
                "isnotebookcell": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook cell.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatpanel.action.vote": {
                "owner": "digitarald",
                "comment": "Counts votes on a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "direction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the vote was positive or negative.",
                    "isMeasurement": true
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Preset value for why the user found the response unhelpful."
                }
            },
            "GitHub.copilot-chatinline.action.vote": {
                "owner": "digitarald",
                "comment": "Metadata about votes on inline code conversations",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "replytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How response is shown in the interface."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the inline assistant conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Preset value for why the user found the response unhelpful."
                },
                "vote": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user found the response helpful.",
                    "isMeasurement": true
                },
                "selectionlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the current selection.",
                    "isMeasurement": true
                },
                "wholerangelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the expanded whole range.",
                    "isMeasurement": true
                },
                "editcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many edits are suggested.",
                    "isMeasurement": true
                },
                "editlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in all suggested edits.",
                    "isMeasurement": true
                },
                "problemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current code.",
                    "isMeasurement": true
                },
                "selectionproblemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current selected code.",
                    "isMeasurement": true
                },
                "diagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current code.",
                    "isMeasurement": true
                },
                "selectiondiagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current selected code.",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatinline.done": {
                "owner": "digitarald",
                "comment": "Metadata about an inline code suggestion being accepted or undone",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "replytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How response is shown in the interface."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the inline assistant conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "accepted": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user accepted the suggested code or discarded it.",
                    "isMeasurement": true
                },
                "selectionlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the current selection.",
                    "isMeasurement": true
                },
                "wholerangelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the expanded whole range.",
                    "isMeasurement": true
                },
                "editcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many edits are suggested.",
                    "isMeasurement": true
                },
                "editlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in all suggested edits.",
                    "isMeasurement": true
                },
                "problemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current code.",
                    "isMeasurement": true
                },
                "selectionproblemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current selected code.",
                    "isMeasurement": true
                },
                "diagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current code.",
                    "isMeasurement": true
                },
                "selectiondiagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current code.",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatinline.trackEditSurvival": {
                "owner": "hediet",
                "comment": "Tracks how much percent of the AI edits surived after 5 minutes of accepting",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "replytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How response is shown in the interface."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the inline assistant conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "selectionlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the current selection.",
                    "isMeasurement": true
                },
                "wholerangelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the expanded whole range.",
                    "isMeasurement": true
                },
                "editcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many edits are suggested.",
                    "isMeasurement": true
                },
                "editlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in all suggested edits.",
                    "isMeasurement": true
                },
                "problemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current code.",
                    "isMeasurement": true
                },
                "selectionproblemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current selected code.",
                    "isMeasurement": true
                },
                "diagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current code.",
                    "isMeasurement": true
                },
                "selectiondiagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current selected code.",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcopilot.search.feedback": {
                "owner": "osortega",
                "comment": "Feedback telemetry for copilot search",
                "kind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Feedback provided by the user."
                },
                "chunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of copilot search code chunks.",
                    "isMeasurement": true
                },
                "rankresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of the copilot search ranking."
                },
                "rankresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of the results from copilot search ranking.",
                    "isMeasurement": true
                },
                "combinedresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of combined results from copilot search.",
                    "isMeasurement": true
                },
                "chunksearchduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the chunk search",
                    "isMeasurement": true
                },
                "llmfilteringduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the LLM filtering",
                    "isMeasurement": true
                },
                "strategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates the strategy used for the search."
                }
            },
            "GitHub.copilot-chatreportInlineEditSurvivalRate": {
                "owner": "hediet",
                "comment": "Reports the survival rate for an inline edit.",
                "opportunityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique identifier for an opportunity to show an NES."
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "arc": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The accepted and restrained character count.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chateditSourceTracker.stats": {
                "owner": "hediet",
                "comment": "Reports distribution of AI vs user edited characters.",
                "mode": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "longterm or 5minWindow"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language id of the document."
                },
                "statsuuid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The unique identifier for the telemetry event."
                },
                "nesmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of nes modified characters",
                    "isMeasurement": true
                },
                "inlinecompletionscopilotmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of inline completions copilot modified characters",
                    "isMeasurement": true
                },
                "inlinecompletionsnesmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of inline completions nes modified characters",
                    "isMeasurement": true
                },
                "otheraimodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of other AI modified characters",
                    "isMeasurement": true
                },
                "unknownmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of unknown modified characters",
                    "isMeasurement": true
                },
                "usermodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of user modified characters",
                    "isMeasurement": true
                },
                "idemodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of IDE modified characters",
                    "isMeasurement": true
                },
                "totalmodifiedcharacters": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Total modified characters",
                    "isMeasurement": true
                },
                "istrackedbygit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the document is tracked by git."
                }
            },
            "GitHub.copilot-chateditSourceTracker.details": {
                "owner": "hediet",
                "comment": "Reports distribution of various edit kinds.",
                "reasonkey": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The reason for the edit."
                },
                "mode": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "longterm or 5minWindow"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language id of the document."
                },
                "statsuuid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The unique identifier for the telemetry event."
                },
                "modifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of nes modified characters",
                    "isMeasurement": true
                },
                "totalmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Total number of characters",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreportInlineEditArc": {
                "owner": "hediet",
                "comment": "Reports the accepted and retained character count for an inline completion/edit.",
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension id (copilot or copilot-chat), which provided this inline completion."
                },
                "opportunityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique identifier for an opportunity to show an inline completion or NES."
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "arc": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The accepted and restrained character count.",
                    "isMeasurement": true
                },
                "originalcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The original character count before any edits.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatprovideInlineEdit": {
                "owner": "ulugbekna",
                "comment": "Telemetry for inline edit (NES) provided",
                "opportunityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique identifier for an opportunity to show an NES."
                },
                "headerrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique identifier of the network request which is also included in the fetch request header."
                },
                "providerid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "NES provider identifier (StatelessNextEditProvider)"
                },
                "documentshorteningstrategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Document shortening strategy, eg clipping or summarization"
                },
                "activedocumentlanguageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "LanguageId of the active document"
                },
                "acceptance": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "User acceptance of the edit"
                },
                "disposalreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason for disposal of NES"
                },
                "supersededbyopportunityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "UUID of the opportunity that superseded this edit"
                },
                "endpoint": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Endpoint for the request"
                },
                "nonexteditreasonkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason kind for no next edit"
                },
                "nonexteditreasonmessage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason message for no next edit"
                },
                "fetchresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Fetch result"
                },
                "fetcherror": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Fetch error message"
                },
                "pickednes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request had picked NES"
                },
                "diagnostictype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Type of diagnostics"
                },
                "diagnosticdroppedreasons": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reasons for dropping diagnostics NES suggestions"
                },
                "requestn": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Request number",
                    "isMeasurement": true
                },
                "hadstatelessnexteditprovidercall": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request had a stateless next edit provider call",
                    "isMeasurement": true
                },
                "statelessnexteditproviderduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of stateless next edit provider",
                    "isMeasurement": true
                },
                "nexteditproviderduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of next edit provider",
                    "isMeasurement": true
                },
                "isfromcache": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the edit was provided from cache",
                    "isMeasurement": true
                },
                "subsequenteditorder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Order of the subsequent edit",
                    "isMeasurement": true
                },
                "activedocumentoriginallinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of lines in the active document before shortening",
                    "isMeasurement": true
                },
                "activedocumentshortenedlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of lines in the active document after shortening",
                    "isMeasurement": true
                },
                "waspreviouslyrejected": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the edit was previously rejected",
                    "isMeasurement": true
                },
                "isshown": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the edit was shown",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook",
                    "isMeasurement": true
                },
                "logprobthreshold": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Log probability threshold for the edit",
                    "isMeasurement": true
                },
                "documentscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of documents",
                    "isMeasurement": true
                },
                "editscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of edits",
                    "isMeasurement": true
                },
                "activedocumenteditscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of edits in the active document",
                    "isMeasurement": true
                },
                "promptlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of lines in the prompt",
                    "isMeasurement": true
                },
                "promptcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of characters in the prompt",
                    "isMeasurement": true
                },
                "hadlowlogprobsuggestion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the suggestion had low log probability",
                    "isMeasurement": true
                },
                "neditssuggested": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of edits suggested",
                    "isMeasurement": true
                },
                "hasnextedit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there is a next edit",
                    "isMeasurement": true
                },
                "nexteditlogprob": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Log probability of the next edit",
                    "isMeasurement": true
                },
                "linedistancetomostrecentedit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Line distance to most recent edit",
                    "isMeasurement": true
                },
                "debouncetime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Debounce time",
                    "isMeasurement": true
                },
                "artificialdelay": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Artificial delay (aka backoff) on the response based on previous user acceptance/rejection in milliseconds",
                    "isMeasurement": true
                },
                "fetchstartedafterms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time from inline edit provider invocation to fetch init",
                    "isMeasurement": true
                },
                "ttft": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "fetchtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time from fetch init to end of stream",
                    "isMeasurement": true
                },
                "prompttokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prompt",
                    "isMeasurement": true
                },
                "responsetokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the response",
                    "isMeasurement": true
                },
                "cachedtokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cached tokens in the response",
                    "isMeasurement": true
                },
                "acceptedpredictiontokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prediction that appeared in the completion",
                    "isMeasurement": true
                },
                "rejectedpredictiontokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prediction that appeared in the completion",
                    "isMeasurement": true
                },
                "haddiagnosticsnes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request had diagnostics NES",
                    "isMeasurement": true
                },
                "hadllmnes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request had LLM NES",
                    "isMeasurement": true
                },
                "configisdiagnosticsnesenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether diagnostics NES is enabled",
                    "isMeasurement": true
                },
                "isnaturallanguagedominated": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the context is dominated by natural language",
                    "isMeasurement": true
                },
                "diagnostichasexistingsamefileimport": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the diagnostic has an existing same file import",
                    "isMeasurement": true
                },
                "diagnosticislocalimport": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the diagnostic is a local import",
                    "isMeasurement": true
                },
                "diagnosticalternativeimportscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of alternative imports for the diagnostic",
                    "isMeasurement": true
                },
                "diagnosticdistancetounknowndiagnostic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Distance to the unknown diagnostic",
                    "isMeasurement": true
                },
                "diagnosticdistancetoalternativediagnostic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Distance to the alternative diagnostic",
                    "isMeasurement": true
                },
                "diagnostichasalternativediagnosticforsamerange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there is an alternative diagnostic for the same range",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatvscode.contentChangeForUnknownDocument": {
                "owner": "hediet",
                "comment": "Telemetry for verifying VSCode content change API consistency"
            },
            "GitHub.copilot-chatvscode.contentChangeInconsistencyDetected": {
                "owner": "hediet",
                "comment": "Telemetry for verifying VSCode content change API consistency",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Scheme of the currently open document."
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.speculative": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                },
                "originalrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The original request id for which this is a speculative request"
                },
                "numberofitems": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of items in the speculative request",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.ok": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                },
                "filesize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The size of the file",
                    "isMeasurement": true
                },
                "completioncontext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Kind of completion context"
                },
                "nodepath": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The syntax kind path to the AST node the position resolved to."
                },
                "cancelled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request got cancelled on the client side"
                },
                "timedout": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request timed out on the server side"
                },
                "servertime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time taken on the server side",
                    "isMeasurement": true
                },
                "contextcomputetime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time taken on the server side to compute the context",
                    "isMeasurement": true
                },
                "timetaken": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time taken to provide the completion",
                    "isMeasurement": true
                },
                "tokenbudgetexhausted": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the token budget was exhausted"
                },
                "blueprints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of blueprints",
                    "isMeasurement": true
                },
                "signatures": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of signatures",
                    "isMeasurement": true
                },
                "superclasses": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of super classes",
                    "isMeasurement": true
                },
                "generalscopes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of general scopes",
                    "isMeasurement": true
                },
                "completions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of traditional completion scopes",
                    "isMeasurement": true
                },
                "neighborfiles": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of neighbor files",
                    "isMeasurement": true
                },
                "module": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of modules",
                    "isMeasurement": true
                },
                "moduleresolution": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of moduleResolutions",
                    "isMeasurement": true
                },
                "lib": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of libs",
                    "isMeasurement": true
                },
                "target": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of targets",
                    "isMeasurement": true
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of versions",
                    "isMeasurement": true
                },
                "totalsize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total size of all context items",
                    "isMeasurement": true
                },
                "items": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Detailed information about each context item delivered."
                },
                "cachehits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cache hits",
                    "isMeasurement": true
                },
                "isspeculative": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was speculative"
                },
                "beforecachestate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The cache state before the request was sent"
                },
                "aftercachestate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The cache state after the request was sent"
                },
                "cacheditemsforspeculativerequest": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was cached for a speculative request",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.error": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context errors",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                },
                "code": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The failure code",
                    "isMeasurement": true
                },
                "message": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure message"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.on-timeout": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context on timeout",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "items": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Detailed information about each context item delivered."
                },
                "blueprints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of blueprints",
                    "isMeasurement": true
                },
                "signatures": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of signatures",
                    "isMeasurement": true
                },
                "superclasses": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of super classes",
                    "isMeasurement": true
                },
                "generalscopes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of general scopes",
                    "isMeasurement": true
                },
                "completions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of traditional completion scopes",
                    "isMeasurement": true
                },
                "neighborfiles": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of neighbor files",
                    "isMeasurement": true
                },
                "module": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of modules",
                    "isMeasurement": true
                },
                "moduleresolution": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of moduleResolutions",
                    "isMeasurement": true
                },
                "lib": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of libs",
                    "isMeasurement": true
                },
                "target": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of targets",
                    "isMeasurement": true
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of versions",
                    "isMeasurement": true
                },
                "totalsize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total size of all context items",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.failed": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context in failure case",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                },
                "code:": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The failure code"
                },
                "message": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure message"
                },
                "stack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure stack"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.cancelled": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context in cancellation case",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.activation.ok": {
                "owner": "dirkb",
                "comment": "Telemetry for TypeScript server plugin",
                "session": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the TypeScript server had a session"
                },
                "supported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the TypeScript server version is supported"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The version of the TypeScript server"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.activation.failed": {
                "owner": "dirkb",
                "comment": "Telemetry for TypeScript server plugin",
                "location": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The location of the failure"
                },
                "part": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The part that errored"
                },
                "message": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure message"
                },
                "stack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure stack"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The version"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.activation.unknown-ping-response": {
                "owner": "dirkb",
                "comment": "Telemetry for TypeScript server plugin",
                "location": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The location of the failure"
                },
                "part": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The part that errored"
                },
                "response": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The response literal"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.integration.failed": {
                "owner": "dirkb",
                "comment": "Telemetry for Copilot inline chat integration.",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "document": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The document for which the integration failed"
                },
                "versionmismatch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The version mismatch"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.inline-completion-provider.registered": {
                "owner": "dirkb",
                "comment": "Telemetry for Copilot inline completions",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.inline-completion-provider.unregistered": {
                "owner": "dirkb",
                "comment": "Telemetry for Copilot inline completions",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                }
            },
            "GitHub.copilot-chatdebugSessionStart": {
                "owner": "connor4312",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "breakpointcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "exceptionbreakpoints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "watchexpressionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "extensionname": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight"
                },
                "isbuiltin": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "launchjsonexists": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatdebugSessionStop": {
                "owner": "connor4312",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "success": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "sessionlengthinseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "breakpointcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "watchexpressionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkbenchActionExecuted": {},
            "GitHub.copilot-chatcommandCenter.chatInstall": {
                "owner": "bpasero",
                "comment": "Provides insight into chat installation.",
                "installresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the extension was installed successfully, cancelled or failed to install."
                },
                "installduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The duration it took to install the extension.",
                    "isMeasurement": true
                },
                "signuperrorcode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The error code in case of an error signing up."
                }
            },
            "GitHub.copilot-chatinteractiveEditor/session": {
                "owner": "jrieken",
                "comment": "Data about an interaction editor session",
                "extension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension providing the data"
                },
                "rounds": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of request that were made"
                },
                "undos": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Requests that have been undone"
                },
                "edits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Did edits happen while the session was active"
                },
                "terminaledits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Did edits terminal the session",
                    "isMeasurement": true
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "When the session started"
                },
                "endtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "When the session ended"
                }
            },
            "GitHub.copilot-chatnotebook/editorOpened": {
                "owner": "rebornix",
                "comment": "Identify the notebook editor view type",
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File system provider scheme for the resource"
                },
                "ext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File extension for the resource"
                },
                "viewtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "View type of the notebook editor"
                },
                "isrepl": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the notebook editor is within a REPL editor",
                    "isMeasurement": true
                }
            }
        },
        "commonProperties": {
            "common.tid": {
                "classification": "EndUserPseudonymizedInformation",
                "purpose": "BusinessInsight"
            },
            "common.sku": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight"
            },
            "common.internal": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "isMeasurement": true
            }
        }
    },
    "github.copilot-chat-0.29.2025070102": {
        "events": {
            "GitHub.copilot-chattoken": {
                "owner": "digitarald",
                "comment": "Copilot token received from the service.",
                "chatenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the token enabled chat.",
                    "isMeasurement": true
                },
                "snippyenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the block setting for public suggestions is enabled.",
                    "isMeasurement": true
                },
                "telemetryenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the subscription has telemetry enabled.",
                    "isMeasurement": true
                },
                "mcpenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the token has MCP features enabled.",
                    "isMeasurement": true
                },
                "previewenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the token has editor preview features enabled.",
                    "isMeasurement": true
                },
                "reviewenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the token has Copilot code review features enabled.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatquery-expfeature": {
                "abexp.queriedfeature": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "GitHub.copilot-chatcall-tas-error": {
                "errortype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "GitHub.copilot-chatembedding.error": {
                "owner": "digitarald",
                "comment": "Tracks errors for embedding requests",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Error type"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Detailed error reason"
                }
            },
            "GitHub.copilot-chatembedding.success": {
                "owner": "digitarald",
                "comment": "Performance data for embedding requests",
                "inputtokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The number of tokens in the input.",
                    "isMeasurement": true
                },
                "batchsize": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The number of inputs sent over.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatnotebook.editGeneration": {
                "owner": "donjayamanne",
                "comment": "Metadata about the code mapper request",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "requestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from where the request was made"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Model selection for the response"
                },
                "inputformat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Input format for the notebook source (xml, json, text)"
                },
                "isemptynotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the notebook is empty",
                    "isMeasurement": true
                },
                "isnotebookoruri": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether we're given a notebook or just a uri (1 = Notebook, 0 = Uri)",
                    "isMeasurement": true
                },
                "isjupyternotebookuri": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether we're given a Jupyter notebook or just a uri (1 = Jupyter Notebook, 0 = Other)",
                    "isMeasurement": true
                },
                "iseditemitted": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether a Notebook edit was emitted (insert or delete cell) (1 = Yes, 0 = No)",
                    "isMeasurement": true
                },
                "iscelltexteditemitted": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether an edit was emitted for a cell (1 = Yes, 0 = No)",
                    "isMeasurement": true
                },
                "sourcelength": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of lines in the source code from which we're to generate edits",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfChunkSearch.perf.searchSubsetOfFiles": {
                "owner": "mjbvz",
                "comment": "Total time for searchSubsetOfFiles to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "files": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files being searched",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfChunkSearch.perf.tfidfSearch": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "filecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files in the index",
                    "isMeasurement": true
                },
                "updatedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files updated for this search",
                    "isMeasurement": true
                },
                "updatetime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that updating of the index took",
                    "isMeasurement": true
                },
                "searchtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that searching the index took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfidfChunkSearch.perf.initializeTfidf": {
                "owner": "mjbvz",
                "comment": "Understanding how long it took to initialize the tfidf index",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "filecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that we can index",
                    "isMeasurement": true
                },
                "newfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of new files",
                    "isMeasurement": true
                },
                "outofsyncfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that are out of sync",
                    "isMeasurement": true
                },
                "deletedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that have been deleted",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkIndex.initialize": {
                "owner": "mjbvz",
                "comment": "Information about successful code searches",
                "totalfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files we can index",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.triggerIndexingOfWorkspace": {
                "owner": "mjbvz",
                "comment": "Total time for triggerIndexingOfWorkspace to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What triggered the call"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.searchWorkspace": {
                "owner": "mjbvz",
                "comment": "Total time for searchWorkspace to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.searchSubsetOfFiles": {
                "owner": "mjbvz",
                "comment": "Total time for searchSubsetOfFiles to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.toSemanticChunks.noSemanticChunkFound": {
                "owner": "mjbvz",
                "comment": "Tracks errors related to mapping to semantic chunks",
                "extname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The file's extension"
                },
                "semanticchunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of semantic chunks returned",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.getAllWorkspaceEmbeddings": {
                "owner": "mjbvz",
                "comment": "Total time for getAllWorkspaceEmbeddings to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "totalfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files we have in the workspace",
                    "isMeasurement": true
                },
                "recomputedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files that were not in the cache",
                    "isMeasurement": true
                },
                "recomputedtotalcontentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total length of text for recomputed files",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.perf.getEmbeddingsForFiles": {
                "owner": "mjbvz",
                "comment": "Total time for getEmbeddingsForFiles to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "totalfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files we are searching",
                    "isMeasurement": true
                },
                "recomputedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files that were not in the cache",
                    "isMeasurement": true
                },
                "recomputedtotalcontentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total length of text for recomputed files",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatembeddingsChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatembeddingsChunkSearch.perf.searchSubsetOfFiles": {
                "owner": "mjbvz",
                "comment": "Total time for searchSubsetOfFiles to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatfullWorkspaceChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "failurereason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "why did we fail"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkSearchStrategy": {
                "owner": "mjbvz",
                "comment": "Understanding which workspace chunk search strategy is used",
                "strategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The chosen strategy"
                },
                "errordiagmessage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The reason why the search failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total time in ms for workspace chunk search",
                    "isMeasurement": true
                },
                "workspaceindexfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files in our workspace index",
                    "isMeasurement": true
                },
                "wasfirstsearchinworkspace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tracks if this was the first time we triggered a workspace search",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkSearch.perf.adaRerank": {
                "owner": "mjbvz",
                "comment": "Understanding how effective ADA re-ranking is",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubAvailableEmbeddingTypes.getAvailableTypes.error": {
                "owner": "mjbvz",
                "comment": "Information about failed githubAvailableEmbeddingTypes calls",
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubAvailableEmbeddingTypes.getAvailableTypes.success": {
                "owner": "mjbvz",
                "comment": "Information about successful githubAvailableEmbeddingTypes calls",
                "primaryembeddingtypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "List of primary embedding types"
                },
                "deprecatedembeddingtypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "List of deprecated embedding types"
                }
            },
            "GitHub.copilot-chattfIdfWithSemanticChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattfIdfWithSemanticChunkSearch.perf.toSemanticChunks": {
                "owner": "mjbvz",
                "comment": "Time for the toSemantic part of searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.isAvailable": {
                "owner": "mjbvz",
                "comment": "Metadata about the code search availability check",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "unavailablereason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "repostatues": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Detailed info about the statues of the repos in the workspace"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How long the check too to complete",
                    "isMeasurement": true
                },
                "indexedrepocount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of indexed repositories",
                    "isMeasurement": true
                },
                "notyetindexedrepocount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that have not yet been indexed",
                    "isMeasurement": true
                },
                "indexedrepolocation.workspace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that map exactly to a workspace folder",
                    "isMeasurement": true
                },
                "indexedrepolocation.parent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that map to a parent folder",
                    "isMeasurement": true
                },
                "indexedrepolocation.sub": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that map to a sub-folder",
                    "isMeasurement": true
                },
                "indexedrepolocation.unknown": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories that map to an unknown folder",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.search.success": {
                "owner": "mjbvz",
                "comment": "Information about successful code searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "diffsearchstrategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Search strategy for the diff"
                },
                "chunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of returned chunks just from code search",
                    "isMeasurement": true
                },
                "locallychangedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files that are different than the code search index",
                    "isMeasurement": true
                },
                "codesearchoutofsync": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tracks if the local commit we think code search has indexed matches what code search actually has indexed",
                    "isMeasurement": true
                },
                "embeddingsrecomputedfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that needed to have their embeddings recomputed. Only logged when embeddings search is used",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.perf.searchFileChunks": {
                "owner": "mjbvz",
                "comment": "Total time for searchFileChunks to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.perf.doCodeSearchWithRetry": {
                "owner": "mjbvz",
                "comment": "Total time for doCodeSearch to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.perf.tryToInstantIndexRepo": {
                "owner": "mjbvz",
                "comment": "Total time for instant indexing to complete",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "startrepostatus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Initial status of the repo"
                },
                "endrepostatus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Final status of the repo"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchChunkSearch.triggerRemoteIndexing": {
                "owner": "mjbvz",
                "comment": "Triggers of remote indexing",
                "triggerreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How the call was triggered"
                },
                "error": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How the trigger call failed"
                }
            },
            "GitHub.copilot-chatnesStatusOnActivation": {
                "owner": "ulugbekna",
                "comment": "To identify if NES was enabled by the user when extension is activated",
                "iscompletionsenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether ghost-text completions was effectively enabled",
                    "isMeasurement": true
                },
                "iscompletionsuserconfigured": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether ghost-text completions was configured by the user",
                    "isMeasurement": true
                },
                "isnesenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether NES was effectively enabled (e.g., by nes-by-default exp)",
                    "isMeasurement": true
                },
                "isnesuserconfigured": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the Inline Edits feature is configured by the user",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattokenizer.stats": {
                "owner": "jrieken",
                "comment": "Perf stats about tokenizers",
                "callcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How often tokenize was called",
                    "isMeasurement": true
                },
                "encodeduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Average time encode took",
                    "isMeasurement": true
                },
                "textlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Average length of text that got encoded",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceChunkEmbeddingsIndex.computeChunksAndEmbeddings.error": {
                "owner": "mjbvz",
                "comment": "Tracks errors from the chunks service",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of computeChunksAndEmbeddings"
                },
                "responsestatus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatsurvey.show": {
                "owner": "digitarald",
                "comment": "Measures survey notification result",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The last used feature before the survey."
                },
                "language": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The last used editor language before the survey."
                },
                "activedays": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of days the user has used the extension.",
                    "isMeasurement": true
                },
                "firstactive": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of days since the user first used the extension.",
                    "isMeasurement": true
                },
                "surveytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of survey being prompted."
                }
            },
            "GitHub.copilot-chatsurvey.action": {
                "owner": "digitarald",
                "comment": "Measures survey notification result",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the survey prompt."
                },
                "language": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The last used editor language before the survey."
                },
                "selection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The user's selection."
                },
                "surveytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of survey being prompted."
                }
            },
            "GitHub.copilot-chatcodeSearchRepoTracker.openGitRepo.error.noCurrentRepo": {
                "owner": "mjbvz",
                "comment": "Information about errors when trying to resolve a remote"
            },
            "GitHub.copilot-chatcodeSearchRepoTracker.openGitRepo.remoteInfo": {
                "owner": "mjbvz",
                "comment": "Information about the remote",
                "resolvedremotetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Identifies the primary remote's type ",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcodeSearchRepoTracker.openGitRepo.error.couldNotResolveRemote": {
                "owner": "mjbvz",
                "comment": "Information about errors when trying to resolve a remote",
                "reporemotefetchurlscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of remote fetch urls on the git repo",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatadoCodeSearch.searchRepo.error": {
                "owner": "mjbvz",
                "comment": "Information about failed code ado searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatadoCodeSearch.searchRepo.success": {
                "owner": "mjbvz",
                "comment": "Information about successful ado code search searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "resultcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of returned chunks from the search",
                    "isMeasurement": true
                },
                "resultoutofsync": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tracks if the commit we think code search has indexed matches the commit code search returns results from",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.getRemoteIndexState.error": {
                "owner": "mjbvz",
                "comment": "Information about failed remote index state requests",
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.triggerIndexing.error": {
                "owner": "mjbvz",
                "comment": "Information about failed trigger indexing requests",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "triggerreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason why the indexing was triggered"
                },
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.getRemoteIndexState.success": {
                "owner": "mjbvz",
                "comment": "Information about failed remote index state requests",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "triggerreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason why the indexing was triggered"
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.searchRepo.error": {
                "owner": "mjbvz",
                "comment": "Information about failed code searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The response status code",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgithubCodeSearch.searchRepo.success": {
                "owner": "mjbvz",
                "comment": "Information about successful code searches",
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "resultcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of returned chunks from the search",
                    "isMeasurement": true
                },
                "resultoutofsync": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tracks if the commit we think code search has indexed matches the commit code search returns results from",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatonboardDebug.commandExecuted": {
                "owner": "connor4312",
                "comment": "Reports usages of the copilot-debug command",
                "binary": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Binary executed with the command"
                }
            },
            "GitHub.copilot-chatonboardDebug.configGenerated": {
                "owner": "connor4312",
                "comment": "Reports usages of the copilot-debug command",
                "binary": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Binary executed with the command"
                },
                "debugtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Debug type generated"
                },
                "configgenerated": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether a config was generated",
                    "isMeasurement": true
                },
                "configtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "GitHub.copilot-chateditSourceTracker.stats": {
                "owner": "hediet",
                "comment": "Reports distribution of AI vs user edited characters.",
                "mode": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "longterm or 5minWindow"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language id of the document."
                },
                "statsuuid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The unique identifier for the telemetry event."
                },
                "nesmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of nes modified characters",
                    "isMeasurement": true
                },
                "inlinecompletionscopilotmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of inline completions copilot modified characters",
                    "isMeasurement": true
                },
                "inlinecompletionsnesmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of inline completions nes modified characters",
                    "isMeasurement": true
                },
                "otheraimodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of other AI modified characters",
                    "isMeasurement": true
                },
                "unknownmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of unknown modified characters",
                    "isMeasurement": true
                },
                "usermodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of user modified characters",
                    "isMeasurement": true
                },
                "idemodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of IDE modified characters",
                    "isMeasurement": true
                },
                "totalmodifiedcharacters": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Total modified characters",
                    "isMeasurement": true
                },
                "istrackedbygit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the document is tracked by git."
                }
            },
            "GitHub.copilot-chateditSourceTracker.details": {
                "owner": "hediet",
                "comment": "Reports distribution of various edit kinds.",
                "reasonkey": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The reason for the edit."
                },
                "mode": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "longterm or 5minWindow"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language id of the document."
                },
                "statsuuid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The unique identifier for the telemetry event."
                },
                "modifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Fraction of nes modified characters",
                    "isMeasurement": true
                },
                "totalmodifiedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Total number of characters",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreportInlineEditArc": {
                "owner": "hediet",
                "comment": "Reports the accepted and retained character count for an inline completion/edit.",
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension id (copilot or copilot-chat), which provided this inline completion."
                },
                "opportunityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique identifier for an opportunity to show an inline completion or NES."
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "arc": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The accepted and restrained character count.",
                    "isMeasurement": true
                },
                "originalcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The original character count before any edits.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreportInlineEditSurvivalRate": {
                "owner": "hediet",
                "comment": "Reports the survival rate for an inline edit.",
                "opportunityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique identifier for an opportunity to show an NES."
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "arc": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The accepted and restrained character count.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatvscode.contentChangeForUnknownDocument": {
                "owner": "hediet",
                "comment": "Telemetry for verifying VSCode content change API consistency"
            },
            "GitHub.copilot-chatvscode.contentChangeInconsistencyDetected": {
                "owner": "hediet",
                "comment": "Telemetry for verifying VSCode content change API consistency",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Scheme of the currently open document."
                }
            },
            "GitHub.copilot-chatcookbook.accessed": {
                "owner": "luabud",
                "comment": "Reports when a cookbook entry is accessed for a diagnostic.",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "diagnosticcode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The diagnostic code accessed in the cookbook."
                },
                "provider": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The tool which is the diagnostic provider."
                }
            },
            "GitHub.copilot-chatspeculation.response.success": {
                "owner": "alexdima",
                "comment": "Report quality details for a successful speculative response.",
                "chatrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "chatrequestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source of the current turn request"
                },
                "isnoopedit": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the response text is identical to the speculation."
                },
                "speculationrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "containselidedcodecomments": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the response text contains elided code comments."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The model used for this speculation request"
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens",
                    "isMeasurement": true
                },
                "speculationtokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of speculation tokens",
                    "isMeasurement": true
                },
                "responsetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of response tokens",
                    "isMeasurement": true
                },
                "addedlines": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of lines added",
                    "isMeasurement": true
                },
                "removedlines": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of lines removed",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether this is a notebook",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to complete the request",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatspeculation.response.error": {
                "owner": "alexdima",
                "comment": "Report quality issue for when a speculative response failed.",
                "errormessage": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the error"
                },
                "chatrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "speculationrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the speculation request"
                },
                "chatrequestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source of the current turn request"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The model used for this speculation request"
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens",
                    "isMeasurement": true
                },
                "speculationtokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of speculation tokens",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether this is a notebook",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatspeculation.response.loop": {
                "owner": "joyceerhl",
                "comment": "Report when the model appears to have gone into a loop.",
                "hasloop": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the model appears to have gone into a loop."
                },
                "speculationrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The language id of the document"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The model used for this speculation request"
                },
                "documentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Length of original file",
                    "isMeasurement": true
                },
                "rewrittenlength": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Length of original file",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatprompt.invalidreference": {
                "owner": "jrieken",
                "comment": "Tracks bad prompt references",
                "stack": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Error stack"
                }
            },
            "GitHub.copilot-chattoolInvoke": {
                "owner": "donjayamanne",
                "comment": "Details about invocation of tools",
                "validateoutcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The outcome of the tool input validation. valid, invalid and unknown"
                },
                "invokeoutcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The outcome of the tool Invokcation. invalidInput, disabledByUser, success, error, cancelled"
                },
                "toolname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the tool being invoked."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                }
            },
            "GitHub.copilot-chatagent.tool.responseLength": {
                "owner": "connor4312",
                "comment": "Counts the number of tokens generated by tools",
                "toolname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the tool being invoked."
                },
                "tokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of tokens used.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chateditNotebook.validation": {
                "owner": "donjayamanne",
                "comment": "Validation failure for a Edit Notebook tool invocation",
                "validationresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result of the tool input validation. valid, invalid and unknown"
                },
                "invokeoutcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result of the tool Invocation. invalidInput, disabledByUser, success, error, cancelled"
                },
                "edittype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of edit that was attempted. insert, delete, edit or unknown"
                },
                "unknownprops": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "List of unknown properties in the input"
                },
                "missingprops": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "List of missing properties in the input"
                },
                "newcodetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of code, whether its string, string[], object, object[] or unknown"
                },
                "cellid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the cell, TOP, BOTTOM, cellid, empty or unknown"
                },
                "explanation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The explanation for the edit. provided, empty and unknown"
                },
                "inputparsed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the input was parsed as JSON",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                }
            },
            "GitHub.copilot-chatsummarizedConversationHistory": {
                "owner": "roblourens",
                "comment": "Tracks when summarization happens and what the outcome was",
                "summarizationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "An ID to join all attempts of this summarization task."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The success state or failure reason of the summarization."
                },
                "detailedoutcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A more detailed error message."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model ID used for the summarization."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request ID from the summarization call."
                },
                "numrounds": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tool call rounds before this summarization was triggered.",
                    "isMeasurement": true
                },
                "numroundssincelastsummarization": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tool call rounds since the last summarization.",
                    "isMeasurement": true
                },
                "lastusedtool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the last tool used before summarization."
                },
                "isduringtoolcalling": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this summarization was triggered during a tool calling loop.",
                    "isMeasurement": true
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the current chat conversation."
                },
                "hasworkingnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the conversation summary includes a working notebook.",
                    "isMeasurement": true
                },
                "mode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The mode of the conversation summary."
                }
            },
            "GitHub.copilot-chatcodemapper.completeCodeBlock": {
                "owner": "aeschli",
                "comment": "Sent when a codemapper request is received for a complete code block that contains no ...existing code... comments."
            },
            "GitHub.copilot-chatcodemapper.request": {
                "owner": "aeschli",
                "comment": "Metadata about the code mapper request",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "requestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from where the request was made"
                },
                "mapper": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The mapper used: One of 'fast', 'fast-lora', 'full' and 'patch'"
                },
                "outcomeannotations": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Annotations about the outcome of the request."
                }
            },
            "GitHub.copilot-chatcodeMapper.trackEditSurvival": {
                "owner": "aeschli",
                "comment": "Tracks how much percent of the AI edits survived after 5 minutes of accepting",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "speculationrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the speculation request."
                },
                "requestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from where the request was made"
                },
                "chatrequestmodel": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the base chat request to generate the edit object."
                },
                "mapper": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The code mapper used: One of 'fast', 'fast-lora', 'full' and 'patch'"
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceContext.perf.prepareWorkspaceChunks": {
                "owner": "mjbvz",
                "comment": "Understanding the performance of including workspace context",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "workspacesearchsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Caller of the search"
                },
                "workspacesearchcorrelationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Correlation id for the search"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                },
                "resultchunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of chunks returned",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceContext.perf.prepare": {
                "owner": "mjbvz",
                "comment": "Understanding how effective ADA re-ranking is",
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the call succeeded or failed"
                },
                "exectime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time in milliseconds that the call took",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkspaceResolver.error": {
                "owner": "mjbvz",
                "comment": "Tracks errors for resolving workspace information",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Error type"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Detailed error reason"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                }
            },
            "GitHub.copilot-chatworkspaceResolver.success": {
                "owner": "mjbvz",
                "comment": "Tracks errors for resolving workspace information",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Success type"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "totalkeywordcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of keywords returned.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatprovideInlineEdit": {
                "owner": "ulugbekna",
                "comment": "Telemetry for inline edit (NES) provided",
                "opportunityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique identifier for an opportunity to show an NES."
                },
                "headerrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique identifier of the network request which is also included in the fetch request header."
                },
                "providerid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "NES provider identifier (StatelessNextEditProvider)"
                },
                "documentshorteningstrategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Document shortening strategy, eg clipping or summarization"
                },
                "activedocumentlanguageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "LanguageId of the active document"
                },
                "acceptance": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "User acceptance of the edit"
                },
                "disposalreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason for disposal of NES"
                },
                "supersededbyopportunityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "UUID of the opportunity that superseded this edit"
                },
                "endpoint": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Endpoint for the request"
                },
                "nonexteditreasonkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason kind for no next edit"
                },
                "nonexteditreasonmessage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason message for no next edit"
                },
                "fetchresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Fetch result"
                },
                "fetcherror": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Fetch error message"
                },
                "pickednes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request had picked NES"
                },
                "diagnostictype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Type of diagnostics"
                },
                "diagnosticdroppedreasons": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reasons for dropping diagnostics NES suggestions"
                },
                "requestn": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Request number",
                    "isMeasurement": true
                },
                "hadstatelessnexteditprovidercall": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request had a stateless next edit provider call",
                    "isMeasurement": true
                },
                "statelessnexteditproviderduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of stateless next edit provider",
                    "isMeasurement": true
                },
                "nexteditproviderduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of next edit provider",
                    "isMeasurement": true
                },
                "isfromcache": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the edit was provided from cache",
                    "isMeasurement": true
                },
                "subsequenteditorder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Order of the subsequent edit",
                    "isMeasurement": true
                },
                "activedocumentoriginallinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of lines in the active document before shortening",
                    "isMeasurement": true
                },
                "activedocumentshortenedlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of lines in the active document after shortening",
                    "isMeasurement": true
                },
                "waspreviouslyrejected": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the edit was previously rejected",
                    "isMeasurement": true
                },
                "isshown": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the edit was shown",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook",
                    "isMeasurement": true
                },
                "logprobthreshold": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Log probability threshold for the edit",
                    "isMeasurement": true
                },
                "documentscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of documents",
                    "isMeasurement": true
                },
                "editscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of edits",
                    "isMeasurement": true
                },
                "activedocumenteditscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of edits in the active document",
                    "isMeasurement": true
                },
                "promptlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of lines in the prompt",
                    "isMeasurement": true
                },
                "promptcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of characters in the prompt",
                    "isMeasurement": true
                },
                "hadlowlogprobsuggestion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the suggestion had low log probability",
                    "isMeasurement": true
                },
                "neditssuggested": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of edits suggested",
                    "isMeasurement": true
                },
                "hasnextedit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there is a next edit",
                    "isMeasurement": true
                },
                "nexteditlogprob": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Log probability of the next edit",
                    "isMeasurement": true
                },
                "linedistancetomostrecentedit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Line distance to most recent edit",
                    "isMeasurement": true
                },
                "debouncetime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Debounce time",
                    "isMeasurement": true
                },
                "artificialdelay": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Artificial delay (aka backoff) on the response based on previous user acceptance/rejection in milliseconds",
                    "isMeasurement": true
                },
                "fetchstartedafterms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time from inline edit provider invocation to fetch init",
                    "isMeasurement": true
                },
                "ttft": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "fetchtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time from fetch init to end of stream",
                    "isMeasurement": true
                },
                "prompttokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prompt",
                    "isMeasurement": true
                },
                "responsetokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the response",
                    "isMeasurement": true
                },
                "cachedtokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cached tokens in the response",
                    "isMeasurement": true
                },
                "acceptedpredictiontokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prediction that appeared in the completion",
                    "isMeasurement": true
                },
                "rejectedpredictiontokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prediction that appeared in the completion",
                    "isMeasurement": true
                },
                "haddiagnosticsnes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request had diagnostics NES",
                    "isMeasurement": true
                },
                "hadllmnes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request had LLM NES",
                    "isMeasurement": true
                },
                "configisdiagnosticsnesenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether diagnostics NES is enabled",
                    "isMeasurement": true
                },
                "isnaturallanguagedominated": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the context is dominated by natural language",
                    "isMeasurement": true
                },
                "diagnostichasexistingsamefileimport": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the diagnostic has an existing same file import",
                    "isMeasurement": true
                },
                "diagnosticislocalimport": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the diagnostic is a local import",
                    "isMeasurement": true
                },
                "diagnosticalternativeimportscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of alternative imports for the diagnostic",
                    "isMeasurement": true
                },
                "diagnosticdistancetounknowndiagnostic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Distance to the unknown diagnostic",
                    "isMeasurement": true
                },
                "diagnosticdistancetoalternativediagnostic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Distance to the alternative diagnostic",
                    "isMeasurement": true
                },
                "diagnostichasalternativediagnosticforsamerange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there is an alternative diagnostic for the same range",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatprovideRenameSuggestions": {
                "owner": "ulugbekna",
                "comment": "Telemetry for rename suggestions provided",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language ID of the document."
                },
                "cancellationreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Specify when exactly during the provider call the cancellation happened. Empty string if the cancellation didn't happen."
                },
                "fetchresulttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of a fetch to endpoint"
                },
                "replyformat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Copilot reply format: 'jsonStringArray' | 'multiJsonStringArray' | 'list' | 'unknown'"
                },
                "triggerkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Rename suggestion trigger kind - 'automatic' | 'manual'"
                },
                "promptconstructiontime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time it took to construct the prompt",
                    "isMeasurement": true
                },
                "timeelapsedbeforedelay": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time elapsed before delay starts",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Token count of the prompt",
                    "isMeasurement": true
                },
                "expecteddelaybeforefetch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Expected delay before fetch dictated by the experiment 'renameSuggestionsDelayBeforeFetch'",
                    "isMeasurement": true
                },
                "actualdelaybeforefetch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Actual delay before fetch computed as 'expectedDelay - promptComputationTime'",
                    "isMeasurement": true
                },
                "successresponsecharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Character count in model response (for response.type == 'success')",
                    "isMeasurement": true
                },
                "responseunusedcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Character count in model response that was unused, e.g., rename explanations, response format overhead",
                    "isMeasurement": true
                },
                "fetchtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time it took to fetch from endpoint",
                    "isMeasurement": true
                },
                "symbolnamescount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of suggested names",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgit.generateCommitMessageSurvival": {
                "owner": "lszomoru",
                "comment": "Tracks how much of the generated git commit message has survived",
                "attemptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many times the user has retried.",
                    "isMeasurement": true
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the suggested git commit message was used when the code change was committed.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatpanel.action.filelink": {
                "owner": "digitarald",
                "comment": "Clicks on file links in the panel response",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the chat request."
                }
            },
            "GitHub.copilot-chatpanel.action.symbollink": {
                "owner": "digitarald",
                "comment": "Clicks on symbol links in the panel response",
                "hadmatch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the symbol was found.",
                    "isMeasurement": true
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the chat request."
                }
            },
            "GitHub.copilot-chatpanel.action.openSymbolFromReferencesLink": {
                "owner": "mjbvz",
                "comment": "Clicks on symbol links in the panel response",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the chat request."
                },
                "resolveddestinationtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How the link was actually resolved."
                }
            },
            "GitHub.copilot-chatdevcontainer.generateConfig": {
                "owner": "chrmarti",
                "comment": "Metadata about the Dev Container Config generation",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result type of the response."
                },
                "templateid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The chosen template id."
                },
                "featureids": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The chosen feature ids."
                },
                "originalfilenamecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of filenames.",
                    "isMeasurement": true
                },
                "originalfilenamelength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The length of the filenames.",
                    "isMeasurement": true
                },
                "processedfilenamecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of filenames after processing.",
                    "isMeasurement": true
                },
                "processedfilenamelength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The length of the filenames after processing.",
                    "isMeasurement": true
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the request.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgit.generateCommitMessage": {
                "owner": "lszomoru",
                "comment": "Metadata about the git commit message generation",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result type of the response."
                },
                "attemptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many times the user has retried.",
                    "isMeasurement": true
                },
                "difffilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of files in the commit.",
                    "isMeasurement": true
                },
                "difflength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The length of the diffs in the commit.",
                    "isMeasurement": true
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the request.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgit.generateCommitMessageIncorrectResponseFormat": {
                "owner": "lszomoru",
                "comment": "Metadata about the git commit message generation when the response is not in the expected format",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "responseformat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of the response format."
                }
            },
            "GitHub.copilot-chatintentDetection": {
                "owner": "ulugbekna",
                "comment": "Intent detection telemetry.",
                "chatlocation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which chat (panel or inline) intent detection is used for."
                },
                "preferredintent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which intent was initially provided as preferred."
                },
                "detectedintent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Intent that was detected by Copilot"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language ID of the document for which intent detection happened."
                },
                "isrerunwithoutintentdetection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user disliked the detected intent and tried to rerun without it."
                }
            },
            "GitHub.copilot-chatresponse.cancelled": {
                "owner": "digitarald",
                "comment": "Report canceled service responses for quality.",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Model selection for the response"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source for why the request was made"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the request"
                },
                "totaltokenmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum total token window",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens",
                    "isMeasurement": true
                },
                "tokencountmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum generated tokens",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "timetocancelled": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "isvisionrequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the request was for a vision model",
                    "isMeasurement": true
                },
                "isbyok": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was for a BYOK model",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatresponse.error": {
                "owner": "digitarald",
                "comment": "Report quality issue for when a service response failed.",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Type of issue"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Reason of issue"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Model selection for the response"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source for why the request was made"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the request"
                },
                "totaltokenmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum total token window",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens",
                    "isMeasurement": true
                },
                "tokencountmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum generated tokens",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "isvisionrequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the request was for a vision model",
                    "isMeasurement": true
                },
                "isbyok": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was for a BYOK model",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatresponse.success": {
                "owner": "digitarald",
                "comment": "Report quality details for a successful service response.",
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Reason for why a response finished"
                },
                "filterreason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Reason for why a response was filtered"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Source of the initial request"
                },
                "initiatortype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was initiated by a user or an agent"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Model selection for the response"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id of the current turn request"
                },
                "totaltokenmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum total token window",
                    "isMeasurement": true
                },
                "clientprompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens, locally counted",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens, server side counted",
                    "isMeasurement": true
                },
                "promptcachetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of prompt tokens hitting cache as reported by server",
                    "isMeasurement": true
                },
                "tokencountmax": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Maximum generated tokens",
                    "isMeasurement": true
                },
                "tokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of generated tokens",
                    "isMeasurement": true
                },
                "acceptedpredictiontokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prediction that appeared in the completion",
                    "isMeasurement": true
                },
                "rejectedpredictiontokens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of tokens in the prediction that appeared in the completion",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to first token",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time to complete the request",
                    "isMeasurement": true
                },
                "isvisionrequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the request was for a vision model",
                    "isMeasurement": true
                },
                "isbyok": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was for a BYOK model",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatconversation.repetition.detected": {
                "owner": "lramos15",
                "comment": "Calculates the number of repetitions in a response. Useful for loop detection",
                "finishreason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Reason for why a response finished. Helps identify cancellation vs length limits"
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Id for this message request."
                },
                "lengthofline": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Length of the repeating line, in characters.",
                    "isMeasurement": true
                },
                "numberofrepetitions": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of times the line repeats.",
                    "isMeasurement": true
                },
                "totallines": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Number of total lines in the response.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatapplyPatch.inResponse": {
                "owner": "digitarald",
                "comment": "Metadata about an inline response from the model",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                }
            },
            "GitHub.copilot-chattoolCallDetails": {
                "owner": "roblourens",
                "comment": "Records information about tool calls during a request.",
                "intentid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the invoked intent."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the current chat conversation."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request succeeded or failed."
                },
                "numrequests": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The total number of requests made",
                    "isMeasurement": true
                },
                "turnindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The conversation turn index",
                    "isMeasurement": true
                },
                "toolcounts": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of times each tool was used"
                },
                "sessionduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time since the session started",
                    "isMeasurement": true
                },
                "turnduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time since the turn started",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many tokens were in the last generated prompt.",
                    "isMeasurement": true
                },
                "messagecharlen": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were in the user message.",
                    "isMeasurement": true
                },
                "availabletoolcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How number of tools that were available.",
                    "isMeasurement": true
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the final response was successful or how it failed."
                },
                "invalidtoolcallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tool call rounds that had an invalid tool call."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chatpanel.request": {
                "owner": "digitarald",
                "comment": "Metadata about one message turn in a chat conversation.",
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "contexttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The context parts which were used in providing the response."
                },
                "prompttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The prompt types and their length which were used in providing the response."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the current chat conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "responseid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message response."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the response was successful or how it failed."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language of the active editor."
                },
                "codeblocks": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Code block languages in the response."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "turn": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many turns have been made in the conversation.",
                    "isMeasurement": true
                },
                "textblocks": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "For text-only responses (no code), how many paragraphs were in the response.",
                    "isMeasurement": true
                },
                "links": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Symbol and file links in the response.",
                    "isMeasurement": true
                },
                "maybeofftopic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the response sounds like it got rejected due to the request being off-topic.",
                    "isMeasurement": true
                },
                "messagetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were in the user message.",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were in the generated prompt.",
                    "isMeasurement": true
                },
                "userpromptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many user messages were in the generated prompt.",
                    "isMeasurement": true
                },
                "responsetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were in the response.",
                    "isMeasurement": true
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the final request.",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to get the first token.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                },
                "codegeninstructionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions are in the request.",
                    "isMeasurement": true
                },
                "codegeninstructionslength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whats the length of the code generation instructions that were added to request.",
                    "isMeasurement": true
                },
                "codegeninstructionsfilteredcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions were filtered.",
                    "isMeasurement": true
                },
                "codegeninstructionfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instruction files were read.",
                    "isMeasurement": true
                },
                "codegeninstructionsettingscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions originated from settings.",
                    "isMeasurement": true
                },
                "toolcounts": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of times each tool was used"
                },
                "numtoolcalls": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The total number of tool calls",
                    "isMeasurement": true
                },
                "availabletoolcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How number of tools that were available.",
                    "isMeasurement": true
                },
                "temporalctxfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many temporal document-parts where included",
                    "isMeasurement": true
                },
                "temporalctxtotalcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many characters all temporal document-parts where included",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatinline.request": {
                "owner": "digitarald",
                "comment": "Metadata about an inline response from the model",
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "contexttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The context parts which were used in providing the response."
                },
                "prompttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The prompt types and their length which were used in providing the response."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language of the current document."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result type of the response."
                },
                "replytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How response is shown in the interface."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "diagnosticsprovider": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The diagnostics provider."
                },
                "diagnosticcodes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The diagnostics codes in the file."
                },
                "selectiondiagnosticcodes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The selected diagnostics codes."
                },
                "firstturn": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the first turn in the conversation.",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is a notebook document.",
                    "isMeasurement": true
                },
                "messagetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many tokens are in the rest of the query, without the command.",
                    "isMeasurement": true
                },
                "prompttokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many tokens are in the overall prompt.",
                    "isMeasurement": true
                },
                "responsetokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many tokens were in the response.",
                    "isMeasurement": true
                },
                "implicitcommand": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the command was implictly detected or provided by the user.",
                    "isMeasurement": true
                },
                "attemptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many times the user has retried.",
                    "isMeasurement": true
                },
                "selectionlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the current selection.",
                    "isMeasurement": true
                },
                "wholerangelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the expanded whole range.",
                    "isMeasurement": true
                },
                "editcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many edits are suggested.",
                    "isMeasurement": true
                },
                "editlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in all suggested edits.",
                    "isMeasurement": true
                },
                "markdowncharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters were emitted as markdown to vscode in the response stream.",
                    "isMeasurement": true
                },
                "problemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current document.",
                    "isMeasurement": true
                },
                "selectionproblemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current selected code.",
                    "isMeasurement": true
                },
                "diagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current .",
                    "isMeasurement": true
                },
                "selectiondiagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the code at the selection.",
                    "isMeasurement": true
                },
                "outcomeannotations": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Annotations about the outcome of the request."
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the final request.",
                    "isMeasurement": true
                },
                "timetofirsttoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to get the first token.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                },
                "temporalctxfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many temporal document-parts where included",
                    "isMeasurement": true
                },
                "temporalctxtotalcharcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many characters all temporal document-parts where included",
                    "isMeasurement": true
                },
                "codegeninstructionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions are in the request.",
                    "isMeasurement": true
                },
                "codegeninstructionslength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The length of the code generation instructions that were added to request.",
                    "isMeasurement": true
                },
                "codegeninstructionsfilteredcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions were filtered.",
                    "isMeasurement": true
                },
                "codegeninstructionfilecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instruction files were read.",
                    "isMeasurement": true
                },
                "codegeninstructionsettingscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many code generation instructions originated from settings.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatfeedback.generateDiagnostics": {
                "owner": "chrmarti",
                "comment": "Metadata about the code feedback generation",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is used in the endpoint."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which backend generated the comment."
                },
                "messageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request."
                },
                "responsetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The result type of the response."
                },
                "documenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of document (e.g., text or notebook)."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "inputtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What type of input (e.g., selection or change)."
                },
                "commenttypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of comment (e.g., correctness or performance)."
                },
                "promptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of prompts run.",
                    "isMeasurement": true
                },
                "numberofdiagnostics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of diagnostics.",
                    "isMeasurement": true
                },
                "inputdocumentcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many documents were part of the input.",
                    "isMeasurement": true
                },
                "inputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many (selected or changed) lines were part of the input.",
                    "isMeasurement": true
                },
                "timetorequest": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to start the request.",
                    "isMeasurement": true
                },
                "timetocomplete": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How long it took to complete the request.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreview.comment.vote": {
                "owner": "chrmarti",
                "comment": "Metadata about votes on review comments",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which backend generated the comment."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "documenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of document (e.g., text or notebook)."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "inputtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What type of input (e.g., selection or change)."
                },
                "commenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of comment (e.g., correctness or performance)."
                },
                "useraction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What action the user triggered (e.g., helpful, unhelpful, apply or discard)."
                },
                "commentindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Original index of the comment in the generated comments.",
                    "isMeasurement": true
                },
                "actioncount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of previously logged actions on the comment.",
                    "isMeasurement": true
                },
                "inputdocumentcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many documents were part of the input.",
                    "isMeasurement": true
                },
                "inputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many (selected or changed) lines were part of the input.",
                    "isMeasurement": true
                },
                "promptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of prompts run.",
                    "isMeasurement": true
                },
                "totalcomments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of comments.",
                    "isMeasurement": true
                },
                "comments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many comments are affected by the action.",
                    "isMeasurement": true
                },
                "commentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters long the review comment is.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreview.comment.action": {
                "owner": "chrmarti",
                "comment": "Metadata about actions on review comments",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which backend generated the comment."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "documenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of document (e.g., text or notebook)."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "inputtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What type of input (e.g., selection or change)."
                },
                "commenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of comment (e.g., correctness or performance)."
                },
                "useraction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What action the user triggered (e.g., helpful, unhelpful, apply or discard)."
                },
                "commentindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Original index of the comment in the generated comments.",
                    "isMeasurement": true
                },
                "actioncount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of previously logged actions on the comment.",
                    "isMeasurement": true
                },
                "inputdocumentcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many documents were part of the input.",
                    "isMeasurement": true
                },
                "inputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many (selected or changed) lines were part of the input.",
                    "isMeasurement": true
                },
                "promptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of prompts run.",
                    "isMeasurement": true
                },
                "totalcomments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of comments.",
                    "isMeasurement": true
                },
                "comments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many comments are affected by the action.",
                    "isMeasurement": true
                },
                "commentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters long the review comment is.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreview.discardCommentRangeSurvival": {
                "owner": "chrmarti",
                "comment": "Tracks how much percent of the commented range surived after 5 minutes of discarding",
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Which backend generated the comment."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "documenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of document (e.g., text or notebook)."
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "inputtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What type of input (e.g., selection or change)."
                },
                "commenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What kind of comment (e.g., correctness or performance)."
                },
                "useraction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What action the user triggered (e.g., helpful, unhelpful, apply or discard)."
                },
                "commentindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Original index of the comment in the generated comments.",
                    "isMeasurement": true
                },
                "actioncount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of previously logged actions on the comment.",
                    "isMeasurement": true
                },
                "inputdocumentcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many documents were part of the input.",
                    "isMeasurement": true
                },
                "inputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many (selected or changed) lines were part of the input.",
                    "isMeasurement": true
                },
                "promptcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of prompts run.",
                    "isMeasurement": true
                },
                "totalcomments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of comments.",
                    "isMeasurement": true
                },
                "comments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many comments are affected by the action.",
                    "isMeasurement": true
                },
                "commentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many characters long the review comment is.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgetNodeToDocument": {
                "owner": "ulugbekna",
                "comment": "Info on success and properties of detecting AST node to document",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language ID of the document"
                },
                "typeofnodetodocument": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Type of the AST node offered to be documented (type defined by tree-sitter grammar for that language)"
                },
                "nodetodocumentstart": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Start offset of the AST node offered to be documented (type defined by tree-sitter grammar for that language)"
                },
                "nodetodocumentend": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "End offset of the AST node offered to be documented (type defined by tree-sitter grammar for that language)"
                },
                "selectionoffsetrangestart": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The start offset range of the selection in the document"
                },
                "selectionoffsetrangeend": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The end offset range of the selection in the document"
                },
                "wholerangeoffsetrangestart": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The start offset range of the inline-chat wholeRange"
                },
                "wholerangeoffsetrangeend": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The end offset range of the inline-chat wholeRange"
                },
                "timespentms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time (in milliseconds) spent on finding the AST node to document (approximate as it's an async call)",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chaturiHandler": {
                "owner": "lramos15",
                "comment": "Reports when the uri handler is called in the copilot extension",
                "referrer": {
                    "classification": "SystemMetaData",
                    "purpose": "BusinessInsight",
                    "comment": "The referrer query param for the uri"
                }
            },
            "GitHub.copilot-chatcodeBlock.action.goTo": {
                "owner": "mjbvz",
                "comment": "Counts interactions with code blocks in chat responses",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The go to command being run."
                },
                "codeblockid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique hash of the code block."
                }
            },
            "GitHub.copilot-chateditNotebook.toolUsed": {
                "owner": "donjayamanne",
                "comment": "Tracks the tool used to edit Notebook documents",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "resourcehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The hash of the resource of the current request turn. (Notebook Uri)"
                },
                "edittool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Tool used to edit the notebook, one of 'notebookEdit' | 'applyPatch' | 'stringReplace' | 'newNotebookIntent' | 'editCodeIntent' | 'insertEdit' | 'createFile'"
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chateditNotebook.toolOutcome": {
                "owner": "donjayamanne",
                "comment": "Tracks the tool used to edit Notebook documents",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Outcome of the edit operation",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chateditNotebook.cellEditOps": {
                "owner": "donjayamanne",
                "comment": "Tracks the tool used to edit Notebook documents",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "insert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cell inserts",
                    "isMeasurement": true
                },
                "delete": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cell deletes",
                    "isMeasurement": true
                },
                "edit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cell edits",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chateditNotebook.editCellWithCodeMarker": {
                "owner": "donjayamanne",
                "comment": "Tracks the presence of code markers in code when editing Notebook cells",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "resourcehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The hash of the resource of the current request turn. (Notebook Uri)"
                },
                "hascodemarker": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether there any code markers are present",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chatcopilot.search.request": {
                "owner": "osortega",
                "comment": "Copilot search request.",
                "chunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of copilot search code chunks.",
                    "isMeasurement": true
                },
                "rankresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of the copilot search ranking."
                },
                "rankresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of the results from copilot search ranking.",
                    "isMeasurement": true
                },
                "combinedresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of combined results from copilot search.",
                    "isMeasurement": true
                },
                "chunksearchduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the chunk search",
                    "isMeasurement": true
                },
                "llmfilteringduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the LLM filtering",
                    "isMeasurement": true
                },
                "llmbestrank": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Best rank (lowest index) among LLM-selected chunks in the original retrieval ranking.",
                    "isMeasurement": true
                },
                "llmworstrank": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Worst rank (highest index) among LLM-selected chunks in the original retrieval ranking.",
                    "isMeasurement": true
                },
                "llmselectedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of chunks selected by LLM from the initial retrieval.",
                    "isMeasurement": true
                },
                "rawllmrankingresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of raw results returned by the LLM.",
                    "isMeasurement": true
                },
                "parseresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates the result of parsing the LLM response."
                },
                "strategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates the strategy used for the search."
                }
            },
            "GitHub.copilot-chatsemanticSearch.ranking": {
                "owner": "rebornix",
                "comment": "Semantic search request ranking.",
                "llmbestrank": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Best rank (lowest index) among LLM-selected chunks in the original retrieval ranking.",
                    "isMeasurement": true
                },
                "llmworstrank": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Worst rank (highest index) among LLM-selected chunks in the original retrieval ranking.",
                    "isMeasurement": true
                },
                "llmselectedcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of chunks selected by LLM from the initial retrieval.",
                    "isMeasurement": true
                },
                "rawllmrankingresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of raw results returned by the LLM.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcopilot.search.keywords": {
                "owner": "osortega",
                "comment": "Copilot keywords request.",
                "keywordresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of the copilot keywords request."
                },
                "keywordscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of keywords found by copilot search.",
                    "isMeasurement": true
                },
                "keywordsearchduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the keyword search",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreplaceStringToolInvoked": {
                "owner": "roblourens",
                "comment": "The replace_string tool was invoked",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "interactionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current interaction."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the invocation was successful, or a failure reason"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook, 1 = yes, 0 = no, other = unknown.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatreadFileToolInvoked": {
                "owner": "roblourens",
                "comment": "The read_file tool was invoked",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "interactionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current interaction."
                },
                "tooloutcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the invocation was successful, or a failure reason"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                },
                "linesread": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of lines that were read",
                    "isMeasurement": true
                },
                "truncated": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The file length was truncated",
                    "isMeasurement": true
                },
                "isv2": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the tool is a v2 version"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.speculative": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                },
                "originalrequestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The original request id for which this is a speculative request"
                },
                "numberofitems": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of items in the speculative request",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.ok": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                },
                "filesize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The size of the file",
                    "isMeasurement": true
                },
                "completioncontext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Kind of completion context"
                },
                "nodepath": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The syntax kind path to the AST node the position resolved to."
                },
                "cancelled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request got cancelled on the client side"
                },
                "timedout": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request timed out on the server side"
                },
                "servertime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time taken on the server side",
                    "isMeasurement": true
                },
                "contextcomputetime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time taken on the server side to compute the context",
                    "isMeasurement": true
                },
                "timetaken": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time taken to provide the completion",
                    "isMeasurement": true
                },
                "tokenbudgetexhausted": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the token budget was exhausted"
                },
                "blueprints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of blueprints",
                    "isMeasurement": true
                },
                "signatures": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of signatures",
                    "isMeasurement": true
                },
                "superclasses": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of super classes",
                    "isMeasurement": true
                },
                "generalscopes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of general scopes",
                    "isMeasurement": true
                },
                "completions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of traditional completion scopes",
                    "isMeasurement": true
                },
                "neighborfiles": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of neighbor files",
                    "isMeasurement": true
                },
                "module": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of modules",
                    "isMeasurement": true
                },
                "moduleresolution": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of moduleResolutions",
                    "isMeasurement": true
                },
                "lib": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of libs",
                    "isMeasurement": true
                },
                "target": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of targets",
                    "isMeasurement": true
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of versions",
                    "isMeasurement": true
                },
                "totalsize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total size of all context items",
                    "isMeasurement": true
                },
                "items": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Detailed information about each context item delivered."
                },
                "cachehits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of cache hits",
                    "isMeasurement": true
                },
                "isspeculative": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was speculative"
                },
                "beforecachestate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The cache state before the request was sent"
                },
                "aftercachestate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The cache state after the request was sent"
                },
                "cacheditemsforspeculativerequest": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request was cached for a speculative request",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.error": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context errors",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                },
                "code": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The failure code",
                    "isMeasurement": true
                },
                "message": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure message"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.on-timeout": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context on timeout",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "items": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Detailed information about each context item delivered."
                },
                "blueprints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of blueprints",
                    "isMeasurement": true
                },
                "signatures": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of signatures",
                    "isMeasurement": true
                },
                "superclasses": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of super classes",
                    "isMeasurement": true
                },
                "generalscopes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of general scopes",
                    "isMeasurement": true
                },
                "completions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of traditional completion scopes",
                    "isMeasurement": true
                },
                "neighborfiles": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of neighbor files",
                    "isMeasurement": true
                },
                "module": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of modules",
                    "isMeasurement": true
                },
                "moduleresolution": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of moduleResolutions",
                    "isMeasurement": true
                },
                "lib": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of libs",
                    "isMeasurement": true
                },
                "target": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of targets",
                    "isMeasurement": true
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of versions",
                    "isMeasurement": true
                },
                "totalsize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total size of all context items",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.failed": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context in failure case",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                },
                "code:": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The failure code"
                },
                "message": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure message"
                },
                "stack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure stack"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.completion-context.cancelled": {
                "owner": "dirkb",
                "comment": "Telemetry for copilot inline completion context in cancellation case",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.activation.ok": {
                "owner": "dirkb",
                "comment": "Telemetry for TypeScript server plugin",
                "session": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the TypeScript server had a session"
                },
                "supported": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the TypeScript server version is supported"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The version of the TypeScript server"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.activation.failed": {
                "owner": "dirkb",
                "comment": "Telemetry for TypeScript server plugin",
                "location": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The location of the failure"
                },
                "part": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The part that errored"
                },
                "message": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure message"
                },
                "stack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The failure stack"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The version"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.activation.unknown-ping-response": {
                "owner": "dirkb",
                "comment": "Telemetry for TypeScript server plugin",
                "location": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The location of the failure"
                },
                "part": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The part that errored"
                },
                "response": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The response literal"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.integration.failed": {
                "owner": "dirkb",
                "comment": "Telemetry for Copilot inline chat integration.",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The request correlation id"
                },
                "document": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The document for which the integration failed"
                },
                "versionmismatch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The version mismatch"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.inline-completion-provider.registered": {
                "owner": "dirkb",
                "comment": "Telemetry for Copilot inline completions",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                }
            },
            "GitHub.copilot-chattypescript-context-plugin.inline-completion-provider.unregistered": {
                "owner": "dirkb",
                "comment": "Telemetry for Copilot inline completions",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source of the request"
                }
            },
            "GitHub.copilot-chattoolUse.runInTerminal": {
                "owner": "roblourens",
                "comment": "Understanding the usage of the runInTerminal tool",
                "result": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the tool ran successfully, or the type of error"
                },
                "strategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What strategy was used to execute the command (0=none, 1=basic, 2=rich)",
                    "isMeasurement": true
                },
                "usereditedcommand": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user edited the command",
                    "isMeasurement": true
                },
                "tooleditedcommand": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the tool edited the command",
                    "isMeasurement": true
                },
                "isbackground": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the command is a background command",
                    "isMeasurement": true
                },
                "isnewsession": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "Whether this was the first execution for the terminal session"
                },
                "outputlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "How many lines of output were produced, this is -1 when isBackground is true or if there's an error"
                },
                "nonzeroexitcode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "Whether the command exited with a non-zero code (-1=error/unknown, 0=zero exit code, 1=non-zero)"
                },
                "timingconnectms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "How long the terminal took to start up and connect to"
                },
                "timingexecutems": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": "How long the command took to execute"
                }
            },
            "GitHub.copilot-chateditFileResult.diagnostics": {
                "owner": "roblourens",
                "comment": "Tracks whether new diagnostics were found after editing files",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "toolname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the tool that performed the edit"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                },
                "totalnewdiagnostics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of new diagnostics found across all files",
                    "isMeasurement": true
                },
                "fileswithnewdiagnostics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that had new diagnostics",
                    "isMeasurement": true
                },
                "totalfilesedited": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of files that were edited",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatgetNotebookCellOutput.toolOutcome": {
                "owner": "donjayamanne",
                "comment": "Tracks the tool used to get Notebook cell outputs",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Outcome of the edit operation",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chatnewNotebookTool.outcome": {
                "owner": "donjayamanne",
                "comment": "Tracks the outcome of new notebook tool",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The outcome of the tool call."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook (this measure is used to identify notebook related telemetry).",
                    "isMeasurement": true
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                }
            },
            "GitHub.copilot-chatgithubRepoTool.prepare.error": {
                "owner": "mjbvz",
                "comment": "Tracks errors for the GitHub repo tool prepare step",
                "errorid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "General reason why the search failed"
                },
                "errordetails": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "More detailed info about the failure"
                }
            },
            "GitHub.copilot-chatapplyPatch.trackEditSurvival": {
                "owner": "joyceerhl",
                "comment": "Tracks how much percent of the AI edits survived after 5 minutes of accepting",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "requestsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from where the request was made"
                },
                "mapper": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The code mapper used strategy"
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatapplyPatchHealRate": {
                "owner": "connor4312",
                "comment": "Records how correct the healing of a patch was",
                "success": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the input was healed"
                }
            },
            "GitHub.copilot-chatapplyPatchToolInvoked": {
                "owner": "roblourens",
                "comment": "The apply_patch tool was invoked",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "interactionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current interaction."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the invocation was successful, or a failure reason"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that invoked the tool"
                },
                "healed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the input was healed"
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the input was a notebook, 1 = yes, 0 = no, other = Unknown"
                }
            },
            "GitHub.copilot-chatintent.fixTestFailure.actioned": {
                "owner": "connor4312",
                "comment": "Reports when we show a ",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Where the action was taken"
                }
            },
            "GitHub.copilot-chatrunNotebookCellInvoked": {
                "owner": "amunger",
                "comment": "Tracks the usage and result ",
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "resourcehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The hash of the resource of the current request turn. (Notebook Uri)"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used for the request."
                },
                "result": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of the operation: success, failure, or unknown."
                },
                "resultinfo": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reason for failure if the result is failure."
                }
            },
            "GitHub.copilot-chattriggerSummarizeFailed": {
                "owner": "roblourens",
                "comment": "Tracks when triggering summarization failed - for example, a summary was created but not applied successfully.",
                "errorkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The success state or failure reason of the summarization."
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model ID used for the summarization."
                }
            },
            "GitHub.copilot-chattoolCalling.invalidToolMessages": {
                "owner": "roblourens",
                "comment": "Provides info about invalid tool messages that were rendered in a prompt",
                "filterreasons": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Reasons for filtering the messages."
                },
                "filtercount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of filtered messages.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatpanel.edit.codeblocks": {
                "owner": "joyceerhl",
                "comment": "Records information about the proposed edit codeblocks in an editing session",
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the current chat conversation."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the request succeeded or failed."
                },
                "workingsetcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of entries in the working set",
                    "isMeasurement": true
                },
                "uniquecodeblockuricount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of unique code block URIs",
                    "isMeasurement": true
                },
                "codeblockcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of code blocks in the response",
                    "isMeasurement": true
                },
                "codeblockwithuricount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of code blocks that had URIs",
                    "isMeasurement": true
                },
                "codeblockwithelidedcodecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of code blocks that had a ...existing code... comment",
                    "isMeasurement": true
                },
                "shellcodeblockcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of shell code blocks in the response",
                    "isMeasurement": true
                },
                "shellcodeblockwithuricount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of shell code blocks that had URIs",
                    "isMeasurement": true
                },
                "shellcodeblockwithelidedcodecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of shell code blocks that had a ...existing code... comment",
                    "isMeasurement": true
                },
                "editstepcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of edit steps in the session so far",
                    "isMeasurement": true
                },
                "sessionduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time since the session started",
                    "isMeasurement": true
                },
                "intentid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the intent being executed"
                }
            },
            "GitHub.copilot-chateditCodeIntent.promptRender": {
                "owner": "roblourens",
                "comment": "Understanding the performance of the edit code intent rendering",
                "promptrenderdurationincludingrunningtools": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of the prompt rendering, includes running tools",
                    "isMeasurement": true
                },
                "isagentmode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the prompt was for agent mode",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatlanguagemodelrequest": {
                "owner": "jrieken",
                "comment": "Data about extensions using the language model",
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model that is being used"
                },
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension identifier for which we make the request"
                },
                "extensionversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension version for which we make the request"
                },
                "tokencount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tokens",
                    "isMeasurement": true
                },
                "tokenlimit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tokens that can be used",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatpanel.action.copy": {
                "owner": "digitarald",
                "comment": "Counts copied code blocks from a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "codeblockindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Index of the code block in the response.",
                    "isMeasurement": true
                },
                "copytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the copy was done via the context menu or the toolbar.",
                    "isMeasurement": true
                },
                "charactercount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of characters copied.",
                    "isMeasurement": true
                },
                "linecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of lines copied.",
                    "isMeasurement": true
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                }
            },
            "GitHub.copilot-chatpanel.action.insert": {
                "owner": "digitarald",
                "comment": "Counts inserts on a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "codeblockindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Index of the code block in the response.",
                    "isMeasurement": true
                },
                "charactercount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of characters copied.",
                    "isMeasurement": true
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                },
                "newfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the insert was done in a new file.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatpanel.action.runinterminal": {
                "owner": "digitarald",
                "comment": "Counts generic actions on a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "blocklanguage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the code block in the response."
                },
                "codeblockindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Index of the code block in the response.",
                    "isMeasurement": true
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                }
            },
            "GitHub.copilot-chatpanel.action.followup": {
                "owner": "digitarald",
                "comment": "Counts generic actions on a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the message request that is being followed-up."
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                }
            },
            "GitHub.copilot-chatpanel.edit.feedback": {
                "owner": "joyceerhl",
                "comment": "Counts accept/reject actions for a proposed edit from panel chat",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for the message request that is being followed-up."
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The user decision taken for the edited file"
                },
                "hasremainingedits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there are additional unactioned edits in the file."
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook.",
                    "isMeasurement": true
                },
                "isnotebookcell": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook cell.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatpanel.action.vote": {
                "owner": "digitarald",
                "comment": "Counts votes on a chat panel response",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language of the currently open document."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id for this message request."
                },
                "direction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the vote was positive or negative.",
                    "isMeasurement": true
                },
                "participant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the chat participant for this message."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command used for the chat participant."
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Preset value for why the user found the response unhelpful."
                }
            },
            "GitHub.copilot-chatinline.action.vote": {
                "owner": "digitarald",
                "comment": "Metadata about votes on inline code conversations",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "replytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How response is shown in the interface."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the inline assistant conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Preset value for why the user found the response unhelpful."
                },
                "vote": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user found the response helpful.",
                    "isMeasurement": true
                },
                "selectionlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the current selection.",
                    "isMeasurement": true
                },
                "wholerangelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the expanded whole range.",
                    "isMeasurement": true
                },
                "editcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many edits are suggested.",
                    "isMeasurement": true
                },
                "editlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in all suggested edits.",
                    "isMeasurement": true
                },
                "problemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current code.",
                    "isMeasurement": true
                },
                "selectionproblemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current selected code.",
                    "isMeasurement": true
                },
                "diagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current code.",
                    "isMeasurement": true
                },
                "selectiondiagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current selected code.",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatinline.done": {
                "owner": "digitarald",
                "comment": "Metadata about an inline code suggestion being accepted or undone",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "replytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How response is shown in the interface."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the inline assistant conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "accepted": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user accepted the suggested code or discarded it.",
                    "isMeasurement": true
                },
                "selectionlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the current selection.",
                    "isMeasurement": true
                },
                "wholerangelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the expanded whole range.",
                    "isMeasurement": true
                },
                "editcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many edits are suggested.",
                    "isMeasurement": true
                },
                "editlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in all suggested edits.",
                    "isMeasurement": true
                },
                "problemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current code.",
                    "isMeasurement": true
                },
                "selectionproblemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current selected code.",
                    "isMeasurement": true
                },
                "diagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current code.",
                    "isMeasurement": true
                },
                "selectiondiagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current code.",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatinline.trackEditSurvival": {
                "owner": "hediet",
                "comment": "Tracks how much percent of the AI edits surived after 5 minutes of accepting",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current file language."
                },
                "replytype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How response is shown in the interface."
                },
                "conversationid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the inline assistant conversation."
                },
                "requestid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the current request turn."
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command which was used in providing the response."
                },
                "survivalratefourgram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the AI edit is still present in the document.",
                    "isMeasurement": true
                },
                "survivalratenorevert": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The rate between 0 and 1 of how much of the ranges the AI touched ended up being reverted.",
                    "isMeasurement": true
                },
                "didbranchchange": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the branch changed in the meantime. If the branch changed (value is 1), this event should probably be ignored.",
                    "isMeasurement": true
                },
                "timedelayms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time delay between the user accepting the edit and measuring the survival rate.",
                    "isMeasurement": true
                },
                "selectionlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the current selection.",
                    "isMeasurement": true
                },
                "wholerangelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in the expanded whole range.",
                    "isMeasurement": true
                },
                "editcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many edits are suggested.",
                    "isMeasurement": true
                },
                "editlinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many lines are in all suggested edits.",
                    "isMeasurement": true
                },
                "problemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current code.",
                    "isMeasurement": true
                },
                "selectionproblemscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many problems are in the current selected code.",
                    "isMeasurement": true
                },
                "diagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current code.",
                    "isMeasurement": true
                },
                "selectiondiagnosticscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many diagnostic codes are in the current selected code.",
                    "isMeasurement": true
                },
                "isnotebook": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the document is a notebook",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatcopilot.search.feedback": {
                "owner": "osortega",
                "comment": "Feedback telemetry for copilot search",
                "kind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Feedback provided by the user."
                },
                "chunkcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of copilot search code chunks.",
                    "isMeasurement": true
                },
                "rankresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Result of the copilot search ranking."
                },
                "rankresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of the results from copilot search ranking.",
                    "isMeasurement": true
                },
                "combinedresultscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Count of combined results from copilot search.",
                    "isMeasurement": true
                },
                "chunksearchduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the chunk search",
                    "isMeasurement": true
                },
                "llmfilteringduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration of the LLM filtering",
                    "isMeasurement": true
                },
                "strategy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates the strategy used for the search."
                }
            },
            "GitHub.copilot-chatprojectLabels": {
                "owner": "digitarald",
                "comment": "Reports quality of labels detected in a workspace",
                "labels": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique workspace label count."
                },
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Unique workspace labels in context.",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatdebugSessionStart": {
                "owner": "connor4312",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "breakpointcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "exceptionbreakpoints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "watchexpressionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "extensionname": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight"
                },
                "isbuiltin": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "launchjsonexists": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatdebugSessionStop": {
                "owner": "connor4312",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "success": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "sessionlengthinseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "breakpointcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "watchexpressionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatworkbenchActionExecuted": {},
            "GitHub.copilot-chatcommandCenter.chatInstall": {
                "owner": "bpasero",
                "comment": "Provides insight into chat installation.",
                "installresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the extension was installed successfully, cancelled or failed to install."
                },
                "installduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The duration it took to install the extension.",
                    "isMeasurement": true
                },
                "signuperrorcode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The error code in case of an error signing up."
                }
            },
            "GitHub.copilot-chatnotebook/editorOpened": {
                "owner": "rebornix",
                "comment": "Identify the notebook editor view type",
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File system provider scheme for the resource"
                },
                "ext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File extension for the resource"
                },
                "viewtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "View type of the notebook editor"
                },
                "isrepl": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the notebook editor is within a REPL editor",
                    "isMeasurement": true
                }
            },
            "GitHub.copilot-chatinteractiveEditor/session": {
                "owner": "jrieken",
                "comment": "Data about an interaction editor session",
                "extension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension providing the data"
                },
                "rounds": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of request that were made"
                },
                "undos": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Requests that have been undone"
                },
                "edits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "Did edits happen while the session was active"
                },
                "terminaledits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Did edits terminal the session",
                    "isMeasurement": true
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "When the session started"
                },
                "endtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "When the session ended"
                }
            }
        },
        "commonProperties": {
            "common.tid": {
                "classification": "EndUserPseudonymizedInformation",
                "purpose": "BusinessInsight"
            },
            "common.sku": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight"
            },
            "common.internal": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "isMeasurement": true
            }
        }
    },
    "ms-python.debugpy-2025.11.2025070101-darwin-arm64": {
        "events": {
            "ms-python.debugpydebug.success_activation": {
                "codeloadingtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "errorname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.debugpydebug_in_terminal_button": {
                "owner": "eleanorjboyd"
            },
            "ms-python.debugpydebug_using_launch_config_button": {
                "owner": "eleanorjboyd"
            },
            "ms-python.debugpydebug_adapter.using_wheels_path": {
                "usingwheels": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.debugpydebug_session.start": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "eleanorjboyd"
                },
                "console": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.debugpydebug_session.error": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "eleanorjboyd"
                },
                "console": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.debugpydebug_session.stop": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "eleanorjboyd"
                },
                "console": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.debugpydebug_session.user_code_running": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "eleanorjboyd"
                },
                "console": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.debugpydebugger": {
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "console": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "hasenvvars": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "hasargs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "django": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "fastapi": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "flask": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "jinja": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "islocalhost": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "ismodule": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "issudo": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "stoponentry": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "showreturnvalue": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "pyramid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "subprocess": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "watson": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "pyspark": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "gevent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "scrapy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.debugpydebugger.attach_to_child_process": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd",
                    "isMeasurement": true
                }
            },
            "ms-python.debugpydebugger.attach_to_local_process": {
                "owner": "eleanorjboyd"
            },
            "ms-python.debugpydebugger.configuration.prompts": {
                "configurationtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "autodetecteddjangomanagepypath": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "autodetectedpyramidinipath": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "autodetectedfastapimainpypath": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "autodetectedflaskapppypath": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "manuallyenteredavalue": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "browsefilevalue": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.debugpydebugger.configuration.prompts.in.launch.json": {
                "owner": "eleanorjboyd"
            },
            "ms-python.debugpyenvfile_variable_substitution": {
                "owner": "karthiknadig"
            },
            "ms-python.debugpyuse_report_issue_command": {
                "owner": "eleanorjboyd"
            },
            "ms-python.debugpydebugger_dynamic_config": {
                "owner": "eleanorjboyd"
            },
            "ms-python.debugpyDEBUGGER_PYTHON_37_DEPRECATED": {
                "owner": "eleanorjboyd"
            },
            "ms-python.debugpyDEBUGGER_SHOW_PYTHON_INLINE_VALUES": {
                "owner": "eleanorjboyd"
            }
        },
        "commonProperties": {}
    },
    "ms-python.python-2025.8.0-darwin-arm64": {
        "events": {
            "ms-python.pythonlanguage_server.enabled": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "errorname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "errorstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server.jinja_usage": {
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "openfileextensions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server.ready": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "errorname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "errorstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server.request": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "errorname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "errorstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "method": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "modulehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "moduleversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "resultlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server.startup": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "errorname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "errorstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server/analysis_complete": {
                "configparseerroroccurred": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "elapsedms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "externalmb": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "fatalerroroccurred": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "heaptotalmb": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "heapusedmb": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "isdone": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "isfirstrun": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "numfilesanalyzed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "numfilesinprogram": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "peakrssmb": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "resolverid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "rssmb": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "diagnosticsseen": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "editablepthcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "computedpthcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-python.pythonlanguage_server/analysis_exception": {
                "errorname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "errorstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server/completion_accepted": {
                "autoimport": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "dictionarykey": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "memberaccess": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "keyword": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server/completion_coverage": {
                "failures": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "overallfailures": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "overallsuccesses": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "overalltotal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "successes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "total": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server/completion_metrics": {
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "lastknownmembernamehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "lastknownmodulehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "packagehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "unknownmembernamehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server/completion_slow": {
                "bindcallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "bindtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "correlationid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimportadditiontimeinms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimportedittimeinms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimportimportaliascount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimportimportaliastimeinms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimportindexcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimportindextimeinms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimportindexused": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimportitemcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimportmoduleresolvetimeinms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimportmoduletimeinms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimportsymbolcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimporttotaltimeinms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_autoimportuserindexcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_completionitems": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_completionitemtelemetrybuildtimeinms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_extensiontotaltimeinms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_selecteditemtelemetrybuildtimeinms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_completiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_filetype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "parsecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "parsetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "readfilecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "readfiletime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "resolvecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "resolvetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenizecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenizetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "totaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "typeevalcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "typeevaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server/completion_context_items": {
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "context": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-python.pythonlanguage_server/documentcolor_slow": {
                "bindcallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "bindtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "parsecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "parsetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "readfilecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "readfiletime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "resolvecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "resolvetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenizecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenizetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "totaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "typeevalcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "typeevaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server/exception_intellicode": {
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server/execute_command": {
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server/goto_def_inside_string": {
                "resultlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server/import_heuristic": {
                "avgcost": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "avglevel": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "conflicts": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "nativemodules": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "nativepackages": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "reason_because_it_is_not_a_valid_directory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "reason_could_not_parse_output": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "reason_did_not_find_file": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "reason_no_python_interpreter_search_path": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "reason_typeshed_path_not_found": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "resolverid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "success": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "total": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server/import_metrics": {
                "absolutestubs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "absolutetotal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "absoluteunresolved": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "absoluteuserunresolved": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "builtinimportstubs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "builtinimporttotal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "localimportstubs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "localimporttotal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "nativemodules": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "nativepackages": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "relativestubs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "relativetotal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "relativeunresolved": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "resolverid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "stubs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "thirdpartyimportstubs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "thirdpartyimporttotal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "total": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "unresolvedmodules": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "unresolvedpackages": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "unresolvedpackageslowercase": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "unresolvedtotal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server/index_slow": {
                "bindcallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "bindtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_count": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "parsecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "parsetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "readfilecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "readfiletime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "resolvecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "resolvetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenizecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenizetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "totaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "typeevalcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "typeevaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server/installed_packages": {
                "packagesbitarray": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "packageslowercase": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "resolverid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "editablepthcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-python.pythonlanguage_server/intellicode_completion_item_selected": {
                "class": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "elapsedtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "failurereason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "index": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "isintellicodecommit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "language": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "memoryincreasekb": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "method": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "methods": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "modeltype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "modelversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "selecteditemtelemetrybuildtimeinms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server/intellicode_enabled": {
                "enabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "startup": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server/intellicode_model_load_failed": {
                "errorname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "errorstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server/intellicode_onnx_load_failed": {
                "errorname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "errorstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server/rename_files": {
                "affectedfilescount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "bindcallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "bindtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "filerenamed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "parsecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "parsetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "readfilecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "readfiletime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "resolvecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "resolvetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenizecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenizetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "totaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "typeevalcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "typeevaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server/semantictokens_slow": {
                "bindcallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "bindtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_count": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "parsecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "parsetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "readfilecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "readfiletime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "resolvecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "resolvetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenizecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenizetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "totaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "typeevalcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "typeevaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server/server_side_request": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "method": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "modulehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "resultlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server/settings": {
                "addimportexactmatchonly": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "aicodeactionsimplementabstractclasses": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "aicodeactionsgeneratedocstring": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "aicodeactionsgeneratesymbols": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "aicodeactionsconvertformatstring": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "autoimportcompletions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "autosearchpaths": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "callargumentnameinlayhints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "completefunctionparens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "disabletaggedhints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "disableworkspacesymbol": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "enableextractcodeaction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "enablepytestsupport": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "extracommitchars": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "formatontype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "functionreturninlaytypehints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "hasconfigfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "hasextrapaths": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "importformat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "intellicodeenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "includeusersymbolsinautoimport": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "indexing": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "languageservermode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "lspinteractivewindows": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "lspnotebooks": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "movesymbol": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "nodeexecutable": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "openfilesonly": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "pytestparameterinlaytypehints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "typecheckingmode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "unusablecompilerflags": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "useimportheuristic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "uselibrarycodefortypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "variableinlaytypehints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "watchforlibrarychanges": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "workspacecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-python.pythonlanguage_server/startup_metrics": {
                "analysisms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "peakrssmb": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "presetfileopenms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokendeltams": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenfullms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenrangems": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "totalms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "userindexms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-python.pythonlanguage_server/workspaceindex_slow": {
                "bindcallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "bindtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "custom_count": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "parsecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "parsetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "readfilecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "readfiletime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "resolvecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "resolvetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenizecallcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "tokenizetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "totaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "typeevalcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "typeevaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server/workspaceindex_threshold_reached": {
                "index_count": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server/mcp_tool": {
                "kind": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "cancelled": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "cancellation_reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythonlanguage_server.crash": {
                "oom": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "rchiodo"
                },
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "rchiodo"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-python.pythondiagnostics.message": {
                "code": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythoneditor.load": {
                "appname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "codeloadingtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "condaversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "errorname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "owner": "luabud"
                },
                "errorstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "owner": "luabud"
                },
                "pythonversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "installsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "interpretertype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "terminal": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "luabud"
                },
                "workspacefoldercount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "haspythonthree": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "startactivatetime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "totalactivatetime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "totalnonblockingactivatetime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "usinguserdefinedinterpreter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "usingglobalinterpreter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "isfirstsession": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                }
            },
            "ms-python.pythonenvfile_variable_substitution": {
                "owner": "karthiknadig"
            },
            "ms-python.pythonenvfile_workspace": {
                "hascustomenvpath": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                }
            },
            "ms-python.pythonexecution_code": {
                "scope": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonexecution_django": {
                "scope": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonformat.format_on_type": {
                "enabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonhashed_package_name": {
                "hashedname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                }
            },
            "ms-python.pythonpython_install_package": {
                "installer": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "requiredinstaller": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "productname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "isinstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "envtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonenvironment_without_python_selected": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig",
                    "isMeasurement": true
                }
            },
            "ms-python.pythonselect_interpreter": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true
                }
            },
            "ms-python.pythonselect_interpreter_enter_button": {
                "owner": "karthiknadig"
            },
            "ms-python.pythonselect_interpreter_enter_choice": {
                "choice": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonselect_interpreter_selected": {
                "action": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonselect_interpreter_enter_or_find": {
                "owner": "karthiknadig"
            },
            "ms-python.pythonselect_interpreter_entered_exists": {
                "discovered": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonpython_environments_api": {
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "apiname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonpython_interpreter": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                },
                "pythonversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonpython_interpreter.activation_environment_variables": {
                "hasenvvars": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonpython_interpreter_activation_for_running_code": {
                "hascommands": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                },
                "terminal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "pythonversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "interpretertype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonpython_interpreter_activation_for_terminal": {
                "hascommands": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                },
                "terminal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "pythonversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "interpretertype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonpython_interpreter_auto_selection": {
                "usecachedinterpreter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonpython_interpreter_discovery": {
                "telver": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "workspacefoldercount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativeduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "condainfoenvsinvalid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "condainfoenvsduplicate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "condainfoenvsinvalidprefix": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "interpreters": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "envswithduplicateprefixes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "envsnotfound": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "condainfoenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "condainfoenvsdirs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativecondainfoenvsdirs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "condarcs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativecondarcs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "condaenvsinenvdir": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "condaenvsintxt": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativecondaenvsinenvdir": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidcondaenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "prefixnotexistscondaenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "condaenvswithoutprefix": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "environmentswithoutpython": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "usingnativelocator": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "canspawnconda": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "nativecanspawnconda": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "userprovidedenvfound": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "condarootprefixfoundininfonotinnative": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "condadefaultprefixfoundasanotherkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "condarootprefixfoundasprefixofanother": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "condadefaultprefixfoundasprefixofanother": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "condarootprefixfoundintxt": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "condadefaultprefixfoundintxt": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "condarootprefixfoundininfoafterfind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "condarootprefixfoundininfoafterfindkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "condarootprefixfoundasanotherkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "condarootprefixincondaexepath": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "condadefaultprefixfoundininfonotinnative": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "condadefaultprefixfoundininfoafterfind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "condadefaultprefixfoundininfoafterfindkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "condadefaultprefixincondaexepath": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "userprovidedcondaexe": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "condarootprefixenvsafterfind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "condadefaultprefixenvsafterfind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "activestateenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "condaenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "customenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "hatchenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "microsoftstoreenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "otherglobalenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "othervirtualenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "pipenvenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "poetryenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "pyenvenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "systemenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "unknownenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "venvenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "virtualenvenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "virtualenvwrapperenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "global": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativeenvironmentswithoutpython": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativecondaenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativecustomenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativemicrosoftstoreenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativeotherglobalenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativeothervirtualenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativepipenvenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativepoetryenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativepyenvenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativesystemenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativeunknownenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativevenvenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativevirtualenvenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativevirtualenvwrapperenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativeglobal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "missingnativecondaenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "missingnativecustomenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "missingnativemicrosoftstoreenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "missingnativeglobalenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "missingnativeothervirtualenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "missingnativepipenvenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "missingnativepoetryenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "missingnativepyenvenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "missingnativesystemenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "missingnativeunknownenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "missingnativevenvenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "missingnativevirtualenvenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "missingnativevirtualenvwrapperenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "missingnativeotherglobalenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativecondarcsnotfound": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativecondaenvdirsnotfound": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativecondaenvdirsnotfoundhasenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativecondaenvdirsnotfoundhasenvsintxt": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativecondaenvtxtsame": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "nativecondaenvsfromtxt": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "nativecondaenvtxtexists": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                }
            },
            "ms-python.pythonnative_finder_missing_conda_envs": {
                "missing": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "envdirsnotfound": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "userprovidedcondaexe": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "rootprefixnotfound": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "condaprefixnotfound": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "condamanagernotfound": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "missingenvdirsfromsysrc": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "missingenvdirsfromuserrc": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "missingenvdirsfromotherrc": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "missingfromsysrcenvdirs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "missingfromuserrcenvdirs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "missingfromotherrcenvdirs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                }
            },
            "ms-python.pythonnative_finder_missing_poetry_envs": {
                "missing": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "missinginpath": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "userprovidedpoetryexe": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "poetryexenotfound": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "globalconfignotfound": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "cachedirnotfound": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "cachedirisdifferent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "virtualenvspathnotfound": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "virtualenvspathisdifferent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "inprojectisdifferent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                }
            },
            "ms-python.pythonnative_finder_perf": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "totalduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "breakdownlocators": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "breakdownpath": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "breakdownglobalvirtualenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "breakdownworkspaces": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "locatorconda": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "locatorhomebrew": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "locatorlinuxglobalpython": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "locatormaccmdlinetools": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "locatormacpythonorg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "locatormacxcode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "locatorpipenv": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "locatorpoetry": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "locatorpixi": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "locatorpyenv": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "locatorvenv": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "locatorvirtualenv": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "locatorvirtualenvwrapper": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "locatorwindowsregistry": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "locatorwindowsstore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "timetospawn": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "timetoconfigure": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "timetorefresh": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                }
            },
            "ms-python.pythonpython_interpreter_discovery_invalid_native": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidversionscondaenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidversionscustomenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidversionsmicrosoftstoreenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidversionsglobalenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidversionsothervirtualenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidversionspipenvenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidversionspoetryenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidversionspyenvenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidversionssystemenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidversionsunknownenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidversionsvenvenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidversionsvirtualenvenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidversionsvirtualenvwrapperenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidversionsotherglobalenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidsysprefixcondaenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidsysprefixcustomenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidsysprefixmicrosoftstoreenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidsysprefixglobalenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidsysprefixothervirtualenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidsysprefixpipenvenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidsysprefixpoetryenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidsysprefixpyenvenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidsysprefixsystemenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidsysprefixunknownenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidsysprefixvenvenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidsysprefixvirtualenvenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidsysprefixvirtualenvwrapperenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                },
                "invalidsysprefixotherglobalenvs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne",
                    "isMeasurement": true
                }
            },
            "ms-python.pythonconda_inherit_env_prompt": {
                "selection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonrequire_jupyter_prompt": {
                "selection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonactivated_conda_env_launch": {
                "selection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonpython_interpreter_activate_environment_prompt": {
                "selection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonpython_not_installed_prompt": {
                "selection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonpython_experiments_init_performance": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                }
            },
            "ms-python.pythonuse_report_issue_command": {
                "owner": "paulacamargo25"
            },
            "ms-python.pythoncreate_new_file_command": {
                "owner": "luabud"
            },
            "ms-python.pythonpython_experiments_lsp_notebooks": {
                "owner": "luabud"
            },
            "ms-python.pythonpython_experiments_opt_in_opt_out_settings": {
                "optedinto": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                },
                "optedoutfrom": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "luabud"
                }
            },
            "ms-python.pythonlanguage_server_enabled": {
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonlanguage_server_ready": {
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonlanguage_server_trigger_time": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig",
                    "isMeasurement": true
                },
                "triggertime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig",
                    "isMeasurement": true
                }
            },
            "ms-python.pythonlanguage_server_startup": {
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonlanguage_server_telemetry": {
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonlanguage_server_request": {
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonlanguage_server_restart": {
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonjedi_language_server.enabled": {
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonjedi_language_server.ready": {
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonjedi_language_server.startup": {
                "lsversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonjedi_language_server.request": {
                "method": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonextension_survey_prompt": {
                "selection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonrepl": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "anthonykim1",
                    "isMeasurement": true
                },
                "repltype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "anthonykim1"
                }
            },
            "ms-python.pythonunittest.configure": {
                "owner": "eleanorjboyd"
            },
            "ms-python.pythonunittest.configuring": {
                "tool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.pythonactivate_env_in_current_terminal": {
                "isterminalvisible": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonterminal.create": {
                "terminal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "triggeredby": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "pythonversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "interpretertype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonunittest.discovery.trigger": {
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.pythonunittest.discovering": {
                "tool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.pythonunittest.discovery.done": {
                "tool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.pythonunittest.discovery.stop": {
                "owner": "eleanorjboyd"
            },
            "ms-python.pythonunittest.run": {
                "tool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "debugging": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.pythonunittest.run.stop": {
                "owner": "eleanorjboyd"
            },
            "ms-python.pythonunittest.run.all_failed": {
                "owner": "eleanorjboyd"
            },
            "ms-python.pythonunittest.disabled": {
                "owner": "eleanorjboyd"
            },
            "ms-python.pythonterminal_shell_identification": {
                "failed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                },
                "terminalprovided": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "shellidentificationsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "hascustomshell": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                },
                "hasshellinenv": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonactivate_env_to_get_env_vars_failed": {
                "ispossiblycondaenv": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                },
                "terminal": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythontensorboard.session_duration": {
                "owner": "donjayamanne"
            },
            "ms-python.pythontensorboard.install_prompt_selection": {
                "selection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                },
                "operationtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "donjayamanne"
                }
            },
            "ms-python.pythontensorboard_detected_in_integrated_terminal": {
                "owner": "donjayamanne"
            },
            "ms-python.pythontensorboard.package_install_result": {
                "wasprofilerpluginattempted": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne"
                },
                "wastensorboardattempted": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne"
                },
                "wasprofilerplugininstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne"
                },
                "wastensorboardinstalled": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "donjayamanne"
                }
            },
            "ms-python.pythontensorboard.torch_profiler_import": {
                "owner": "donjayamanne"
            },
            "ms-python.pythonenvironment.creating": {
                "environmenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                },
                "pythonversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonenvironment.created": {
                "environmenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonenvironment.failed": {
                "environmenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonenvironment.installing_packages": {
                "environmenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                },
                "using": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonenvironment.installed_packages": {
                "environmenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                },
                "using": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonenvironment.installing_packages_failed": {
                "environmenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                },
                "using": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonenvironment.button": {
                "owner": "karthiknadig"
            },
            "ms-python.pythonenvironment.delete": {
                "environmenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                },
                "status": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonenvironment.reuse": {
                "environmenttype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonenvironment.check.trigger": {
                "trigger": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonenvironment.check.result": {
                "result": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "owner": "karthiknadig"
                }
            },
            "ms-python.pythonenvironment.terminal.global_pip": {
                "owner": "karthiknadig"
            },
            "ms-python.pythonquery-expfeature": {
                "owner": "luabud",
                "comment": "Logs queries to the experiment service by feature for metric calculations",
                "abexp.queriedfeature": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The experimental feature being queried"
                }
            },
            "ms-python.pythoncall-tas-error": {
                "owner": "luabud",
                "comment": "Logs when calls to the experiment service fails",
                "errortype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Type of error when calling TAS (ServerError, NoResponse, etc.)"
                }
            }
        },
        "commonProperties": {}
    },
    "ms-python.vscode-python-envs-0.3.11821012-darwin-arm64": {
        "events": {
            "ms-python.vscode-python-envsextension.activation_duration": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.vscode-python-envsextension.manager_registration_duration": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.vscode-python-envsenvironment_manager.registered": {
                "managerid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.vscode-python-envspackage_manager.registered": {
                "managerid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.vscode-python-envsenvironment_manager.selected": {
                "managerid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.vscode-python-envspackage_manager.selected": {
                "managerid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.vscode-python-envsvenv.using_uv": {
                "owner": "eleanorjboyd"
            },
            "ms-python.vscode-python-envsvenv.creation": {
                "creationtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.vscode-python-envspackage_management": {
                "managerid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "result": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.vscode-python-envsadd_project": {
                "template": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "quickcreate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "totalprojectcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "triggeredlocation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                }
            },
            "ms-python.vscode-python-envscreate_environment": {
                "manager": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                },
                "triggeredlocation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "eleanorjboyd"
                }
            }
        },
        "commonProperties": {}
    },
    "ms-vscode-remote.remote-containers-0.419.0": {
        "events": {
            "ms-vscode-remote.remote-containersuserCLI": {
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containersserviceConnectionFailure": {
                "servicename": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "hosttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "hostauthority": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "hostplatform": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containerscreateConfiguration": {
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "definitionname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "copilotsuggested": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "features": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "copilotfeatures": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "copilotused": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "targetlocation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containersdockerVersion": {
                "dialog": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "choice": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "errormessage": {
                    "classification": "CallstackOrException",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containerserrorAction": {
                "resolver": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "action": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containersinstallDockerInWSL": {
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "wslversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "wsldistros": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "isdefaultdistro": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "distro": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "errormessage": {
                    "classification": "CallstackOrException",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containersperformanceEntry": {
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                }
            },
            "ms-vscode-remote.remote-containersquery-expfeature": {
                "abexp.queriedfeature": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containersreopenNotificationOpen": {
                "location": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containersreopenNotificationResult": {
                "result": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "location": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containersextraInfo": {
                "remotecloud": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-containersresolver": {
                "resolver": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "hosttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "hostauthority": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "configtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "step": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "sessiontimeinms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "configproperties": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "configextensions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "configfeatures": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "configlocation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "hardwareid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "osreleaseid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "osreleaseversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "errormessage": {
                    "classification": "CallstackOrException",
                    "purpose": "FeatureInsight"
                }
            }
        },
        "commonProperties": {
            "common.cli": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight"
            },
            "common.os": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight"
            },
            "common.platformversion": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight"
            },
            "common.extname": {
                "classification": "PublicNonPersonalData",
                "purpose": "FeatureInsight"
            },
            "common.extversion": {
                "classification": "PublicNonPersonalData",
                "purpose": "FeatureInsight"
            },
            "common.vscodemachineid": {
                "classification": "EndUserPseudonymizedInformation",
                "purpose": "FeatureInsight"
            }
        }
    },
    "ms-vscode-remote.remote-ssh-0.120.0": {
        "events": {
            "ms-vscode-remote.remote-sshresolver": {
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "exitcodelabel": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "exitcode": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "resolveattempts": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "retries": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "isexecserver": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "timing.totalresolvetime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "timing.presshtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "timing.scripttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "timing.downloadtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "timing.installtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "timing.extinstalltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "timing.serverstarttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "timing.localdownloadtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "timing.scptime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true
                },
                "osreleaseid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "arch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "askedpw": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "askedpassphrase": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "asked2fa": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "askedhostkey": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "dynamicforwarding": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "localserver": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "gotunrecognizedprompt": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "remoteinconfigfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "didlocaldownload": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                },
                "installunpackcode": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-vscode-remote.remote-sshextraInfo": {
                "remotecloud": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            },
            "ms-vscode-remote.remote-sshcopilotChat": {
                "isdiagnosewithcopilotsession": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                },
                "conversationhashistory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight"
                }
            }
        },
        "commonProperties": {}
    },
    "ms-vscode.remote-explorer-0.5.0": {
        "events": {},
        "commonProperties": {}
    },
    "vscode-core": {
        "events": {
            "query-expfeature": {
                "owner": "sbatten",
                "comment": "Logs queries to the experiment service by feature for metric calculations",
                "abexp.queriedfeature": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The experimental feature being queried",
                    "endPoint": "none"
                }
            },
            "startupTimeVaried": {
                "owner": "jrieken",
                "ellapsed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "islatestversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "didusecacheddata": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "windowkind": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "windowcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "viewletid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "panelid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "editorids": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timers.ellapsedappready": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsednlsgeneration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedloadmainbundle": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedrunmainbundle": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedcrashreporter": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedmainserver": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedwindowcreate": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedwindowload": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedwindowloadtorequire": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedwaitforwindowconfig": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedstorageinit": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedworkspaceserviceinit": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedsharedprocesconnected": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedrequireduserdatainit": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedotheruserdatainit": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedrequire": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedextensions": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedextensionsready": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedviewletrestore": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedpanelrestore": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsededitorrestore": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedworkbenchcontributions": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "timers.ellapsedworkbench": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "platform": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "release": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "arch": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "totalmem": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "freemem": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "cpus.count": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "cpus.speed": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "cpus.model": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "initialstartup": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "hasaccessibilitysupport": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "isvmlikelyhood": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "emptyworkbench": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "loadavg": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "isarm64emulated": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "meminfo.workingsetsize": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "meminfo.privatebytes": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "meminfo.sharedbytes": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "workspce.tags": {
                "owner": "lramos15",
                "workbench.filestoopenorcreate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workbench.filestodiff": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workbench.filestomerge": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "workspace.roots": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.empty": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.grunt": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gulp": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.jake": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.tsconfig": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.jsconfig": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.config.xml": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.vsc.extension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.asp<NUMBER>": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.sln": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.unity": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.express": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.sails": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.koa": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.hapi": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.socket.io": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.restify": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.next": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.nuxt": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@nestjs/core": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.strapi": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.gatsby": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.rnpm-plugin-windows": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.react": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@angular/core": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.vue": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@anthropic-ai/sdk": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@anthropic-ai/tokenizer": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@arizeai/openinference-instrumentation-langchain": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@arizeai/openinference-instrumentation-openai": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@aws-sdk-client-bedrock-runtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@aws-sdk/client-bedrock": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.aws-sdk": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.aws-amplify-sdk": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/ai": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/core": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/cosmos": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/event": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/identity": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/keyvault": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/search": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/storage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@google-cloud/aiplatform": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.azure": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.azure-storage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@google-cloud/common": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.firebase": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.heroku-cli": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@huggingface/inference": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@microsoft/teams-js": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@microsoft/office-js": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@microsoft/office-js-helpers": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@types/office-js": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@types/office-runtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.office-ui-fabric-react": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@uifabric/icons": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@uifabric/merge-styles": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@uifabric/styling": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@uifabric/experiments": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@uifabric/utilities": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@microsoft/rush": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.lerna": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.just-task": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.beachball": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.electron": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.playwright": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.playwright-cli": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@playwright/test": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.playwright-core": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.playwright-chromium": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.playwright-firefox": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.playwright-webkit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.cypress": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.chroma": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.faiss": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.fireworks-js": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@datastax/astra-db-ts": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.humanloop": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.langchain": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@langchain/anthropic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.langsmith": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.llamaindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@mistralai/mistralai": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.milvus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.mongodb": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.neo4j-driver": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.ollama": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.onnxruntime-node": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.onnxruntime-web": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.openai": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.pinecone": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.postgresql": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.pg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.qdrant": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.redis": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@supabase/supabase-js": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@tensorflow/tfjs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@xenova/transformers": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.weaviate-client": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@zilliz/milvus2-sdk-node": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.nightwatch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.protractor": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.puppeteer": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.selenium-webdriver": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.tika": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.webdriverio": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.gherkin": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/app-configuration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/cosmos-sign": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/cosmos-language-service": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/synapse-spark": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/synapse-monitoring": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/synapse-managed-private-endpoints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/synapse-artifacts": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/synapse-access-control": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/ai-metrics-advisor": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure-rest/ai-anomaly-detector": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure-rest/ai-content-safety": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure-rest/ai-document-intelligence": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure-rest/ai-document-translator": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure-rest/ai-personalizer": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure-rest/ai-translation-text": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure-rest/ai-vision-image-analysis": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/ai-anomaly-detector": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/ai-form-recognizer": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/ai-language-conversations": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/ai-language-text": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/ai-text-analytics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/arm-botservice": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/arm-cognitiveservices": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/arm-machinelearning": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/cognitiveservices-contentmoderator": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/cognitiveservices-customvision-prediction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/cognitiveservices-customvision-training": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/cognitiveservices-face": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/cognitiveservices-translatortext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.microsoft-cognitiveservices-speech-sdk": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/service-bus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/keyvault-secrets": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/keyvault-keys": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/keyvault-certificates": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/keyvault-admin": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/digital-twins-core": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/cognitiveservices-anomalydetector": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/core-xml": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/core-tracing": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/core-paging": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/core-https": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/core-client": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/core-asynciterator-polyfill": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/core-arm": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/amqp-common": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/core-lro": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/logger": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/core-http": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/core-auth": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/core-amqp": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/abort-controller": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/eventgrid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/storage-file-datalake": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/search-documents": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/storage-file": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/storage-datalake": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/storage-queue": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/storage-file-share": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/storage-blob-changefeed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/storage-blob": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/cognitiveservices-formrecognizer": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/cognitiveservices-textanalytics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/event-processor-host": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/schema-registry-avro": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/schema-registry": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/eventhubs-checkpointstore-blob": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/event-hubs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/communication-signaling": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/communication-calling": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/communication-sms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/communication-common": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/communication-chat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/communication-administration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/attestation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/data-tables": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure-rest/ai-inference": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure-rest/arm-appservice": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/arm-appservice": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/arm-appcontainers": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/arm-rediscache": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/arm-redisenterprisecache": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/arm-apimanagement": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/arm-logic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/arm-dashboard": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/arm-signalr": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/arm-securitydevops": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/arm-labservices": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/web-pubsub": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/web-pubsub-client": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/web-pubsub-client-protobuf": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/web-pubsub-express": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/openai": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/arm-hybridkubernetes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@azure/arm-kubernetesconfiguration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.react-native-macos": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.react-native-windows": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.npm.@google/generative-ai": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.bower": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.yeoman.code.ext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.cordova.high": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.cordova.low": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.xamarin.android": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.xamarin.ios": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.android.cpp": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.reactnative": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.ionic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": "true"
                },
                "workspace.nativescript": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": "true"
                },
                "workspace.java.pom": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.java.gradle": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.java.android": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.azure": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.javaee": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.jdbc": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.jpa": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.lombok": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.mockito": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.redis": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.springboot": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.sql": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.unittest": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.azure-cosmos": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.azure-storage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.azure-servicebus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.azure-eventhubs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.langchain4j": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.springboot-ai": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.semantic-kernel": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.azure-ai-anomalydetector": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.azure-ai-formrecognizer": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.azure-ai-documentintelligence": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.azure-ai-translation-document": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.azure-ai-personalizer": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.azure-ai-translation-text": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.azure-ai-contentsafety": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.azure-ai-vision-imageanalysis": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.azure-ai-textanalytics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.azure-search-documents": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.azure-ai-documenttranslator": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.azure-ai-vision-face": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.azure-ai-openai-assistants": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.azure-cognitiveservices": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.azure-cognitiveservices-speech": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.openai": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.azure-openai": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.azure-functions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.quarkus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.microprofile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.micronaut": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.gradle.graalvm": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.azure": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.javaee": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.jdbc": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.jpa": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.lombok": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.mockito": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.redis": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.springboot": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.sql": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.unittest": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.azure-cosmos": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.azure-storage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.azure-servicebus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.azure-eventhubs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.langchain4j": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.springboot-ai": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.semantic-kernel": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.azure-ai-anomalydetector": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.azure-ai-formrecognizer": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.azure-ai-documentintelligence": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.azure-ai-translation-document": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.azure-ai-personalizer": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.azure-ai-translation-text": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.azure-ai-contentsafety": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.azure-ai-vision-imageanalysis": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.azure-ai-textanalytics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.azure-search-documents": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.azure-ai-documenttranslator": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.azure-ai-vision-face": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.azure-ai-openai-assistants": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.azure-cognitiveservices": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.azure-cognitiveservices-speech": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.openai": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.azure-openai": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.azure-functions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.quarkus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.microprofile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.micronaut": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.pom.graalvm": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.requirements": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.requirements.star": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.pipfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.conda": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.setup": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.pyproject": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.manage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.setupcfg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.app": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.any-azure": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.pulumi-azure": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-ai": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-ai-inference": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-ai-language-conversations": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-ai-language-questionanswering": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-ai-ml": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-ai-contentsafety": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-ai-documentintelligence": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-ai-translation-text": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-ai-vision": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-cognitiveservices-language-luis": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-cognitiveservices-speech": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-cognitiveservices-vision-contentmoderator": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-cognitiveservices-vision-face": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-mgmt-cognitiveservices": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-mgmt-search": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-ai-translation-document": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-cognitiveservices": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-core": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-cosmos": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-devtools": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-elasticluster": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-event": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-eventgrid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-functions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-graphrbac": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-identity": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-iothub-device-client": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-keyvault": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-loganalytics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-mgmt": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-ml": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-monitor": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-mgmt-appcontainers": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-mgmt-redis": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-mgmt-redisenterprise": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-mgmt-apimanagement": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-mgmt-logic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-appconfiguration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-appconfiguration-provider": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-mgmt-appconfiguration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-mgmt-dashboard": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-mgmt-signalr": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-messaging-webpubsubservice": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-mgmt-webpubsub": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-mgmt-securitydevops": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-mgmt-labservices": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-mgmt-web": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-search": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-servicebus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-servicefabric": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-shell": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-storage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-translator": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-mgmt-hybridkubernetes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-mgmt-kubernetesconfiguration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.adal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.pydocumentdb": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.botbuilder-core": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.botbuilder-schema": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.botframework-connector": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.playwright": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-synapse-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-synapse-spark": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-synapse-artifacts": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-synapse-accesscontrol": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-synapse": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-cognitiveservices-vision-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-cognitiveservices-search-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-cognitiveservices-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-cognitiveservices-language-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-cognitiveservices-knowledge-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-containerregistry": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-ai-metricsadvisor": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azureml-sdk": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-keyvault-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-keyvault-secrets": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-keyvault-keys": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-keyvault-certificates": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-keyvault-administration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-digitaltwins-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-digitaltwins-core": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-cognitiveservices-anomalydetector": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-ai-anomalydetector": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-applicationinsights": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-core-tracing-opentelemetry": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-core-tracing-opencensus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-common": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-storage-file-datalake": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-search-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-search-documents": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-storage-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-storage-file": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-storage-common": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-storage-queue": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-storage-file-share": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-storage-blob-changefeed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-storage-blob": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-cognitiveservices-formrecognizer": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-ai-formrecognizer": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-ai-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-cognitiveservices-language-textanalytics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-ai-textanalytics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-schemaregistry-avroserializer": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-schemaregistry": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-eventhub-checkpointstoreblob-aio": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-eventhub-checkpointstoreblob": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-eventhub": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-communication-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-communication-sms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-communication-chat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-communication-administration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-security-attestation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-communication-identity": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-communication-phonenumbers": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-communication-email": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-communication-rooms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-communication-callautomation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-confidentialledger": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-iot-deviceupdate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-developer-loadtesting": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-monitor-query": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-monitor-ingestion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-schemaregistry-avroencoder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-data-nspkg": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.azure-data-tables": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.arize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.aporia": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.anthropic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.deepchecks": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.fireworks-ai": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.transformers": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.humanloop": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.langchain": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.langchain-anthropic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.langchain-fireworks": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.langchain-huggingface": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.llama-index": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.google-cloud-aiplatform": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.guidance": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.ollama": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.onnxruntime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.openai": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.pymongo": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.pgvector": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.semantic-kernel": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.sentence-transformers": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.tika": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.trulens": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.trulens-eval": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.wandb": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.py.google-generativeai": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/storage/azblob": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/storage/azfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/storage/azqueue": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/storage/azdatalake": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/tracing/azotel": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/security/keyvault/azadmin": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/security/keyvault/azcertificates": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/security/keyvault/azkeys": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/security/keyvault/azsecrets": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/monitor/azquery": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/monitor/azingest": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/messaging/azeventhubs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/messaging/azservicebus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/data/azappconfig": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/data/azcosmos": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/data/aztables": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/containers/azcontainerregistry": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/ai/azopenai": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/azidentity": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/azcore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/iotfirmwaredefense/armiotfirmwaredefense": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/aad/armaad": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/addons/armaddons": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/advisor/armadvisor": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/agrifood/armagrifood": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/alertsmanagement/armalertsmanagement": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/analysisservices/armanalysisservices": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/apimanagement/armapimanagement": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/appcomplianceautomation/armappcomplianceautomation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/appconfiguration/armappconfiguration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/appplatform/armappplatform": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/appservice/armappservice": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/applicationinsights/armapplicationinsights": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/azurearcdata/armazurearcdata": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/attestation/armattestation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/authorization/armauthorization": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/automanage/armautomanage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/automation/armautomation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/azuredata/armazuredata": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/azurestackhci/armazurestackhci": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/avs/armavs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/recoveryservices/armrecoveryservicesbackup": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/baremetalinfrastructure/armbaremetalinfrastructure": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/batch/armbatch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/billing/armbilling": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/billingbenefits/armbillingbenefits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/blockchain/armblockchain": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/blueprint/armblueprint": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/botservice/armbotservice": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/changeanalysis/armchangeanalysis": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/resources/armchanges": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/chaos/armchaos": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/search/armsearch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/cognitiveservices/armcognitiveservices": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/commerce/armcommerce": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/communication/armcommunication": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/confidentialledger/armconfidentialledger": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/confluent/armconfluent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/connectedvmware/armconnectedvmware": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/consumption/armconsumption": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/appcontainers/armappcontainers": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/containerinstance/armcontainerinstance": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/containerregistry/armcontainerregistry": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/containerservice/armcontainerservice": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/containerservicefleet/armcontainerservicefleet": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/cdn/armcdn": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/cosmos/armcosmos": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/cosmosforpostgresql/armcosmosforpostgresql": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/costmanagement/armcostmanagement": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/customproviders/armcustomproviders": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/customerinsights/armcustomerinsights": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/customerlockbox/armcustomerlockbox": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/databox/armdatabox": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/databoxedge/armdataboxedge": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/datacatalog/armdatacatalog": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/datafactory/armdatafactory": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/datalake-analytics/armdatalakeanalytics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/datalake-store/armdatalakestore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/datamigration/armdatamigration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/dataprotection/armdataprotection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/datashare/armdatashare": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/databricks/armdatabricks": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/datadog/armdatadog": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/delegatednetwork/armdelegatednetwork": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/deploymentmanager/armdeploymentmanager": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/resources/armdeploymentscripts": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/desktopvirtualization/armdesktopvirtualization": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/devcenter/armdevcenter": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/devhub/armdevhub": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/deviceprovisioningservices/armdeviceprovisioningservices": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/deviceupdate/armdeviceupdate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/devops/armdevops": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/devtestlabs/armdevtestlabs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/digitaltwins/armdigitaltwins": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/dns/armdns": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/dnsresolver/armdnsresolver": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/domainservices/armdomainservices": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/dynatrace/armdynatrace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/edgeorder/armedgeorder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/edgeorderpartner/armedgeorderpartner": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/education/armeducation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/elastic/armelastic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/elasticsan/armelasticsan": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/elasticsans/armelasticsans": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/engagementfabric/armengagementfabric": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/eventgrid/armeventgrid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/eventhub/armeventhub": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/extendedlocation/armextendedlocation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/resources/armfeatures": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/fluidrelay/armfluidrelay": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/frontdoor/armfrontdoor": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/graphservices/armgraphservices": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/guestconfiguration/armguestconfiguration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/hanaonazure/armhanaonazure": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/hardwaresecuritymodules/armhardwaresecuritymodules": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/hdinsight/armhdinsight": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/healthbot/armhealthbot": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/healthcareapis/armhealthcareapis": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/hybridcompute/armhybridcompute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/hybridconnectivity/armhybridconnectivity": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/hybridcontainerservice/armhybridcontainerservice": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/hybriddatamanager/armhybriddatamanager": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/hybridkubernetes/armhybridkubernetes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/hybridnetwork/armhybridnetwork": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/iotcentral/armiotcentral": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/iothub/armiothub": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/iotsecurity/armiotsecurity": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/keyvault/armkeyvault": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/kubernetesconfiguration/armkubernetesconfiguration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/kusto/armkusto": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/labservices/armlabservices": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/resources/armlinks": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/loadtesting/armloadtesting": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/resources/armlocks": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/operationalinsights/armoperationalinsights": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/logic/armlogic": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/logz/armlogz": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/m365securityandcompliance/armm365securityandcompliance": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/machinelearning/armmachinelearning": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/machinelearningservices/armmachinelearningservices": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/maintenance/armmaintenance": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/resources/armmanagedapplications": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/solutions/armmanagedapplications": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/dashboard/armdashboard": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/managednetwork/armmanagednetwork": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/managednetworkfabric/armmanagednetworkfabric": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/msi/armmsi": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/managedservices/armmanagedservices": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/managementgroups/armmanagementgroups": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/managementpartner/armmanagementpartner": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/maps/armmaps": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/mariadb/armmariadb": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/marketplace/armmarketplace": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/marketplaceordering/armmarketplaceordering": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/mediaservices/armmediaservices": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/migrate/armmigrate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/mixedreality/armmixedreality": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/mobilenetwork/armmobilenetwork": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/monitor/armmonitor": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/mysql/armmysql": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/mysql/armmysqlflexibleservers": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/netapp/armnetapp": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/networkcloud/armnetworkcloud": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/networkfunction/armnetworkfunction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/newrelic/armnewrelicobservability": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/nginx/armnginx": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/notificationhubs/armnotificationhubs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/oep/armoep": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/operationsmanagement/armoperationsmanagement": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/orbital/armorbital": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/paloaltonetworksngfw/armpanngfw": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/peering/armpeering": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/resources/armpolicy": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/policyinsights/armpolicyinsights": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/portal/armportal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/postgresql/armpostgresql": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/postgresql/armpostgresqlflexibleservers": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/postgresqlhsc/armpostgresqlhsc": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/powerbiprivatelinks/armpowerbiprivatelinks": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/powerbidedicated/armpowerbidedicated": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/powerbiembedded/armpowerbiembedded": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/powerplatform/armpowerplatform": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/privatedns/armprivatedns": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/providerhub/armproviderhub": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/purview/armpurview": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/quantum/armquantum": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/liftrqumulo/armqumulo": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/quota/armquota": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/recoveryservices/armrecoveryservices": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/redhatopenshift/armredhatopenshift": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/redis/armredis": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/redisenterprise/armredisenterprise": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/relay/armrelay": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/reservations/armreservations": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/resourceconnector/armresourceconnector": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/resourcegraph/armresourcegraph": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/resourcehealth/armresourcehealth": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/resourcemover/armresourcemover": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/resources/armresources": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/saas/armsaas": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/scheduler/armscheduler": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/scvmm/armscvmm": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/security/armsecurity": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/securitydevops/armsecuritydevops": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/securityinsight/armsecurityinsight": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/securityinsights/armsecurityinsights": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/selfhelp/armselfhelp": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/serialconsole/armserialconsole": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/servicebus/armservicebus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/servicefabric/armservicefabric": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/servicefabricmesh/armservicefabricmesh": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/servicelinker/armservicelinker": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/servicenetworking/armservicenetworking": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/signalr/armsignalr": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/recoveryservices/armrecoveryservicessiterecovery": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/sphere/armsphere": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/sql/armsql": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/sqlvirtualmachine/armsqlvirtualmachine": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/storage/armstorage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/storagecache/armstoragecache": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/storageimportexport/armstorageimportexport": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/storagemover/armstoragemover": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/storagepool/armstoragepool": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/storagesync/armstoragesync": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/storsimple1200series/armstorsimple1200series": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/storsimple8000series/armstorsimple8000series": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/streamanalytics/armstreamanalytics": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/resources/armsubscriptions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/subscription/armsubscription": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/support/armsupport": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/synapse/armsynapse": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/resources/armtemplatespecs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/testbase/armtestbase": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/timeseriesinsights/armtimeseriesinsights": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/trafficmanager/armtrafficmanager": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/web/armweb": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/webpubsub/armwebpubsub": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/windowsesu/armwindowsesu": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/windowsiot/armwindowsiot": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/workloadmonitor/armworkloadmonitor": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "workspace.go.mod.github.com/azure/azure-sdk-for-go/sdk/resourcemanager/workloads/armworkloads": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "workspace.remotes": {
                "owner": "lramos15",
                "domains": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "workspace.azure": {
                "owner": "lramos15",
                "node": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "java": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "languagePackSuggestion:popup": {
                "owner": "TylerLeonhardt",
                "userreaction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "language": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "debug/didViewMemory": {
                "owner": "connor4312",
                "debugtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "debugSessionStart": {
                "owner": "connor4312",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "breakpointcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "exceptionbreakpoints": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "watchexpressionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "extensionname": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "isbuiltin": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "launchjsonexists": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "debugSessionStop": {
                "owner": "connor4312",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "success": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "sessionlengthinseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "breakpointcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "watchexpressionscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "editorOpened": {
                "owner": "isidorn",
                "target": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "typeid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "resource.mimetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "resource.scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "resource.ext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "resource.path": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "resourcesecondary.mimetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "resourcesecondary.scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "resourcesecondary.ext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "resourcesecondary.path": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "extensions:action:install": {
                "owner": "sandy081",
                "actionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "extensionversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "galleryid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publishername": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherdisplayname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "isprereleaseversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "dependencies": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "issigned": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "index": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "querysource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "queryactivityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "extensionGallery:install:recommendations": {
                "owner": "sandy081",
                "recommendationreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "extensionversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "galleryid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publishername": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherdisplayname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "isprereleaseversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "dependencies": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "issigned": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "index": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "querysource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "queryactivityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "extensionGallery:openExtension": {
                "owner": "sandy081",
                "recommendationreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "extensionversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "galleryid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publishername": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherdisplayname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "isprereleaseversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "dependencies": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "issigned": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "index": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "querysource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "queryactivityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "searchResultsFirstRender": {
                "owner": "roblourens",
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "searchResultsFinished": {
                "owner": "roblourens",
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "searchResultsShown": {
                "owner": "roblourens",
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "filecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "searchontypeenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "options.isregexp": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "options.iswordmatch": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "options.wordseparators": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "options.ismultiline": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "options.iscasesensitive": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "options.issmartcase": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "terminalLatencyStats": {
                "owner": "Tyriar",
                "min": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "max": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "median": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "predictionaccuracy": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "galleryService:downloadVSIX": {
                "owner": "sandy081",
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "extensionversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "galleryid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publishername": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherdisplayname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "isprereleaseversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "dependencies": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "issigned": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "index": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "querysource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "queryactivityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "extensionGallery:install": {
                "owner": "sandy081",
                "success": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "durationsinceupdate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "errorcode": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "recommendationreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "verificationstatus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "extensionversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "galleryid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publishername": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherdisplayname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "isprereleaseversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "dependencies": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "issigned": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "index": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "querysource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "queryactivityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "extensionGallery:uninstall": {
                "owner": "sandy081",
                "success": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "errorcode": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "extensionversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "galleryid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publishername": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherdisplayname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "isprereleaseversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "dependencies": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "issigned": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "index": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "querysource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "queryactivityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "extensionGallery:update": {
                "owner": "sandy081",
                "success": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "errorcode": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "verificationstatus": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "extensionversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "galleryid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publishername": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "publisherdisplayname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "isprereleaseversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "dependencies": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "issigned": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "index": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "querysource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "queryactivityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "workbenchActionExecuted": {
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifier of the action that was run.",
                    "endPoint": "none"
                },
                "from": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the component the action was run from.",
                    "endPoint": "none"
                },
                "detail": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Optional details about how the action was run, e.g which keybinding was used.",
                    "endPoint": "none"
                },
                "owner": "isidorn",
                "comment": "Provides insight into actions that are executed within the workbench."
            },
            "NotebookCellOutputRender": {
                "owner": "amunger",
                "comment": "Track performance data for output rendering",
                "outputsize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Size of the output data buffer.",
                    "isMeasurement": true,
                    "endPoint": "none"
                },
                "rendertime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time spent rendering output.",
                    "isMeasurement": true,
                    "endPoint": "none"
                }
            },
            "chat.clickedSuggestedPrompt": {
                "owner": "bhavyaus",
                "comment": "Event used to gain insights into when suggested prompts are clicked.",
                "suggestedprompt": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The suggested prompt clicked.",
                    "endPoint": "none"
                }
            },
            "openedChatCodeCitations": {
                "owner": "roblourens",
                "comment": "Indicates when a user opens chat code citations"
            },
            "chat/selectedTools": {
                "owner": "connor4312",
                "comment": "Details the capabilities of the MCP server",
                "enabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of enabled chat tools",
                    "endPoint": "none"
                },
                "total": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of total chat tools",
                    "endPoint": "none"
                }
            },
            "chat.undoEditsConfirmation": {
                "owner": "justschen",
                "comment": "Event used to gain insights into when there are pending changes to undo, and whether edited requests are applied or cancelled.",
                "editrequesttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Current entry point for editing a request.",
                    "endPoint": "none"
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the edit was cancelled or applied.",
                    "endPoint": "none"
                },
                "editsundocount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of edits that would be undone.",
                    "isMeasurement": true,
                    "endPoint": "none"
                }
            },
            "asyncTokenizationMismatchingTokens": {
                "owner": "hediet",
                "comment": "Used to see if async tokenization is bug-free"
            },
            "terminal.suggest.completionLatency": {
                "owner": "meganrogge",
                "comment": "Latency in ms from terminal completion request to completions shown.",
                "sessionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The session ID of the terminal session.",
                    "endPoint": "none"
                },
                "latency": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The latency in milliseconds.",
                    "endPoint": "none"
                },
                "firstwindow": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the first ever showing of completions in the window.",
                    "endPoint": "none"
                },
                "firstshell": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether this is the first ever showing of completions in the shell.",
                    "endPoint": "none"
                }
            },
            "terminal.suggest.acceptedCompletion": {
                "owner": "meganrogge",
                "comment": "This data is collected to understand the outcome of a terminal completion acceptance.",
                "kind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The completion item's kind",
                    "endPoint": "none"
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The outcome of the accepted completion",
                    "endPoint": "none"
                },
                "exitcode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The exit code from the command",
                    "endPoint": "none"
                },
                "sessionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The session ID of the terminal session where the completion was accepted",
                    "endPoint": "none"
                },
                "provider": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the provider that supplied the completion",
                    "endPoint": "none"
                }
            },
            "terminal/quick-fix": {
                "owner": "meganrogge",
                "quickfixid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The quick fix ID",
                    "endPoint": "none"
                },
                "ranquickfix": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the quick fix was run",
                    "endPoint": "none"
                },
                "sessionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The terminal session ID",
                    "endPoint": "none"
                },
                "comment": "Terminal quick fixes"
            },
            "terminal/openLink": {
                "owner": "tyriar",
                "comment": "When the user opens a link in the terminal",
                "linktype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of link being opened",
                    "endPoint": "none"
                }
            },
            "testing.expandOlderResults": {
                "owner": "connor4312",
                "comment": "Records that test history was used"
            },
            "treeSitter.fullParse": {
                "owner": "alexr00",
                "comment": "Used to understand how long it takes to parse a tree-sitter tree",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The programming language ID.",
                    "endPoint": "none"
                },
                "time": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The ms it took to parse",
                    "endPoint": "none"
                },
                "passes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The number of passes it took to parse",
                    "endPoint": "none"
                }
            },
            "treeSitter.incrementalParse": {
                "owner": "alexr00",
                "comment": "Used to understand how long it takes to parse a tree-sitter tree",
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The programming language ID.",
                    "endPoint": "none"
                },
                "time": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The ms it took to parse",
                    "endPoint": "none"
                },
                "passes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "isMeasurement": true,
                    "comment": "The number of passes it took to parse",
                    "endPoint": "none"
                }
            },
            "inlineCompletionHover.shown": {
                "owner": "hediet",
                "comment": "This event tracks whenever an inline completion hover is shown."
            },
            "Extension:ViewActivate": {
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the extension",
                    "endPoint": "none"
                },
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the view",
                    "endPoint": "none"
                },
                "owner": "digitarald",
                "comment": "Helps to gain insights on what extension contributed views are most popular"
            },
            "diffEditor.editorVisibleTime": {
                "owner": "hediet",
                "editorvisibletimems": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates the time the diff editor was visible to the user",
                    "endPoint": "none"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates for which language the diff editor was shown",
                    "endPoint": "none"
                },
                "collapseunchangedregions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates whether unchanged regions were collapsed",
                    "endPoint": "none"
                },
                "comment": "This event gives insight about how long the diff editor was visible to the user."
            },
            "automaticlanguagedetection.likelywrong": {
                "owner": "TylerLeonhardt",
                "comment": "Used to determine how often language detection is likely wrong.",
                "currentlanguageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language id we guessed.",
                    "endPoint": "none"
                },
                "nextlanguageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language id the user chose.",
                    "endPoint": "none"
                },
                "linecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of lines in the file.",
                    "endPoint": "none"
                },
                "modelpreference": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "What the user's model preference is.",
                    "endPoint": "none"
                }
            },
            "setUntitledDocumentLanguage": {
                "owner": "TylerLeonhardt",
                "comment": "Helps understand what the automatic language detection does for untitled files",
                "to": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "TylerLeonhardt",
                    "comment": "Help understand effectiveness of automatic language detection",
                    "endPoint": "none"
                },
                "from": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "TylerLeonhardt",
                    "comment": "Help understand effectiveness of automatic language detection",
                    "endPoint": "none"
                },
                "modelpreference": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "owner": "TylerLeonhardt",
                    "comment": "Help understand effectiveness of automatic language detection",
                    "endPoint": "none"
                }
            },
            "workbenchEditorReopen": {
                "owner": "rebornix",
                "comment": "Identify how a document is reopened",
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File system provider scheme for the resource",
                    "endPoint": "none"
                },
                "ext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File extension for the resource",
                    "endPoint": "none"
                },
                "from": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The editor view type the resource is switched from",
                    "endPoint": "none"
                },
                "to": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The editor view type the resource is switched to",
                    "endPoint": "none"
                }
            },
            "diffEditor.computeDiff": {
                "owner": "hediet",
                "timems": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "To understand if the new diff algorithm is slower/faster than the old one",
                    "endPoint": "none"
                },
                "timedout": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "To understand how often the new diff algorithm times out",
                    "endPoint": "none"
                },
                "detectedmoves": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "To understand how often the new diff algorithm detects moves",
                    "endPoint": "none"
                },
                "comment": "This event gives insight about the performance of the new diff algorithm."
            },
            "terminal/shellIntegrationActivationSucceeded": {
                "owner": "meganrogge",
                "comment": "Indicates shell integration was activated"
            },
            "terminal/shellIntegrationActivationTimeout": {
                "owner": "meganrogge",
                "comment": "Indicates shell integration activation timeout"
            },
            "bracketPairColorizerTwoUsage": {
                "owner": "hediet",
                "nativecolorizationenabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether or not built-in bracket pair colorization is being used",
                    "endPoint": "none"
                },
                "comment": "We use this to understand how many users have the bracket pair colorizer extension installed (and how many of them have native bracket pair colorization enabled), as the extension does not do anything if native bracket pair colorization is enabled."
            },
            "ManageExtensionClick": {
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension the user went to manage.",
                    "endPoint": "none"
                },
                "owner": "rzhao271",
                "comment": "Event used to gain insights into when users interact with an extension management setting"
            },
            "DismissExtensionClick": {
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension the user went to manage.",
                    "endPoint": "none"
                },
                "owner": "rzhao271",
                "comment": "Event used to gain insights into when users interact with an extension management setting"
            },
            "settingsEditor.settingModified": {
                "key": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The setting that is being modified.",
                    "endPoint": "none"
                },
                "groupid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the setting is from the local search or remote search provider, if applicable.",
                    "endPoint": "none"
                },
                "providername": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the search provider, if applicable.",
                    "endPoint": "none"
                },
                "nlpindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The index of the setting in the remote search provider results, if applicable.",
                    "endPoint": "none"
                },
                "displayindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The index of the setting in the combined search results, if applicable.",
                    "endPoint": "none"
                },
                "showconfiguredonly": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user is in the modified view, which shows configured settings only.",
                    "endPoint": "none"
                },
                "isreset": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Identifies whether a setting was reset to its default value.",
                    "endPoint": "none"
                },
                "target": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The scope of the setting, such as user or workspace.",
                    "endPoint": "none"
                },
                "owner": "rzhao271",
                "comment": "Event emitted when the user modifies a setting in the Settings editor"
            },
            "languageModelToolInvoked": {
                "result": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether invoking the LanguageModelTool resulted in an error.",
                    "endPoint": "none"
                },
                "chatsessionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the chat session that the tool was used within, if applicable.",
                    "endPoint": "none"
                },
                "toolid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the tool used.",
                    "endPoint": "none"
                },
                "toolextensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension that contributed the tool.",
                    "endPoint": "none"
                },
                "toolsourcekind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source (mcp/extension/internal) of the tool.",
                    "endPoint": "none"
                },
                "owner": "roblourens",
                "comment": "Provides insight into the usage of language model tools."
            },
            "chat.startEditingRequests": {
                "owner": "justschen",
                "comment": "Event used to gain insights into when edits are being pressed.",
                "editrequesttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Current entry point for editing a request.",
                    "endPoint": "none"
                }
            },
            "chat.editRequestsFinished": {
                "owner": "justschen",
                "editrequesttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Current entry point for editing a request.",
                    "endPoint": "none"
                },
                "editcanceled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates whether the edit was canceled.",
                    "endPoint": "none"
                },
                "comment": "Event used to gain insights into when edits are being canceled."
            },
            "chatEditing/workingSetSize": {
                "owner": "joyceerhl",
                "comment": "Information about the working set size in a chat editing request",
                "originalsize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of files that the user tried to attach in their editing request.",
                    "endPoint": "none"
                },
                "actualsize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of files that were actually sent in their editing request.",
                    "endPoint": "none"
                }
            },
            "chatStatus.settingChanged": {
                "owner": "bpasero",
                "comment": "Provides insight into chat settings changed from the chat status entry.",
                "settingidentifier": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifier of the setting that changed.",
                    "endPoint": "none"
                },
                "settingmode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The optional editor language for which the setting changed.",
                    "endPoint": "none"
                },
                "settingenablement": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the setting got enabled or disabled.",
                    "endPoint": "none"
                }
            },
            "commandCenter.chatInstall": {
                "owner": "bpasero",
                "comment": "Provides insight into chat installation.",
                "installresult": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the extension was installed successfully, cancelled or failed to install.",
                    "endPoint": "none"
                },
                "installduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The duration it took to install the extension.",
                    "endPoint": "none"
                },
                "signuperrorcode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The error code in case of an error signing up.",
                    "endPoint": "none"
                }
            },
            "copilot.attachImage": {
                "currentmodel": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model at the point of attaching the image.",
                    "endPoint": "none"
                },
                "supportsvision": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the current model supports vision or not.",
                    "endPoint": "none"
                },
                "owner": "justschen",
                "comment": "Event used to gain insights when images are attached, and if the model supported vision or not."
            },
            "chatSessionStoreError": {
                "owner": "roblourens",
                "comment": "Detect issues related to managing chat sessions",
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Info about the error that occurred",
                    "endPoint": "none"
                },
                "fileoperationreason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "An error code from the file service",
                    "endPoint": "none"
                }
            },
            "interactiveSessionVote": {
                "direction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user voted up or down.",
                    "endPoint": "none"
                },
                "agentid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the chat agent that this vote is for.",
                    "endPoint": "none"
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the slash command that this vote is for.",
                    "endPoint": "none"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The reason selected by the user for voting down.",
                    "endPoint": "none"
                },
                "owner": "roblourens",
                "comment": "Provides insight into the performance of Chat agents."
            },
            "interactiveSessionCopy": {
                "copykind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How the copy was initiated.",
                    "endPoint": "none"
                },
                "agentid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the chat agent that the copy acted on.",
                    "endPoint": "none"
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the slash command the copy acted on.",
                    "endPoint": "none"
                },
                "owner": "roblourens",
                "comment": "Provides insight into the usage of Chat features."
            },
            "interactiveSessionInsert": {
                "newfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the code was inserted into a new untitled file.",
                    "endPoint": "none"
                },
                "agentid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the chat agent that this insertion is for.",
                    "endPoint": "none"
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the slash command that this insertion is for.",
                    "endPoint": "none"
                },
                "owner": "roblourens",
                "comment": "Provides insight into the usage of Chat features."
            },
            "interactiveSessionApply": {
                "newfile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the code was inserted into a new untitled file.",
                    "endPoint": "none"
                },
                "agentid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the chat agent that this insertion is for.",
                    "endPoint": "none"
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the slash command that this insertion is for.",
                    "endPoint": "none"
                },
                "codemapper": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The code mapper that wa used to compute the edit.",
                    "endPoint": "none"
                },
                "editsproposed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether there was a change proposed to the user.",
                    "endPoint": "none"
                },
                "owner": "aeschli",
                "comment": "Provides insight into the usage of Chat features."
            },
            "interactiveSessionRunInTerminal": {
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language of the code that was run in the terminal.",
                    "endPoint": "none"
                },
                "agentid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the related chat agent.",
                    "endPoint": "none"
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the related slash command.",
                    "endPoint": "none"
                },
                "owner": "roblourens",
                "comment": "Provides insight into the usage of Chat features."
            },
            "chatFollowupClicked": {
                "agentid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the related chat agent.",
                    "endPoint": "none"
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the related slash command.",
                    "endPoint": "none"
                },
                "owner": "roblourens",
                "comment": "Provides insight into the usage of Chat features."
            },
            "chatFollowupsRetrieved": {
                "agentid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the related chat agent.",
                    "endPoint": "none"
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the related slash command.",
                    "endPoint": "none"
                },
                "numfollowups": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of followup prompts returned by the agent.",
                    "endPoint": "none"
                },
                "owner": "roblourens",
                "comment": "Provides insight into the usage of Chat features."
            },
            "interactiveSessionProviderInvoked": {
                "timetofirstprogress": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The time in milliseconds from invoking the provider to getting the first data.",
                    "endPoint": "none"
                },
                "totaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The total time it took to run the provider's `provideResponseWithProgress`.",
                    "endPoint": "none"
                },
                "result": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether invoking the ChatProvider resulted in an error.",
                    "endPoint": "none"
                },
                "requesttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of request that the user made.",
                    "endPoint": "none"
                },
                "chatsessionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A random ID for the session.",
                    "endPoint": "none"
                },
                "agent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of agent used.",
                    "endPoint": "none"
                },
                "agentextensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension that contributed the agent.",
                    "endPoint": "none"
                },
                "slashcommand": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of slashCommand used.",
                    "endPoint": "none"
                },
                "location": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The location at which chat request was made.",
                    "endPoint": "none"
                },
                "citations": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of public code citations that were returned with the response.",
                    "endPoint": "none"
                },
                "numcodeblocks": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of code blocks in the response.",
                    "endPoint": "none"
                },
                "isparticipantdetected": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the participant was automatically detected.",
                    "endPoint": "none"
                },
                "enablecommanddetection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether participation detection was disabled for this invocation.",
                    "endPoint": "none"
                },
                "attachmentkinds": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The types of variables/attachments that the user included with their query.",
                    "endPoint": "none"
                },
                "model": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The model used to generate the response.",
                    "endPoint": "none"
                },
                "owner": "roblourens",
                "comment": "Provides insight into the performance of Chat agents."
            },
            "chatInstallEntitlement": {
                "tid": {
                    "classification": "EndUserPseudonymizedInformation",
                    "purpose": "BusinessInsight",
                    "comment": "The anonymized analytics id returned by the service",
                    "endpoint": "GoogleAnalyticsId",
                    "endPoint": "none"
                },
                "entitlement": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Flag indicating the chat entitlement state",
                    "endPoint": "none"
                },
                "quotachat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of chat requests available to the user",
                    "endPoint": "none"
                },
                "quotapremiumchat": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of premium chat requests available to the user",
                    "endPoint": "none"
                },
                "quotacompletions": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of code completions available to the user",
                    "endPoint": "none"
                },
                "quotaresetdate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The date the quota will reset",
                    "endPoint": "none"
                },
                "owner": "bpasero",
                "comment": "Reporting chat entitlements"
            },
            "mergeEditor.opened": {
                "owner": "hediet",
                "conflictcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "To understand how many conflicts typically occur",
                    "endPoint": "none"
                },
                "combinableconflictcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "To evaluate how useful the smart-merge feature is",
                    "endPoint": "none"
                },
                "basevisible": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "To understand how many users use the base view to solve a conflict",
                    "endPoint": "none"
                },
                "iscolumnview": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "To gain insight which layout should be default",
                    "endPoint": "none"
                },
                "basetop": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "To gain insight which layout should be default for the base view",
                    "endPoint": "none"
                },
                "comment": "This event tracks when a user opens a 3 way merge editor. The associated data helps to fine-tune the merge editor."
            },
            "mergeEditor.layoutChanged": {
                "owner": "hediet",
                "basevisible": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "To understand how many users use the base view to solve a conflict",
                    "endPoint": "none"
                },
                "iscolumnview": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "To gain insight which layout should be default",
                    "endPoint": "none"
                },
                "basetop": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "To gain insight which layout should be default for the base view",
                    "endPoint": "none"
                },
                "comment": "This event tracks when a user changes the layout of the 3 way merge editor. This is useful to understand what layout should be default."
            },
            "mergeEditor.closed": {
                "owner": "hediet",
                "conflictcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "To understand how many conflicts typically occur",
                    "endPoint": "none"
                },
                "combinableconflictcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "To evaluate how useful the smart-merge feature is",
                    "endPoint": "none"
                },
                "durationopenedsecs": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates how long the merge editor was open before it was closed. This can be compared with the inline experience to investigate time savings.",
                    "endPoint": "none"
                },
                "remainingconflictcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates how many conflicts were skipped. Should be zero for a successful merge.",
                    "endPoint": "none"
                },
                "accepted": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the user completed the merge successfully or just closed the editor",
                    "endPoint": "none"
                },
                "conflictsresolvedwithbase": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "To understand how many conflicts are resolved with base",
                    "endPoint": "none"
                },
                "conflictsresolvedwithinput1": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "To understand how many conflicts are resolved with input1",
                    "endPoint": "none"
                },
                "conflictsresolvedwithinput2": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "To understand how many conflicts are resolved with input2",
                    "endPoint": "none"
                },
                "conflictsresolvedwithsmartcombination": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "To understand how many conflicts are resolved with smart combination",
                    "endPoint": "none"
                },
                "manuallysolvedconflictcountthatequalnone": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates how many conflicts were solved manually that are not recognized by the merge editor.",
                    "endPoint": "none"
                },
                "manuallysolvedconflictcountthatequalsmartcombine": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates how many conflicts were solved manually that equal the smart combination of the inputs.",
                    "endPoint": "none"
                },
                "manuallysolvedconflictcountthatequalinput1": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates how many conflicts were solved manually that equal just input 1",
                    "endPoint": "none"
                },
                "manuallysolvedconflictcountthatequalinput2": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates how many conflicts were solved manually that equal just input 2",
                    "endPoint": "none"
                },
                "manuallysolvedconflictcountthatequalnoneandstartedwithbase": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates how many manually solved conflicts that are not recognized started with base",
                    "endPoint": "none"
                },
                "manuallysolvedconflictcountthatequalnoneandstartedwithinput1": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates how many manually solved conflicts that are not recognized started with input1",
                    "endPoint": "none"
                },
                "manuallysolvedconflictcountthatequalnoneandstartedwithinput2": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates how many manually solved conflicts that are not recognized started with input2",
                    "endPoint": "none"
                },
                "manuallysolvedconflictcountthatequalnoneandstartedwithbothnonsmart": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates how many manually solved conflicts that are not recognized started with both (non-smart combination)",
                    "endPoint": "none"
                },
                "manuallysolvedconflictcountthatequalnoneandstartedwithbothsmart": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates how many manually solved conflicts that are not recognized started with both (smart-combination)",
                    "endPoint": "none"
                },
                "comment": "This event tracks when a user closes a merge editor. It also tracks how the user solved the merge conflicts. This data can be used to improve the UX of the merge editor. This event will be fired rarely (less than 200k per week)"
            },
            "mergeEditor.action.accept": {
                "owner": "hediet",
                "otheraccepted": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the user already accepted the other side",
                    "endPoint": "none"
                },
                "isinput1": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the user accepted input 1 or input 2",
                    "endPoint": "none"
                },
                "comment": "This event tracks when a user accepts one side of a conflict."
            },
            "mergeEditor.action.smartCombination": {
                "owner": "hediet",
                "otheraccepted": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the user immediately clicks on accept both or only after the other side has been accepted",
                    "endPoint": "none"
                },
                "comment": "This event tracks when the user clicks on \\\"Accept Both\\\"."
            },
            "mergeEditor.action.remove": {
                "owner": "hediet",
                "otheraccepted": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the user accepted the other side",
                    "endPoint": "none"
                },
                "isinput1": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Indicates if the user accepted input 1 or input 2",
                    "endPoint": "none"
                },
                "comment": "This event tracks when a user un-accepts one side of a conflict."
            },
            "mergeEditor.action.resetToBase": {
                "owner": "hediet",
                "comment": "This event tracks when the user invokes \\\"Reset To Base\\\"."
            },
            "mergeEditor.action.goToNextConflict": {
                "owner": "hediet",
                "comment": "This event tracks when the user navigates to the next conflict\\\"."
            },
            "mergeEditor.action.goToPreviousConflict": {
                "owner": "hediet",
                "comment": "This event tracks when the user navigates to the previous conflict\\\"."
            },
            "mergeEditor.action.conflictCounterClicked": {
                "owner": "hediet",
                "comment": "This event tracks when the user clicks on the conflict counter to navigate to the next conflict."
            },
            "releaseNotesSettingAction": {
                "owner": "alexr00",
                "comment": "Used to understand if the action to update settings from the release notes is used.",
                "settingid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the setting that was clicked on in the release notes",
                    "endPoint": "none"
                }
            },
            "workspaceTrustDisabled": {
                "owner": "sbatten",
                "comment": "Logged when workspace trust is disabled",
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The reason workspace trust is disabled. e.g. cli or setting",
                    "endPoint": "none"
                }
            },
            "workspaceTrustFolderCounts": {
                "owner": "sbatten",
                "comment": "Information about the workspaces trusted on the machine",
                "trustedfolderscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of trusted folders on the machine",
                    "endPoint": "none"
                }
            },
            "workspaceTrustStateChanged": {
                "owner": "sbatten",
                "comment": "Logged when the workspace transitions between trusted and restricted modes",
                "workspaceid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "An id of the workspace",
                    "endPoint": "none"
                },
                "istrusted": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "true if the workspace is trusted",
                    "endPoint": "none"
                }
            },
            "workspaceFolderDepthBelowTrustedFolder": {
                "owner": "sbatten",
                "comment": "Some metrics on the trusted workspaces folder structure",
                "trustedfolderdepth": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of directories deep of the trusted path",
                    "endPoint": "none"
                },
                "workspacefolderdepth": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of directories deep of the workspace path",
                    "endPoint": "none"
                },
                "delta": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The difference between the trusted path and the workspace path directories depth",
                    "endPoint": "none"
                }
            },
            "mcp.addserver": {
                "owner": "digitarald",
                "comment": "Generic details for adding a new MCP server",
                "packagetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of MCP server package",
                    "endPoint": "none"
                }
            },
            "mcp.addserver.completed": {
                "owner": "digitarald",
                "comment": "Generic details for successfully adding model-assisted MCP server",
                "packagetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of MCP server package",
                    "endPoint": "none"
                },
                "servertype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of MCP server",
                    "endPoint": "none"
                },
                "target": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The target of the MCP server configuration",
                    "endPoint": "none"
                }
            },
            "mcp.elicitationRequested": {
                "owner": "connor4312",
                "comment": "Triggered when elictation is requested",
                "servername": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the MCP server",
                    "endPoint": "none"
                },
                "serverversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The version of the MCP server",
                    "endPoint": "none"
                }
            },
            "mcp/serverBootState": {
                "owner": "connor4312",
                "comment": "Details the capabilities of the MCP server",
                "state": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The server outcome",
                    "endPoint": "none"
                },
                "time": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration in milliseconds to reach that state",
                    "endPoint": "none"
                }
            },
            "mcp/serverBoot": {
                "owner": "connor4312",
                "comment": "Details the capabilities of the MCP server",
                "supportslogging": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the server supports logging",
                    "endPoint": "none"
                },
                "supportsprompts": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the server supports prompts",
                    "endPoint": "none"
                },
                "supportsresources": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the server supports resource",
                    "endPoint": "none"
                },
                "toolcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of tools the server advertises",
                    "endPoint": "none"
                },
                "servername": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the MCP server",
                    "endPoint": "none"
                },
                "serverversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The version of the MCP server",
                    "endPoint": "none"
                }
            },
            "terminal/createInstance": {
                "owner": "tyriar",
                "comment": "Track details about terminal creation, such as the shell type",
                "shelltype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The detected shell type for the terminal.",
                    "endPoint": "none"
                },
                "prompttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The detected prompt type for the terminal.",
                    "endPoint": "none"
                },
                "iscustomptyimplementation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the terminal was using a custom PTY implementation.",
                    "endPoint": "none"
                },
                "isextensionownedterminal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the terminal was created by an extension.",
                    "endPoint": "none"
                },
                "isloginshell": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the arguments contain -l or --login.",
                    "endPoint": "none"
                },
                "isreconnect": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the terminal is reconnecting to an existing instance.",
                    "endPoint": "none"
                },
                "shellintegrationquality": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The shell integration quality (rich=2, basic=1 or none=0).",
                    "endPoint": "none"
                },
                "shellintegrationinjected": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the shell integration script was injected.",
                    "endPoint": "none"
                },
                "shellintegrationinjectionfailurereason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Info about shell integration injection.",
                    "endPoint": "none"
                },
                "sessionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The session ID of the terminal instance.",
                    "endPoint": "none"
                }
            },
            "terminal/shellIntegrationActivationFailureCustomArgs": {
                "owner": "meganrogge",
                "comment": "Indicates shell integration was not activated because of custom args"
            },
            "terminal/shellIntegrationFailureProcessExit": {
                "owner": "meganrogge",
                "comment": "Indicates the process exited when created with shell integration args"
            },
            "speechToTextSession": {
                "owner": "bpasero",
                "comment": "An event that fires when a speech to text session is created",
                "context": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Context of the session.",
                    "endPoint": "none"
                },
                "sessionduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of the session.",
                    "endPoint": "none"
                },
                "sessionrecognized": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If speech was recognized.",
                    "endPoint": "none"
                },
                "sessionerror": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If speech resulted in error.",
                    "endPoint": "none"
                },
                "sessioncontentlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Length of the recognized text.",
                    "endPoint": "none"
                },
                "sessionlanguage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Configured language for the session.",
                    "endPoint": "none"
                }
            },
            "textToSpeechSession": {
                "owner": "bpasero",
                "comment": "An event that fires when a text to speech session is created",
                "context": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Context of the session.",
                    "endPoint": "none"
                },
                "sessionduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Duration of the session.",
                    "endPoint": "none"
                },
                "sessionerror": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If speech resulted in error.",
                    "endPoint": "none"
                },
                "sessionlanguage": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Configured language for the session.",
                    "endPoint": "none"
                }
            },
            "keywordRecognition": {
                "owner": "bpasero",
                "comment": "An event that fires when a speech keyword detection is started",
                "keywordrecognized": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the keyword was recognized.",
                    "endPoint": "none"
                }
            },
            "exthostunresponsive": {
                "owner": "jrieken",
                "comment": "Profiling data that was collected while the extension host was unresponsive",
                "profilingsessionid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Identifier of a profiling session",
                    "endPoint": "none"
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Duration for which the extension host was unresponsive",
                    "endPoint": "none"
                },
                "data": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Extensions ids and core parts that were active while the extension host was frozen",
                    "endPoint": "none"
                },
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Top extensions id that took most of the duration",
                    "endPoint": "none"
                }
            },
            "windowsEdition": {
                "owner": "sbatten",
                "comment": "Information about the Windows edition.",
                "edition": {
                    "classification": "SystemMetaData",
                    "purpose": "BusinessInsight",
                    "comment": "The Windows edition.",
                    "endPoint": "none"
                }
            },
            "searchKeywordClick": {
                "owner": "osortega",
                "comment": "Fired when the user clicks on a keyword suggestion",
                "index": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The index of the keyword clicked",
                    "endPoint": "none"
                },
                "maxkeywords": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "The total number of suggested keywords",
                    "endPoint": "none"
                }
            },
            "extensions:missingFromGallery": {
                "owner": "joshspicer",
                "comment": "Report when installed extensions are no longer available in the gallery",
                "queriedids": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Extensions queried as potentially missing from gallery",
                    "endPoint": "none"
                },
                "missingids": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Extensions determined missing from gallery",
                    "endPoint": "none"
                }
            },
            "galleryService:updateMetadata": {
                "owner": "sandy081",
                "comment": "Report when a request is made to update metadata of an installed extension"
            },
            "extensions:updatecheckonproductupdate": {
                "owner": "sandy081",
                "comment": "Report when update check is triggered on product update"
            },
            "installedExtensions": {
                "owner": "digitarald",
                "comment": "Helps to understand which extensions are the most actively used.",
                "extensionids": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The list of extension ids that are installed.",
                    "endPoint": "none"
                },
                "count": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of extensions that are installed.",
                    "endPoint": "none"
                }
            },
            "extensions:autorestart": {
                "owner": "sandy081",
                "comment": "Report when extensions are auto restarted",
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of extensions auto restarted",
                    "endPoint": "none"
                },
                "auto": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the restart was triggered automatically",
                    "endPoint": "none"
                }
            },
            "galleryService:checkingForUpdates": {
                "owner": "sandy081",
                "comment": "Report when a request is made to check for updates of extensions",
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of extensions to check update",
                    "endPoint": "none"
                }
            },
            "extensionsView:MarketplaceSearchFinished": {},
            "extensions:runtimestate:action": {
                "owner": "sandy081",
                "comment": "Extension runtime state action event",
                "action": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Executed action",
                    "endPoint": "none"
                }
            },
            "extensionRecommendations:popup": {
                "owner": "sandy081",
                "comment": "Response information when an extension is recommended",
                "userreaction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "User reaction after showing the recommendation prompt. Eg., install, cancel, show, neverShowAgain",
                    "endPoint": "none"
                },
                "extensionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the extension that is recommended",
                    "endPoint": "none"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source from which this recommendation is coming from. Eg., file, exe.,",
                    "endPoint": "none"
                }
            },
            "extensionWorkspaceRecommendations:popup": {
                "owner": "sandy081",
                "comment": "Response information when a recommendation from workspace is recommended",
                "userreaction": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "User reaction after showing the recommendation prompt. Eg., install, cancel, show, neverShowAgain",
                    "endPoint": "none"
                }
            },
            "test.outcomes": {
                "owner": "connor4312",
                "comment": "Test outcome metrics. This helps us understand magnitude of feature use and how to build fix suggestions.",
                "failures": {
                    "comment": "Number of test failures",
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "passes": {
                    "comment": "Number of test failures",
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "controller": {
                    "comment": "The test controller being used",
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "gettingStarted.didAutoOpenWalkthrough": {
                "owner": "lramos15",
                "comment": "When a walkthrough is opened upon extension installation",
                "id": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "owner": "lramos15",
                    "comment": "Used to understand what walkthroughs are consulted most frequently",
                    "endPoint": "none"
                }
            },
            "gettingStarted.ActionExecuted": {
                "command": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The command being executed on the getting started page.",
                    "endPoint": "none"
                },
                "walkthroughid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The walkthrough which the command is in",
                    "endPoint": "none"
                },
                "argument": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The arguments being passed to the command",
                    "endPoint": "none"
                },
                "owner": "lramos15",
                "comment": "Help understand what actions are most commonly taken on the getting started page"
            },
            "userDataProfile.createFromTemplate": {
                "owner": "sandy081",
                "comment": "Report when profile is about to be created",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Type of profile source",
                    "endPoint": "none"
                }
            },
            "profiles:count": {
                "owner": "sandy081",
                "comment": "Report the number of user profiles excluding the default profile",
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of user profiles excluding the default profile",
                    "endPoint": "none"
                }
            },
            "workspaceProfileInfo": {
                "owner": "sandy081",
                "comment": "Report profile information of the current workspace",
                "workspaceid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A UUID given to a workspace to identify it.",
                    "endPoint": "none"
                },
                "defaultprofile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the profile of the workspace is default or not.",
                    "endPoint": "none"
                }
            },
            "sync/showConflicts": {
                "owner": "sandy081",
                "comment": "Response information when conflict happens during settings sync",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "settings sync resource. eg., settings, keybindings...",
                    "endPoint": "none"
                },
                "action": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "action taken while resolving conflicts. Eg: acceptLocal, acceptRemote",
                    "endPoint": "none"
                }
            },
            "fileWatcherError": {
                "owner": "bpasero",
                "comment": "An event that fires when a watcher errors",
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The watcher error reason.",
                    "endPoint": "none"
                }
            },
            "continueOn.editSessions.pick.outcome": {
                "owner": "joyceerhl",
                "comment": "Reporting the outcome of invoking the Continue On action.",
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The outcome of invoking continue edit session.",
                    "endPoint": "none"
                },
                "hashedid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The hash of the stored edit session id, for correlating success of stores and resumes.",
                    "endPoint": "none"
                }
            },
            "continueOn.editSessions.store": {
                "owner": "joyceerhl",
                "comment": "Reporting when storing an edit session as part of the Continue On flow."
            },
            "continueOn.editSessions.store.outcome": {
                "owner": "joyceerhl",
                "comment": "Reporting the outcome of invoking the Continue On action.",
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The outcome of invoking continue edit session.",
                    "endPoint": "none"
                },
                "hashedid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The hash of the stored edit session id, for correlating success of stores and resumes.",
                    "endPoint": "none"
                }
            },
            "editSessions.store": {
                "owner": "joyceerhl",
                "comment": "Reporting when the store edit session action is invoked."
            },
            "editSessions.resume": {
                "owner": "joyceerhl",
                "comment": "Reporting when an edit session is resumed from an edit session identifier.",
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The outcome of resuming the edit session.",
                    "endPoint": "none"
                },
                "hashedid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The hash of the stored edit session id, for correlating success of stores and resumes.",
                    "endPoint": "none"
                }
            },
            "editSessions.resume.outcome": {
                "owner": "joyceerhl",
                "comment": "Reporting when an edit session is resumed from an edit session identifier.",
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The outcome of resuming the edit session.",
                    "endPoint": "none"
                },
                "hashedid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The hash of the stored edit session id, for correlating success of stores and resumes.",
                    "endPoint": "none"
                }
            },
            "editSessions.upload.failed": {
                "owner": "joyceerhl",
                "comment": "Reporting when Continue On server request fails.",
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The reason that the server request failed.",
                    "endPoint": "none"
                }
            },
            "continueOn.editSessions.canStore.outcome": {
                "owner": "joyceerhl",
                "comment": "Reporting whether we can and should store edit session as part of Continue On.",
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The outcome of checking whether we can store an edit session as part of the Continue On flow.",
                    "endPoint": "none"
                }
            },
            "continueOn.openDestination.outcome": {
                "owner": "joyceerhl",
                "comment": "Reporting the outcome of evaluating a selected Continue On destination option.",
                "selection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The selected Continue On destination option.",
                    "endPoint": "none"
                },
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The outcome of evaluating the selected Continue On destination option.",
                    "endPoint": "none"
                }
            },
            "searchEditor/saveSearchResults": {
                "owner": "roblourens",
                "comment": "Fired when a search editor is saved"
            },
            "searchEditor/openNewSearchEditor": {
                "owner": "roblourens",
                "comment": "Fired when a search editor is opened"
            },
            "searchEditor/createEditorFromSearchResult": {
                "owner": "roblourens",
                "comment": "Fired when a search editor is opened from the search view"
            },
            "interactiveEditor/session": {
                "owner": "jrieken",
                "comment": "Data about an interaction editor session",
                "extension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension providing the data",
                    "endPoint": "none"
                },
                "rounds": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of request that were made",
                    "endPoint": "none"
                },
                "undos": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Requests that have been undone",
                    "endPoint": "none"
                },
                "edits": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Did edits happen while the session was active",
                    "endPoint": "none"
                },
                "unstashed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How often did this session become stashed and resumed",
                    "endPoint": "none"
                },
                "finishedbyedit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Did edits cause the session to terminate",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "When the session started",
                    "endPoint": "none"
                },
                "endtime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "When the session ended",
                    "endPoint": "none"
                },
                "acceptedhunks": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of accepted hunks",
                    "endPoint": "none"
                },
                "discardedhunks": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of discarded hunks",
                    "endPoint": "none"
                },
                "responsetypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Comma separated list of response types like edits, message, mixed",
                    "endPoint": "none"
                }
            },
            "startup.resource.perf": {
                "owner": "jrieken",
                "comment": "Resource performance numbers",
                "hosthash": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Hash of the hostname",
                    "endPoint": "none"
                },
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Resource basename",
                    "endPoint": "none"
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Resource duration",
                    "endPoint": "none"
                }
            },
            "performance.inputLatency": {
                "owner": "tyriar",
                "comment": "This is a set of samples of the time (in milliseconds) that various events took when typing in the editor",
                "keydown.average": {
                    "owner": "tyriar",
                    "comment": "The minimum time it took to execute.",
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "keydown.max": {
                    "owner": "tyriar",
                    "comment": "The minimum time it took to execute.",
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "keydown.min": {
                    "owner": "tyriar",
                    "comment": "The minimum time it took to execute.",
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "input.average": {
                    "owner": "tyriar",
                    "comment": "The minimum time it took to execute.",
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "input.max": {
                    "owner": "tyriar",
                    "comment": "The minimum time it took to execute.",
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "input.min": {
                    "owner": "tyriar",
                    "comment": "The minimum time it took to execute.",
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "render.average": {
                    "owner": "tyriar",
                    "comment": "The minimum time it took to execute.",
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "render.max": {
                    "owner": "tyriar",
                    "comment": "The minimum time it took to execute.",
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "render.min": {
                    "owner": "tyriar",
                    "comment": "The minimum time it took to execute.",
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "total.average": {
                    "owner": "tyriar",
                    "comment": "The minimum time it took to execute.",
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "total.max": {
                    "owner": "tyriar",
                    "comment": "The minimum time it took to execute.",
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "total.min": {
                    "owner": "tyriar",
                    "comment": "The minimum time it took to execute.",
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "samplecount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The number of samples measured.",
                    "endPoint": "none"
                }
            },
            "startupHeapStatistics": {
                "owner": "bpasero",
                "comment": "An event that reports startup heap statistics for performance analysis.",
                "heapused": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Used heap",
                    "endPoint": "none"
                },
                "heapgarbage": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Garbage heap",
                    "endPoint": "none"
                },
                "majorgcs": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Major GCs count",
                    "endPoint": "none"
                },
                "minorgcs": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Minor GCs count",
                    "endPoint": "none"
                },
                "gcsduration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "GCs duration",
                    "endPoint": "none"
                }
            },
            "workspaceLoad": {
                "owner": "bpasero",
                "emptyworkbench": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether a folder or workspace is opened or not.",
                    "endPoint": "none"
                },
                "windowsize.innerheight": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The size of the window.",
                    "endPoint": "none",
                    "owner": "bpasero"
                },
                "windowsize.innerwidth": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The size of the window.",
                    "endPoint": "none",
                    "owner": "bpasero"
                },
                "windowsize.outerheight": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The size of the window.",
                    "endPoint": "none",
                    "owner": "bpasero"
                },
                "windowsize.outerwidth": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The size of the window.",
                    "endPoint": "none",
                    "owner": "bpasero"
                },
                "workbench.filestoopenorcreate": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that should open or be created.",
                    "endPoint": "none"
                },
                "workbench.filestodiff": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that should be compared.",
                    "endPoint": "none"
                },
                "workbench.filestomerge": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of files that should be merged.",
                    "endPoint": "none"
                },
                "customkeybindingscount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of custom keybindings",
                    "endPoint": "none"
                },
                "theme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The current theme of the window.",
                    "endPoint": "none"
                },
                "language": {
                    "classification": "SystemMetaData",
                    "purpose": "BusinessInsight",
                    "comment": "The display language of the window.",
                    "endPoint": "none"
                },
                "pinnedviewlets": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifiers of views that are pinned.",
                    "endPoint": "none"
                },
                "restoredviewlet": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifier of the view that is restored.",
                    "endPoint": "none"
                },
                "restorededitors": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of editors that restored.",
                    "endPoint": "none"
                },
                "startupkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How the window was opened, e.g via reload or not.",
                    "endPoint": "none"
                },
                "comment": "Metadata around the workspace that is being loaded into a window."
            },
            "fileGet": {
                "owner": "isidorn",
                "comment": "Track when a file was read, for example from an editor.",
                "mimetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language type of the file (for example XML).",
                    "endPoint": "none"
                },
                "ext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The file extension of the file (for example xml).",
                    "endPoint": "none"
                },
                "path": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The path of the file as a hash.",
                    "endPoint": "none"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The reason why a file is read or written. Allows to e.g. distinguish auto save from normal save.",
                    "endPoint": "none"
                },
                "allowlistedjson": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the file but only if it matches some well known file names such as package.json or tsconfig.json.",
                    "endPoint": "none"
                }
            },
            "filePUT": {
                "owner": "isidorn",
                "comment": "Track when a file was written to, for example from an editor.",
                "mimetype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language type of the file (for example XML).",
                    "endPoint": "none"
                },
                "ext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The file extension of the file (for example xml).",
                    "endPoint": "none"
                },
                "path": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The path of the file as a hash.",
                    "endPoint": "none"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The reason why a file is read or written. Allows to e.g. distinguish auto save from normal save.",
                    "endPoint": "none"
                },
                "allowlistedjson": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the file but only if it matches some well known file names such as package.json or tsconfig.json.",
                    "endPoint": "none"
                }
            },
            "workbench.activityBar.location": {
                "owner": "sandy081",
                "comment": "This is used to know where activity bar is shown in the workbench.",
                "settingvalue": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "value of the setting",
                    "endPoint": "none"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "source of the setting",
                    "endPoint": "none"
                }
            },
            "extensions.autoUpdate": {
                "owner": "sandy081",
                "comment": "This is used to know if extensions are getting auto updated or not",
                "settingvalue": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "value of the setting",
                    "endPoint": "none"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "source of the setting",
                    "endPoint": "none"
                }
            },
            "editor.stickyScroll.enabled": {
                "owner": "aiday-mar",
                "comment": "This is used to know if editor sticky scroll is enabled or not",
                "settingvalue": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "value of the setting",
                    "endPoint": "none"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "source of the setting",
                    "endPoint": "none"
                }
            },
            "typescript.experimental.expandableHover": {
                "owner": "aiday-mar",
                "comment": "This is used to know if the TypeScript expandbale hover is enabled or not",
                "settingvalue": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "value of the setting",
                    "endPoint": "none"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "source of the setting",
                    "endPoint": "none"
                }
            },
            "window.titleBarStyle": {
                "owner": "benibenj",
                "comment": "This is used to know if window title bar style is set to custom or not",
                "settingvalue": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "value of the setting",
                    "endPoint": "none"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "source of the setting",
                    "endPoint": "none"
                }
            },
            "extensions.verifySignature": {
                "owner": "sandy081",
                "comment": "This is used to know if extensions signature verification is enabled or not",
                "settingvalue": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "value of the setting",
                    "endPoint": "none"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "source of the setting",
                    "endPoint": "none"
                }
            },
            "window.newWindowProfile": {
                "owner": "sandy081",
                "comment": "This is used to know the new window profile that is being used",
                "settingvalue": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "if the profile is default or not",
                    "endPoint": "none"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "source of the setting",
                    "endPoint": "none"
                }
            },
            "extensions.autoRestart": {
                "owner": "sandy081",
                "comment": "This is used to know if extensions are getting auto restarted or not",
                "settingvalue": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "value of the setting",
                    "endPoint": "none"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "source of the setting",
                    "endPoint": "none"
                }
            },
            "remoteConnectionHealth": {
                "owner": "alexdima",
                "comment": "The remote connection health has changed (round trip time)",
                "remotename": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the resolver.",
                    "endPoint": "none"
                },
                "reconnectiontoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The identifier of the connection.",
                    "endPoint": "none"
                },
                "connectionhealth": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The health of the connection: good or poor.",
                    "endPoint": "none"
                }
            },
            "remoteConnectionSuccess": {
                "owner": "alexdima",
                "comment": "The initial connection succeeded",
                "web": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Is web ui.",
                    "endPoint": "none"
                },
                "connectiontimems": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time, in ms, until connected",
                    "endPoint": "none"
                },
                "remotename": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the resolver.",
                    "endPoint": "none"
                }
            },
            "remoteConnectionFailure": {
                "owner": "alexdima",
                "comment": "The initial connection failed",
                "web": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Is web ui.",
                    "endPoint": "none"
                },
                "remotename": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the resolver.",
                    "endPoint": "none"
                },
                "connectiontimems": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time, in ms, until connection failure",
                    "endPoint": "none"
                },
                "message": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Error message",
                    "endPoint": "none"
                }
            },
            "remoteConnectionLatency": {
                "owner": "connor4312",
                "comment": "The latency to the remote extension host",
                "web": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether this is running on web",
                    "endPoint": "none"
                },
                "remotename": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Anonymized remote name",
                    "endPoint": "none"
                },
                "latencyms": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Latency to the remote, in milliseconds",
                    "endPoint": "none"
                }
            },
            "remoteReconnectionReload": {
                "owner": "alexdima",
                "comment": "The reload button in the builtin permanent reconnection failure dialog was pressed",
                "remotename": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the resolver.",
                    "endPoint": "none"
                },
                "reconnectiontoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The identifier of the connection.",
                    "endPoint": "none"
                },
                "millissincelastincomingdata": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Elapsed time (in ms) since data was last received.",
                    "endPoint": "none"
                },
                "attempt": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The reconnection attempt counter.",
                    "endPoint": "none"
                }
            },
            "remoteConnectionLost": {
                "owner": "alexdima",
                "comment": "The remote connection state is now `ConnectionLost`",
                "remotename": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the resolver.",
                    "endPoint": "none"
                },
                "reconnectiontoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The identifier of the connection.",
                    "endPoint": "none"
                }
            },
            "remoteReconnectionRunning": {
                "owner": "alexdima",
                "comment": "The remote connection state is now `ReconnectionRunning`",
                "remotename": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the resolver.",
                    "endPoint": "none"
                },
                "reconnectiontoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The identifier of the connection.",
                    "endPoint": "none"
                },
                "millissincelastincomingdata": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Elapsed time (in ms) since data was last received.",
                    "endPoint": "none"
                },
                "attempt": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The reconnection attempt counter.",
                    "endPoint": "none"
                }
            },
            "remoteReconnectionPermanentFailure": {
                "owner": "alexdima",
                "comment": "The remote connection state is now `ReconnectionPermanentFailure`",
                "remotename": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the resolver.",
                    "endPoint": "none"
                },
                "reconnectiontoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The identifier of the connection.",
                    "endPoint": "none"
                },
                "millissincelastincomingdata": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Elapsed time (in ms) since data was last received.",
                    "endPoint": "none"
                },
                "attempt": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The reconnection attempt counter.",
                    "endPoint": "none"
                },
                "handled": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The error was handled by the resolver.",
                    "endPoint": "none"
                }
            },
            "remoteConnectionGain": {
                "owner": "alexdima",
                "comment": "The remote connection state is now `ConnectionGain`",
                "remotename": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the resolver.",
                    "endPoint": "none"
                },
                "reconnectiontoken": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The identifier of the connection.",
                    "endPoint": "none"
                },
                "millissincelastincomingdata": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Elapsed time (in ms) since data was last received.",
                    "endPoint": "none"
                },
                "attempt": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The reconnection attempt counter.",
                    "endPoint": "none"
                }
            },
            "shareService.share": {
                "owner": "joyceerhl",
                "comment": "Reporting which share provider is invoked.",
                "providerid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the selected share provider.",
                    "endPoint": "none"
                }
            },
            "notebook/editorOpened": {
                "owner": "rebornix",
                "comment": "Identify the notebook editor view type",
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File system provider scheme for the resource",
                    "endPoint": "none"
                },
                "ext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File extension for the resource",
                    "endPoint": "none"
                },
                "viewtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "View type of the notebook editor",
                    "endPoint": "none"
                },
                "isrepl": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the notebook editor is within a REPL editor",
                    "endPoint": "none"
                }
            },
            "notebook/editorOpenPerf": {
                "owner": "rebornix",
                "comment": "The notebook file open metrics. Used to get a better understanding of the performance of notebook file opening",
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File system provider scheme for the notebook resource",
                    "endPoint": "none"
                },
                "ext": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File extension for the notebook resource",
                    "endPoint": "none"
                },
                "viewtype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The view type of the notebook editor",
                    "endPoint": "none"
                },
                "extensionactivated": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Extension activation time for the resource opening",
                    "endPoint": "none"
                },
                "inputloaded": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Editor Input loading time for the resource opening",
                    "endPoint": "none"
                },
                "webviewcommloaded": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Webview initialization time for the resource opening",
                    "endPoint": "none"
                },
                "custommarkdownloaded": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Custom markdown loading time for the resource opening",
                    "endPoint": "none"
                },
                "editorloaded": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Overall editor loading time for the resource opening",
                    "endPoint": "none"
                },
                "codecellcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of code cell",
                    "endPoint": "none"
                },
                "mdcellcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of markdown cell",
                    "endPoint": "none"
                },
                "outputcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of cell outputs",
                    "endPoint": "none"
                },
                "outputbytes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of bytes for all outputs",
                    "endPoint": "none"
                },
                "codelength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Length of text in all code cells",
                    "endPoint": "none"
                },
                "markdownlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Length of text in all markdown cells",
                    "endPoint": "none"
                },
                "notebookstatsloaded": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time for generating the notebook level information for telemetry",
                    "endPoint": "none"
                }
            },
            "suggest.durations.json": {
                "owner": "jrieken",
                "comment": "Completions performance numbers",
                "data": {
                    "comment": "Durations per source and overall",
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                }
            },
            "suggest.acceptedSuggestion": {
                "owner": "jrieken",
                "comment": "Information accepting completion items",
                "extensionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "Extension contributing the completions item",
                    "endPoint": "none"
                },
                "providerid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "Provider of the completions item",
                    "endPoint": "none"
                },
                "basenamehash": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "Hash of the basename of the file into which the completion was inserted",
                    "endPoint": "none"
                },
                "fileextension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "File extension of the file into which the completion was inserted",
                    "endPoint": "none"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Language type of the file into which the completion was inserted",
                    "endPoint": "none"
                },
                "kind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The completion item kind",
                    "endPoint": "none"
                },
                "resolveinfo": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the item was inserted before resolving was done",
                    "endPoint": "none"
                },
                "resolveduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How long resolving took to finish",
                    "endPoint": "none"
                },
                "commandduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How long a completion item command took",
                    "endPoint": "none"
                },
                "additionaleditsasync": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Info about asynchronously applying additional edits",
                    "endPoint": "none"
                },
                "index": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The index of the completion item in the sorted list.",
                    "endPoint": "none"
                },
                "firstindex": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "When there are multiple completions, the index of the first instance.",
                    "endPoint": "none"
                }
            },
            "codeAction.applyCodeAction": {
                "codeactiontitle": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The display label of the applied code action",
                    "endPoint": "none"
                },
                "codeactionkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The kind (refactor, quickfix) of the applied code action",
                    "endPoint": "none"
                },
                "codeactionispreferred": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Was the code action marked as being a preferred action?",
                    "endPoint": "none"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The kind of action used to trigger apply code action.",
                    "endPoint": "none"
                },
                "owner": "justschen",
                "comment": "Event used to gain insights into which code actions are being triggered"
            },
            "editorAsyncPaste": {
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The duration of the paste operation.",
                    "endPoint": "none"
                },
                "owner": "aiday-mar",
                "comment": "Provides insight into the delay introduced by pasting async via keybindings."
            },
            "automaticlanguagedetection.stats": {
                "owner": "TylerLeonhardt",
                "comment": "Used to determine how definitive language detection is and how long it takes.",
                "languages": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The languages the model supports.",
                    "endPoint": "none"
                },
                "confidences": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The confidences of those languages.",
                    "endPoint": "none"
                },
                "timespent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How long the operation took.",
                    "endPoint": "none"
                }
            },
            "automaticlanguagedetection.perf": {
                "owner": "TylerLeonhardt",
                "comment": "Helps understand how effective language detection and how long it takes to run",
                "timespent": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time it took to run language detection",
                    "endPoint": "none"
                },
                "detection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language that was detected",
                    "endPoint": "none"
                }
            },
            "coreExperimentation.experimentCohort": {
                "owner": "bhavyaus",
                "comment": "Records which experiment cohort the user is in for core experiments",
                "experimentname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the experiment",
                    "endPoint": "none"
                },
                "cohort": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The exact cohort number for the user",
                    "endPoint": "none"
                },
                "subcohort": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The exact sub-cohort number for the user in the experiment cohort",
                    "endPoint": "none"
                },
                "experimentgroup": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The experiment group the user is in",
                    "endPoint": "none"
                },
                "iteration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The iteration number for the experiment",
                    "endPoint": "none"
                },
                "isinexperiment": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user is in the experiment",
                    "endPoint": "none"
                }
            },
            "startup.timer.mark": {
                "owner": "jrieken",
                "comment": "Information about a performance marker",
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Where this marker was generated, e.g main, renderer, extension host",
                    "endPoint": "none"
                },
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of this marker (as defined in source code)",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The absolute timestamp (unix time)",
                    "endPoint": "none"
                }
            },
            "tasClientReadTreatmentComplete": {
                "owner": "sbatten",
                "comment": "Logged when a treatment value is read from the experiment service",
                "treatmentvalue": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The value of the read treatment",
                    "endPoint": "none"
                },
                "treatmentname": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the treatment that was read",
                    "endPoint": "none"
                }
            },
            "cachedSearchComplete": {
                "owner": "roblourens",
                "comment": "Fired when a file search is completed from previously cached results",
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Indicates which extension or UI feature triggered this search",
                    "endPoint": "none"
                },
                "resultcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The number of search results",
                    "endPoint": "none"
                },
                "workspacefoldercount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The number of folders in the workspace",
                    "endPoint": "none"
                },
                "endtoendtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The total search time",
                    "endPoint": "none"
                },
                "sortingtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The amount of time spent sorting results",
                    "endPoint": "none"
                },
                "cachewasresolved": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the cache was already resolved when the search began",
                    "endPoint": "none"
                },
                "cachelookuptime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The amount of time spent looking up the cache to use for the search",
                    "endPoint": "none"
                },
                "cachefiltertime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The amount of time spent searching within the cache",
                    "endPoint": "none"
                },
                "cacheentrycount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The number of entries in the searched-in cache",
                    "endPoint": "none"
                },
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The uri scheme of the folder searched in",
                    "endPoint": "none"
                }
            },
            "searchComplete": {
                "owner": "roblourens",
                "comment": "Fired when a file search is completed",
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Indicates which extension or UI feature triggered this search",
                    "endPoint": "none"
                },
                "resultcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The number of search results",
                    "endPoint": "none"
                },
                "workspacefoldercount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The number of folders in the workspace",
                    "endPoint": "none"
                },
                "endtoendtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The total search time",
                    "endPoint": "none"
                },
                "sortingtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The amount of time spent sorting results",
                    "endPoint": "none"
                },
                "filewalktime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The amount of time spent walking file system",
                    "endPoint": "none"
                },
                "directorieswalked": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The number of directories walked",
                    "endPoint": "none"
                },
                "fileswalked": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The number of files walked",
                    "endPoint": "none"
                },
                "cmdtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The amount of time spent running the search command",
                    "endPoint": "none"
                },
                "cmdresultcount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The number of results returned from the search command",
                    "endPoint": "none"
                },
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The uri scheme of the folder searched in",
                    "endPoint": "none"
                }
            },
            "textSearchComplete": {
                "owner": "roblourens",
                "comment": "Fired when a text search is completed",
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Indicates which extension or UI feature triggered this search",
                    "endPoint": "none"
                },
                "workspacefoldercount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The number of folders in the workspace",
                    "endPoint": "none"
                },
                "endtoendtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The total search time",
                    "endPoint": "none"
                },
                "scheme": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The uri scheme of the folder searched in",
                    "endPoint": "none"
                },
                "error": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The type of the error, if any",
                    "endPoint": "none"
                }
            },
            "extensionHostStartup": {
                "owner": "alexdima",
                "comment": "The startup state of the extension host",
                "time": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The time reported by Date.now().",
                    "endPoint": "none"
                },
                "action": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The action: starting, success or error.",
                    "endPoint": "none"
                },
                "kind": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The extension host kind: LocalProcess, LocalWebWorker or Remote.",
                    "endPoint": "none"
                },
                "errorname": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The error name.",
                    "endPoint": "none"
                },
                "errormessage": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The error message.",
                    "endPoint": "none"
                },
                "errorstack": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The error stack.",
                    "endPoint": "none"
                }
            },
            "extensionhost.incoming": {
                "owner": "jrieken",
                "comment": "Insights about RPC message sizes",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The type of the RPC message",
                    "endPoint": "none"
                },
                "length": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The byte-length of the RPC message",
                    "endPoint": "none"
                }
            },
            "extensionhost.outgoing": {
                "owner": "jrieken",
                "comment": "Insights about RPC message sizes",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The type of the RPC message",
                    "endPoint": "none"
                },
                "length": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The byte-length of the RPC message",
                    "endPoint": "none"
                }
            },
            "extensionsMessage": {
                "owner": "alexdima",
                "comment": "A validation message for an extension",
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Severity of problem.",
                    "endPoint": "none"
                },
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The identifier of the extension that has a problem.",
                    "endPoint": "none"
                },
                "extensionpointid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The extension point that has a problem.",
                    "endPoint": "none"
                },
                "message": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The message of the problem.",
                    "endPoint": "none"
                }
            },
            "extensionActivationError": {
                "owner": "alexdima",
                "comment": "An extension failed to activate",
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The identifier of the extension.",
                    "endPoint": "none"
                },
                "error": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The error message.",
                    "endPoint": "none"
                }
            },
            "extensionHostCrash": {
                "owner": "alexdima",
                "comment": "The extension host has terminated unexpectedly",
                "code": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The exit code of the extension host process.",
                    "endPoint": "none"
                },
                "signal": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The signal that caused the extension host process to exit.",
                    "endPoint": "none"
                },
                "extensionids": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The list of loaded extensions.",
                    "endPoint": "none"
                }
            },
            "extensionHostCrashExtension": {
                "owner": "alexdima",
                "comment": "The extension host has terminated unexpectedly",
                "code": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The exit code of the extension host process.",
                    "endPoint": "none"
                },
                "signal": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The signal that caused the extension host process to exit.",
                    "endPoint": "none"
                },
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The identifier of the extension.",
                    "endPoint": "none"
                }
            },
            "accessibility": {
                "owner": "isidorn",
                "comment": "Helps gain an understanding of when accessibility features are being used",
                "enabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether or not accessibility features are enabled",
                    "endPoint": "none"
                }
            },
            "viewDescriptorService.moveViews": {
                "owner": "benibenj",
                "comment": "Logged when views are moved from one view container to another",
                "viewcount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of views moved",
                    "endPoint": "none"
                },
                "fromcontainer": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The starting view container of the moved views",
                    "endPoint": "none"
                },
                "tocontainer": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The destination view container of the moved views",
                    "endPoint": "none"
                },
                "fromlocation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The location of the starting view container. e.g. Primary Side Bar",
                    "endPoint": "none"
                },
                "tolocation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The location of the destination view container. e.g. Panel",
                    "endPoint": "none"
                }
            },
            "auxiliaryWindowOpen": {
                "owner": "bpasero",
                "comment": "An event that fires when an auxiliary window is opened",
                "bounds": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Has window bounds provided.",
                    "endPoint": "none"
                }
            },
            "workspaceextension:uninstall": {
                "owner": "sandy081",
                "comment": "Uninstall workspace extension"
            },
            "extensions:trustPublisher": {
                "owner": "sandy081",
                "comment": "Report the action taken by the user on the publisher trust dialog",
                "action": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The action taken by the user on the publisher trust dialog. Can be trust, learn more or cancel.",
                    "endPoint": "none"
                },
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifiers of the extension for which the publisher trust dialog was shown.",
                    "endPoint": "none"
                }
            },
            "workspaceextension:install": {
                "owner": "sandy081",
                "comment": "Install workspace extension"
            },
            "activatePlugin": {
                "owner": "jrieken",
                "comment": "Data about how/why an extension was activated",
                "id": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifier of an extension",
                    "endPoint": "none"
                },
                "name": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the extension",
                    "endPoint": "none"
                },
                "isbuiltin": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the extension is builtin or git installed",
                    "endPoint": "none"
                },
                "publisherdisplayname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The publisher of the extension",
                    "endPoint": "none"
                },
                "themeid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the theme that triggered the first extension use.",
                    "endPoint": "none"
                },
                "extensionversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The version of the extension",
                    "endPoint": "none"
                },
                "activationevents": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "All activation events of the extension",
                    "endPoint": "none"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The activation event",
                    "endPoint": "none"
                },
                "reasonid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifier of the activation event",
                    "endPoint": "none"
                }
            },
            "editor.tokenizedLine": {
                "owner": "hediet",
                "timems": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "To understand how long it took to tokenize a random line",
                    "endPoint": "none"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "To relate the performance to the language",
                    "endPoint": "none"
                },
                "linelength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "To relate the performance to the line length",
                    "endPoint": "none"
                },
                "fromworker": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "To figure out if this line was tokenized sync or async",
                    "endPoint": "none"
                },
                "sourceextensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "To figure out which extension contributed the grammar",
                    "endPoint": "none"
                },
                "israndomsample": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "To figure out if this is a random sample or measured because of some other condition.",
                    "endPoint": "none"
                },
                "tokenizationsetting": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "To understand if the user has async tokenization enabled. 0=sync, 1=async, 2=verification",
                    "endPoint": "none"
                },
                "comment": "This event gives insight about the performance certain grammars."
            },
            "clientPlatformInfo": {
                "platformid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A string identifying the operating system without any version information.",
                    "endPoint": "none"
                },
                "platformversionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A string identifying the operating system version excluding any name information or release code.",
                    "endPoint": "none"
                },
                "platformidlike": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A string identifying the operating system the current OS derivate is closely related to.",
                    "endPoint": "none"
                },
                "desktopenvironment": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A string identifying the desktop environment the user is using.",
                    "endPoint": "none"
                },
                "displayprotocol": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A string identifying the users display protocol type.",
                    "endPoint": "none"
                },
                "codedisplayprotocol": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A string identifying the vscode display protocol type.",
                    "endPoint": "none"
                },
                "owner": "benibenj",
                "comment": "Provides insight into the distro and desktop environment information on Linux."
            },
            "update:error": {
                "owner": "joaomoreno",
                "messagehash": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The hash of the error message.",
                    "endPoint": "none"
                },
                "comment": "This is used to know how often VS Code updates have failed."
            },
            "update:downloaded": {
                "owner": "joaomoreno",
                "newversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The version number of the new VS Code that has been downloaded.",
                    "endPoint": "none"
                },
                "comment": "This is used to know how often VS Code has successfully downloaded the update."
            },
            "unresponsive.sample": {
                "owner": "jrieken",
                "comment": "A callstack that took a long time to execute",
                "selftime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Self time of the sample",
                    "endPoint": "none"
                },
                "totaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Total time of the sample",
                    "endPoint": "none"
                },
                "percentage": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Relative time (percentage) of the sample",
                    "endPoint": "none"
                },
                "perfbaseline": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Performance baseline for the machine",
                    "endPoint": "none"
                },
                "functionname": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The name of the sample",
                    "endPoint": "none"
                },
                "callers": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The heaviest call trace into this sample",
                    "endPoint": "none"
                },
                "callersannotated": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The heaviest call trace into this sample annotated with respective costs",
                    "endPoint": "none"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The source - either renderer or an extension",
                    "endPoint": "none"
                }
            },
            "sync/error": {
                "owner": "sandy081",
                "comment": "Information about the error that occurred while syncing",
                "code": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "error code",
                    "endPoint": "none"
                },
                "service": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Settings Sync service for which this error has occurred",
                    "endPoint": "none"
                },
                "servercode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Settings Sync service error code",
                    "endPoint": "none"
                },
                "url": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Settings Sync resource URL for which this error has occurred",
                    "endPoint": "none"
                },
                "resource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Settings Sync resource for which this error has occurred",
                    "endPoint": "none"
                },
                "executionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Settings Sync execution id for which this error has occurred",
                    "endPoint": "none"
                }
            },
            "settingsSync:sync": {
                "owner": "sandy081",
                "comment": "Report when running a sync operation",
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Time taken to run sync operation",
                    "endPoint": "none"
                }
            },
            "workspace.stats": {
                "owner": "lramos15",
                "comment": "Metadata related to the workspace",
                "workspace.id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A UUID given to a workspace to identify it.",
                    "endPoint": "none"
                },
                "renderersessionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the session",
                    "endPoint": "none"
                }
            },
            "workspace.stats.file": {
                "owner": "lramos15",
                "comment": "Helps us gain insights into what type of files are being used in a workspace",
                "renderersessionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the session.",
                    "endPoint": "none"
                },
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of file",
                    "endPoint": "none"
                },
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many types of that file are present",
                    "endPoint": "none"
                }
            },
            "workspace.stats.launchConfigFile": {
                "owner": "lramos15",
                "comment": "Helps us gain insights into what type of files are being used in a workspace",
                "renderersessionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the session.",
                    "endPoint": "none"
                },
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of file",
                    "endPoint": "none"
                },
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many types of that file are present",
                    "endPoint": "none"
                }
            },
            "workspace.stats.configFiles": {
                "owner": "lramos15",
                "comment": "Helps us gain insights into what type of files are being used in a workspace",
                "renderersessionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the session.",
                    "endPoint": "none"
                },
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of file",
                    "endPoint": "none"
                },
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How many types of that file are present",
                    "endPoint": "none"
                }
            },
            "workspace.stats.metadata": {
                "owner": "jrieken",
                "comment": "Metadata about workspace metadata collection",
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How did it take to make workspace stats",
                    "endPoint": "none"
                },
                "reachedlimit": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Did making workspace stats reach its limits",
                    "endPoint": "none"
                },
                "filecount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many files did workspace stats discover",
                    "endPoint": "none"
                },
                "readdircount": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many readdir call were needed",
                    "endPoint": "none"
                }
            },
            "windowerror": {
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The type of window error to understand the nature of the error better.",
                    "endPoint": "none"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The reason of the window error to understand the nature of the error better.",
                    "endPoint": "none"
                },
                "code": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The exit code of the window process to understand the nature of the error better",
                    "endPoint": "none"
                },
                "owner": "bpasero",
                "comment": "Provides insight into reasons the vscode window had an error."
            },
            "utilityprocessv8error": {
                "processtype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The type of utility process to understand the origin of the crash better.",
                    "endPoint": "none"
                },
                "error": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The type of error from the utility process to understand the nature of the crash better.",
                    "endPoint": "none"
                },
                "location": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The source location that triggered the crash to understand the nature of the crash better.",
                    "endPoint": "none"
                },
                "addons": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The list of addons loaded in the utility process to understand the nature of the crash better",
                    "endPoint": "none"
                },
                "owner": "deepak1556",
                "comment": "Provides insight into V8 sandbox FATAL error caused by native addons."
            },
            "utilityprocesscrash": {
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The type of utility process to understand the origin of the crash better.",
                    "endPoint": "none"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The reason of the utility process crash to understand the nature of the crash better.",
                    "endPoint": "none"
                },
                "code": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The exit code of the utility process to understand the nature of the crash better",
                    "endPoint": "none"
                },
                "owner": "bpasero",
                "comment": "Provides insight into reasons the utility process crashed."
            },
            "signal.played": {
                "owner": "hediet",
                "signal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The signal that was played.",
                    "endPoint": "none"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The source that triggered the signal (e.g. \\\"diffEditorNavigation\\\").",
                    "endPoint": "none"
                },
                "isscreenreaderoptimized": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the user is using a screen reader",
                    "endPoint": "none"
                },
                "comment": "This data is collected to understand how signals are used and if more signals should be added."
            },
            "exeExtensionRecommendations:alreadyInstalled": {
                "owner": "sandy081",
                "comment": "Information about executable based extension recommendation",
                "extensionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "id of the recommended extension",
                    "endPoint": "none"
                },
                "exename": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "name of the executable for which extension is being recommended",
                    "endPoint": "none"
                }
            },
            "exeExtensionRecommendations:notInstalled": {
                "owner": "sandy081",
                "comment": "Information about executable based extension recommendation",
                "extensionid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "id of the recommended extension",
                    "endPoint": "none"
                },
                "exename": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "name of the executable for which extension is being recommended",
                    "endPoint": "none"
                }
            },
            "galleryService:additionalQueryByName": {
                "owner": "sandy081",
                "comment": "Report the query to the Marketplace for fetching extensions by name",
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of extensions to fetch",
                    "endPoint": "none"
                }
            },
            "galleryService:fallbacktounpkg": {
                "owner": "sandy081",
                "comment": "Report the fallback to the unpkg service for getting latest extension",
                "extension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Extension id",
                    "endPoint": "none"
                },
                "prerelease": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Get pre-release version",
                    "endPoint": "none"
                },
                "compatible": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Get compatible version",
                    "endPoint": "none"
                }
            },
            "galleryService:fallbacktoquery": {
                "owner": "sandy081",
                "comment": "Report the fallback to the Marketplace query for fetching extensions",
                "extension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Extension id",
                    "endPoint": "none"
                },
                "prerelease": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Get pre-release version",
                    "endPoint": "none"
                },
                "compatible": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Get compatible version",
                    "endPoint": "none"
                },
                "fromfallback": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "From fallback",
                    "endPoint": "none"
                }
            },
            "galleryService:engineFallback": {
                "owner": "sandy081",
                "comment": "Fallback request when engine is not found in properties of an extension version",
                "extension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "extension name",
                    "endPoint": "none"
                },
                "extensionversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "version",
                    "endPoint": "none"
                }
            },
            "galleryService:additionalQuery": {
                "owner": "sandy081",
                "comment": "Response information about the additional query to the Marketplace for fetching all versions to get release version",
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "Amount of time taken by the additional query",
                    "endPoint": "none"
                },
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of extensions returned by this additional query",
                    "endPoint": "none"
                }
            },
            "galleryService:query": {
                "owner": "sandy081",
                "comment": "Information about Marketplace query and its response",
                "filtertypes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Filter types used in the query.",
                    "endPoint": "none"
                },
                "flags": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Flags passed in the query.",
                    "endPoint": "none"
                },
                "sortby": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "sorted by option passed in the query",
                    "endPoint": "none"
                },
                "sortorder": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "sort order option passed in the query",
                    "endPoint": "none"
                },
                "pagenumber": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "requested page number in the query",
                    "endPoint": "none"
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "amount of time taken by the query request",
                    "endPoint": "none"
                },
                "success": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "whether the query request is success or not",
                    "endPoint": "none"
                },
                "requestbodysize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "size of the request body",
                    "endPoint": "none"
                },
                "responsebodysize": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "size of the response body",
                    "endPoint": "none"
                },
                "statuscode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "status code of the response",
                    "endPoint": "none"
                },
                "errorcode": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "error code of the response",
                    "endPoint": "none"
                },
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "total number of extensions matching the query",
                    "endPoint": "none"
                },
                "source": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "source that requested this query, eg., recommendations, viewlet",
                    "endPoint": "none"
                },
                "searchtextlength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "length of the search text in the query",
                    "endPoint": "none"
                },
                "server": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "server that handled the query",
                    "endPoint": "none"
                },
                "endtoendid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "end to end operation id",
                    "endPoint": "none"
                },
                "activityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "activity id",
                    "endPoint": "none"
                }
            },
            "galleryService:getLatest": {
                "owner": "sandy081",
                "comment": "Report the query to the Marketplace for fetching latest version of an extension",
                "host": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The host of the end point",
                    "endPoint": "none"
                },
                "extension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifier of the extension",
                    "endPoint": "none"
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "Duration in ms for the query",
                    "endPoint": "none"
                },
                "errorcode": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The error code in case of error",
                    "endPoint": "none"
                },
                "server": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The server of the end point",
                    "endPoint": "none"
                },
                "activityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The activity ID of the request",
                    "endPoint": "none"
                },
                "endtoendid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The end-to-end ID of the request",
                    "endPoint": "none"
                }
            },
            "galleryService:cdnFallback": {
                "owner": "sandy081",
                "comment": "Fallback request information when the primary asset request to CDN fails",
                "extension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "extension name",
                    "endPoint": "none"
                },
                "assettype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "asset that failed",
                    "endPoint": "none"
                },
                "message": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "error message",
                    "endPoint": "none"
                },
                "extensionversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "version",
                    "endPoint": "none"
                },
                "server": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "server that handled the query",
                    "endPoint": "none"
                },
                "endtoendid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "end to end operation id",
                    "endPoint": "none"
                },
                "activityid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "activity id",
                    "endPoint": "none"
                }
            },
            "extensionsignature:verification": {
                "owner": "sandy081",
                "comment": "Extension signature verification event",
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "extension identifier",
                    "endPoint": "none"
                },
                "extensionversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "extension version",
                    "endPoint": "none"
                },
                "code": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "result code of the verification",
                    "endPoint": "none"
                },
                "internalcode": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "internal code of the verification",
                    "endPoint": "none"
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "amount of time taken to verify the signature",
                    "endPoint": "none"
                },
                "didexecute": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "whether the verification was executed",
                    "endPoint": "none"
                },
                "clienttargetplatform": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "target platform of the client",
                    "endPoint": "none"
                }
            },
            "extension:extract": {
                "owner": "sandy081",
                "comment": "Update metadata error",
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "extension identifier",
                    "endPoint": "none"
                },
                "code": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "error code",
                    "endPoint": "none"
                },
                "isprofile": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Is writing into profile",
                    "endPoint": "none"
                }
            },
            "extensiongallery:downloadvsix:retry": {
                "owner": "sandy081",
                "comment": "Event reporting the retry of downloading",
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Extension Id",
                    "endPoint": "none"
                },
                "attempts": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "Number of Attempts",
                    "endPoint": "none"
                }
            },
            "extensiongallery:downloadsigzip:retry": {
                "owner": "sandy081",
                "comment": "Event reporting the retry of downloading",
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Extension Id",
                    "endPoint": "none"
                },
                "attempts": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "isMeasurement": true,
                    "comment": "Number of Attempts",
                    "endPoint": "none"
                }
            },
            "remoteTunnel.enablement": {
                "owner": "aeschli",
                "comment": "Reporting when Remote Tunnel access is turned on or off",
                "enabled": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Flag indicating if Remote Tunnel Access is enabled or not",
                    "endPoint": "none"
                },
                "service": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Flag indicating if Remote Tunnel Access is installed as a service",
                    "endPoint": "none"
                }
            },
            "webviews:createWebviewView": {
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the extension",
                    "endPoint": "none"
                },
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Id of the view",
                    "endPoint": "none"
                },
                "owner": "digitarald",
                "comment": "Helps to gain insights on what extension contributed views are most popular"
            },
            "inlineCompletion.endOfLife": {
                "owner": "benibenj",
                "comment": "Inline completions ended",
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifier for the inline completion request",
                    "endPoint": "none"
                },
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifier for the extension that contributed the inline completion",
                    "endPoint": "none"
                },
                "extensionversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The version of the extension that contributed the inline completion",
                    "endPoint": "none"
                },
                "shown": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the inline completion was shown to the user",
                    "endPoint": "none"
                },
                "shownduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The duration for which the inline completion was shown",
                    "endPoint": "none"
                },
                "showndurationuncollapsed": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The duration for which the inline completion was shown without collapsing",
                    "endPoint": "none"
                },
                "timeuntilshown": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The time it took for the inline completion to be shown after the request",
                    "endPoint": "none"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The reason for the inline completion ending",
                    "endPoint": "none"
                },
                "partiallyaccepted": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "How often the inline completion was partially accepted by the user",
                    "endPoint": "none"
                },
                "languageid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The language ID of the document where the inline completion was shown",
                    "endPoint": "none"
                },
                "requestreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The reason for the inline completion request",
                    "endPoint": "none"
                },
                "error": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The error message if the inline completion failed",
                    "endPoint": "none"
                },
                "superseded": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the inline completion was superseded by another one",
                    "endPoint": "none"
                },
                "editortype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The type of the editor where the inline completion was shown",
                    "endPoint": "none"
                },
                "viewkind": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The kind of the view where the inline completion was shown",
                    "endPoint": "none"
                },
                "cursorcolumndistance": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The distance in columns from the cursor to the inline suggestion",
                    "endPoint": "none"
                },
                "cursorlinedistance": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The distance in lines from the cursor to the inline suggestion",
                    "endPoint": "none"
                },
                "linecountoriginal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of lines in the original text",
                    "endPoint": "none"
                },
                "linecountmodified": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of lines in the modified text",
                    "endPoint": "none"
                },
                "charactercountoriginal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of characters in the original text",
                    "endPoint": "none"
                },
                "charactercountmodified": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of characters in the modified text",
                    "endPoint": "none"
                },
                "disjointreplacements": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The number of inner replacements made by the inline completion",
                    "endPoint": "none"
                },
                "sameshapereplacements": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether all inner replacements are the same shape",
                    "endPoint": "none"
                }
            },
            "authentication.providerNotDeclared": {
                "owner": "TylerLeonhardt",
                "comment": "An authentication provider was not declared in the Extension Manifest.",
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The provider id.",
                    "endPoint": "none"
                }
            },
            "authentication.clientIdUsage": {
                "owner": "TylerLeonhardt",
                "comment": "Used to see which extensions are using the VSCode client id override",
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension id.",
                    "endPoint": "none"
                }
            },
            "authentication.providerUsage": {
                "owner": "TylerLeonhardt",
                "comment": "Used to see which extensions are using which providers",
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension id.",
                    "endPoint": "none"
                },
                "providerid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The provider id.",
                    "endPoint": "none"
                }
            },
            "api/scm/createSourceControl": {
                "owner": "joaomoreno",
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The ID of the extension contributing to the Source Control API.",
                    "endPoint": "none"
                },
                "comment": "This is used to know what extensions contribute to the Source Control API."
            },
            "shimming.open": {
                "owner": "jrieken",
                "comment": "Know when the open-shim was used",
                "extension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension is question",
                    "endPoint": "none"
                }
            },
            "shimming.open.call.noForward": {
                "owner": "jrieken",
                "comment": "Know when the open-shim was used",
                "extension": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The extension is question",
                    "endPoint": "none"
                }
            },
            "extensionActivationTimes": {
                "owner": "jrieken",
                "comment": "Timestamps for extension activation",
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Did extension activation succeed or fail",
                    "endPoint": "none"
                },
                "id": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifier of an extension",
                    "endPoint": "none"
                },
                "name": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The name of the extension",
                    "endPoint": "none"
                },
                "extensionversion": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The version of the extension",
                    "endPoint": "none"
                },
                "publisherdisplayname": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The publisher of the extension",
                    "endPoint": "none"
                },
                "activationevents": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "All activation events of the extension",
                    "endPoint": "none"
                },
                "isbuiltin": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "If the extension is builtin or git installed",
                    "endPoint": "none"
                },
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The activation event",
                    "endPoint": "none"
                },
                "reasonid": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifier of the activation event",
                    "endPoint": "none"
                },
                "startup": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Activation occurred during startup",
                    "endPoint": "none"
                },
                "codeloadingtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time it took to load the extension's code",
                    "endPoint": "none"
                },
                "activatecalltime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time it took to call activate",
                    "endPoint": "none"
                },
                "activateresolvedtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Time it took for async-activation to finish",
                    "endPoint": "none"
                }
            },
            "debugProtocolMessageError": {
                "from": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The type of the debug adapter that the event is from.",
                    "endPoint": "none"
                },
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The type of the event that was malformed.",
                    "endPoint": "none"
                },
                "owner": "roblourens",
                "comment": "Sent to collect details about misbehaving debug extensions."
            },
            "Extension:ActionExecuted": {
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the extension handling the command, informing which extensions provide most-used functionality.",
                    "endPoint": "none"
                },
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The id of the command, to understand which specific extension features are most popular.",
                    "endPoint": "none"
                },
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The duration of the command execution, to detect performance issues",
                    "endPoint": "none"
                },
                "owner": "digitarald",
                "comment": "Used to gain insight on the most popular commands used from extensions"
            },
            "extHostDeprecatedApiUsage": {
                "extensionid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The id of the extension that is using the deprecated API",
                    "endPoint": "none"
                },
                "apiid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The id of the deprecated API",
                    "endPoint": "none"
                },
                "owner": "mjbvz",
                "comment": "Helps us gain insights on extensions using deprecated API so we can assist in migration to new API"
            },
            "fetchFeatureUse": {
                "owner": "chrmarti",
                "comment": "Data about fetch API use",
                "url": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the url property was used.",
                    "endPoint": "none"
                },
                "typeproperty": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the type property was used.",
                    "endPoint": "none"
                },
                "data": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether a data URL was used.",
                    "endPoint": "none"
                },
                "blob": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether a blob URL was used.",
                    "endPoint": "none"
                },
                "integrity": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the integrity property was used.",
                    "endPoint": "none"
                },
                "manualredirect": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether a manual redirect was used.",
                    "endPoint": "none"
                }
            },
            "proxyAuthenticationRequest": {
                "owner": "chrmarti",
                "comment": "Data about proxy authentication requests",
                "authenticationtype": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "comment": "Type of the authentication requested",
                    "endPoint": "none"
                },
                "extensionhosttype": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Type of the extension host",
                    "endPoint": "none"
                }
            },
            "startupLayout": {
                "owner": "benibenj",
                "comment": "Information about the layout of the workbench during statup",
                "activitybarvisible": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether or the not the activity bar is visible",
                    "endPoint": "none"
                },
                "sidebarvisible": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether or the not the primary side bar is visible",
                    "endPoint": "none"
                },
                "auxiliarybarvisible": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether or the not the secondary side bar is visible",
                    "endPoint": "none"
                },
                "panelvisible": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether or the not the panel is visible",
                    "endPoint": "none"
                },
                "statusbarvisible": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether or the not the status bar is visible",
                    "endPoint": "none"
                },
                "sidebarposition": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the primary side bar is on the left or right",
                    "endPoint": "none"
                },
                "panelposition": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Whether the panel is on the top, bottom, left, or right",
                    "endPoint": "none"
                }
            },
            "editorActionInvoked": {
                "owner": "alexdima",
                "comment": "An editor action has been invoked.",
                "name": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The label of the action that was invoked.",
                    "endPoint": "none"
                },
                "id": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The identifier of the action that was invoked.",
                    "endPoint": "none"
                }
            },
            "serverStart": {
                "owner": "alexdima",
                "comment": "The server has started up",
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The time the server started at.",
                    "endPoint": "none"
                },
                "startedtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The time the server began listening for connections.",
                    "endPoint": "none"
                },
                "codeloadedtime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The time which the code loaded on the server",
                    "endPoint": "none"
                },
                "readytime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The time when the server was completely ready",
                    "endPoint": "none"
                }
            },
            "serverPlatformInfo": {
                "platformid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A string identifying the operating system without any version information.",
                    "endPoint": "none"
                },
                "platformversionid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A string identifying the operating system version excluding any name information or release code.",
                    "endPoint": "none"
                },
                "platformidlike": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "A string identifying the operating system the current OS derivate is closely related to.",
                    "endPoint": "none"
                },
                "owner": "deepak1556",
                "comment": "Provides insight into the distro information on Linux."
            },
            "UnhandledError": {
                "owner": "lramos15, sbatten",
                "comment": "Whenever an error in VS Code is thrown.",
                "callstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The callstack of the error.",
                    "endPoint": "none"
                },
                "msg": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The message of the error. Normally the first line int the callstack.",
                    "endPoint": "none"
                },
                "file": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The file the error originated from.",
                    "endPoint": "none"
                },
                "line": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The line the error originate on.",
                    "endPoint": "none"
                },
                "column": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "The column of the line which the error orginated on.",
                    "endPoint": "none"
                },
                "uncaught_error_name": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "If the error is uncaught what is the error type",
                    "endPoint": "none"
                },
                "uncaught_error_msg": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "If the error is uncaught this is just msg but for uncaught errors.",
                    "endPoint": "none"
                },
                "count": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "comment": "How many times this error has been thrown",
                    "endPoint": "none"
                }
            },
            "notebook/SaveError": {
                "owner": "amunger",
                "comment": "Detect if we are having issues saving a notebook on the Extension Host",
                "isremote": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the save is happening on a remote file system",
                    "endPoint": "none"
                },
                "isipynbworkerserializer": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Whether the IPynb files are serialized in workers",
                    "endPoint": "none"
                },
                "error": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Info about the error that occurred",
                    "endPoint": "none"
                }
            }
        },
        "commonProperties": {
            "common.machineid": {
                "classification": "EndUserPseudonymizedInformation",
                "purpose": "FeatureInsight",
                "endPoint": "MacAddressHash"
            },
            "common.sqmid": {
                "classification": "EndUserPseudonymizedInformation",
                "purpose": "BusinessInsight",
                "endPoint": "SqmMachineId"
            },
            "common.devdeviceid": {
                "classification": "EndUserPseudonymizedInformation",
                "purpose": "BusinessInsight",
                "endPoint": "SqmMachineId"
            },
            "sessionid": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "commithash": {
                "classification": "SystemMetaData",
                "purpose": "PerformanceAndHealth",
                "endPoint": "none"
            },
            "version": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.releasedate": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.platformversion": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.platform": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.nodeplatform": {
                "classification": "SystemMetaData",
                "purpose": "PerformanceAndHealth",
                "endPoint": "none"
            },
            "common.nodearch": {
                "classification": "SystemMetaData",
                "purpose": "PerformanceAndHealth",
                "endPoint": "none"
            },
            "common.product": {
                "classification": "SystemMetaData",
                "purpose": "PerformanceAndHealth",
                "endPoint": "none"
            },
            "common.msftinternal": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none",
                "isMeasurement": true
            },
            "timestamp": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.timesincesessionstart": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none",
                "isMeasurement": true
            },
            "common.sequence": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none",
                "isMeasurement": true
            },
            "common.snap": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.platformdetail": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.version.shell": {
                "classification": "SystemMetaData",
                "purpose": "PerformanceAndHealth",
                "endPoint": "none"
            },
            "common.version.renderer": {
                "classification": "SystemMetaData",
                "purpose": "PerformanceAndHealth",
                "endPoint": "none"
            },
            "common.firstsessiondate": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.lastsessiondate": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.isnewsession": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.remoteauthority": {
                "classification": "SystemMetaData",
                "purpose": "PerformanceAndHealth",
                "endPoint": "none"
            },
            "common.cli": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.useragent": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.istouchdevice": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "abexp.assignmentcontext": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "pluginhosttelemetry": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none",
                "isMeasurement": true
            }
        }
    },
    "vscode-extensions": {
        "events": {
            "typescript-language-features/typeScriptExtension.trace": {
                "owner": "dirkb",
                "point": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The trace point.",
                    "endPoint": "none"
                },
                "traceid": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The traceId is used to correlate the request with other trace points.",
                    "endPoint": "none"
                },
                "data": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Additional data",
                    "endPoint": "none"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/tsserver.spawned": {
                "owner": "mjbvz",
                "localtypescriptversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "typescriptversionsource": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "hasglobalplugins": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "globalpluginnamehashes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/tsserver.error": {
                "owner": "mjbvz",
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "hasglobalplugins": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "globalpluginnamehashes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/tsserver.exitWithCode": {
                "owner": "mjbvz",
                "code": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "signal": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "hasglobalplugins": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "globalpluginnamehashes": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/serviceExited": {
                "owner": "mjbvz",
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/fatalError": {
                "owner": "mjbvz",
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "serverid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "sanitizedstack": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "badclient": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/typingsInstalled": {
                "owner": "mjbvz",
                "installedpackages": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "installsuccess": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "typingsinstallerversion": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/refactor.execute": {
                "owner": "mjbvz",
                "action": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "trigger": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/organizeImports.execute": {
                "owner": "mjbvz",
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/quickFix.execute": {
                "owner": "mjbvz",
                "fixname": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/quickFixAll.execute": {
                "owner": "mjbvz",
                "fixname": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/inlayHints.provide": {
                "owner": "mjbvz",
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/diagnostics.performance": {
                "owner": "mjbvz",
                "syntaxdiagduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "semanticdiagduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "suggestiondiagduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "regionsemanticdiagduration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "filelinecount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/typescript.diagnostics": {
                "owner": "aiday-mar",
                "diagnosticcodes": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/completions.accept": {
                "owner": "mjbvz",
                "ispackagejsonimport": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "isimportstatementcompletion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/completions.execute": {
                "owner": "mjbvz",
                "duration": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "type": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "count": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "flags": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "updategraphdurationms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "createautoimportproviderprogramdurationms": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "includespackagejsonimport": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "includesimportstatementcompletion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/aiQuickfix.execute": {
                "owner": "mjbvz",
                "action": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/aiRefactor.execute": {
                "owner": "mjbvz",
                "action": {
                    "classification": "PublicNonPersonalData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/js.hintProjectExcludes": {
                "owner": "mjbvz",
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "typescript-language-features/languageServiceErrorResponse": {
                "owner": "mjbvz",
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "serverid": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "sanitizedstack": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "badclient": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                }
            },
            "git/git.repositoryInitialScan": {
                "owner": "lszomoru",
                "autorepositorydetection": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Setting that controls the initial repository scan",
                    "endPoint": "none"
                },
                "repositorycount": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Number of repositories opened during initial repository scan",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "git/git.missing": {
                "owner": "lszomoru"
            },
            "git/clone": {
                "owner": "lszomoru",
                "outcome": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The outcome of the git operation",
                    "endPoint": "none"
                },
                "openfolder": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "comment": "Indicates whether the folder is opened following the clone operation",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "git/git.command": {
                "owner": "lszomoru",
                "command": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The command id of the command being executed",
                    "endPoint": "none"
                }
            },
            "git/statusLimit": {
                "owner": "lszomoru",
                "ignoresubmodules": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Setting indicating whether submodules are ignored",
                    "endPoint": "none"
                },
                "limit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Setting indicating the limit of status entries",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "statuslength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of status entries",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "totaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of ms the operation took",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "git/statusSlow": {
                "owner": "digitarald",
                "comment": "Reports when git status is slower than 5s",
                "expiration": "1.73",
                "ignoresubmodules": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Setting indicating whether submodules are ignored",
                    "endPoint": "none"
                },
                "didhitlimit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of status entries",
                    "endPoint": "none"
                },
                "didwarnaboutlimit": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "True when the user was warned about slow git status",
                    "endPoint": "none"
                },
                "statuslength": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of status entries",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "totaltime": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "Total number of ms the operation took",
                    "endPoint": "none",
                    "isMeasurement": true
                }
            },
            "json-language-features/json.schema": {
                "owner": "aeschli",
                "comment": "Measure the use of the Azure resource manager schemas",
                "schemaurl": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "comment": "The azure schema URL that was requested.",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/error": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/report-start-up-timings": {
                "requestedcontentwasnotdetectedreason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "steps": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "all": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "${wildcard}": [
                    {
                        "${prefix}": "request.",
                        "${classification}": {
                            "classification": "SystemMetaData",
                            "purpose": "FeatureInsight",
                            "endPoint": "none"
                        }
                    },
                    {
                        "${prefix}": "waitingafter",
                        "${classification}": {
                            "classification": "SystemMetaData",
                            "purpose": "FeatureInsight",
                            "endPoint": "none"
                        }
                    }
                ],
                "attach": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "attach.configuredebuggingsession.internal": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "attach.configuredebuggingsession.target": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "attach.configuredebuggingsession.end": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "attach.requestdebuggertargetsinformation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "attach.processdebuggertargetsinformation": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "attach.attachtotargetdebuggerwebsocket": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "beforefirststep": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "afterlaststep": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/initialize": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/configurationDone": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/launch": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/debugStarted": {
                "request": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "args": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/attach": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/debugStopped": {
                "reason": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/target/notification/onPaused": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/target/notification/onScriptParsed": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/exceptionInfo": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/toggleSmartStep": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/toggleSkipFileStatus": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/loadedSources": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/disconnect": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/setBreakpoints": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/setBreakpointsRequest": {
                "fileext": {
                    "classification": "CustomerContent",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/setExceptionBreakpoints": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/continue": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/continueRequest": {
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/next": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/nextRequest": {
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/stepIn": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/stepInRequest": {
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/stepOut": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/stepOutRequest": {
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/stepBack": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/reverseContinue": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/pause": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/pauseRequest": {
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/stackTrace": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/scopes": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/variables": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/source": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/threads": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/evaluate": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/setVariable": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/restartFrame": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/ClientRequest/completions": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/targetCount": {
                "numtargets": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none",
                    "isMeasurement": true
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/targetDebugProtocolVersion": {
                "debugprotocolversion": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                },
                "versions.debugadaptercore": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/error-while-adding-custom-global-property": {
                "successful": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptiontype": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionmessage": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "exceptionname": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionstack": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "!exceptionid": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "starttime": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                },
                "timetakeninmilliseconds": {
                    "classification": "SystemMetaData",
                    "purpose": "PerformanceAndHealth",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/nodeVersion": {
                "version": {
                    "classification": "SystemMetaData",
                    "purpose": "FeatureInsight",
                    "endPoint": "none"
                }
            },
            "ms-vscode.node/debugProtocolErrorResponse": {
                "error": {
                    "classification": "CallstackOrException",
                    "purpose": "PerformanceAndHealth"
                }
            },
            "ms-vscode.node/optinstatus": {
                "optin": {
                    "classification": "SystemMetaData",
                    "purpose": "BusinessInsight",
                    "isMeasurement": true
                }
            }
        },
        "commonProperties": {
            "common.os": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.nodearch": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.platformversion": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.extname": {
                "classification": "PublicNonPersonalData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.extversion": {
                "classification": "PublicNonPersonalData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.vscodemachineid": {
                "classification": "EndUserPseudonymizedInformation",
                "purpose": "FeatureInsight",
                "endPoint": "MacAddressHash"
            },
            "common.vscodesessionid": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.vscodecommithash": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.vscodeversion": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.uikind": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.remotename": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.isnewappinstall": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.product": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            },
            "common.telemetryclientversion": {
                "classification": "SystemMetaData",
                "purpose": "FeatureInsight",
                "endPoint": "none"
            }
        }
    }
}
